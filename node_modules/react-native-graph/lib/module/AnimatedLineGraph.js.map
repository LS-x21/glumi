{"version":3,"sources":["AnimatedLineGraph.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","View","StyleSheet","Canvas","runSpring","LinearGradient","Path","Skia","useValue","useComputedValue","vec","Group","useSharedValueEffect","mix","Circle","Shadow","SelectionDot","DefaultSelectionDot","createGraphPath","createGraphPathWithGradient","getGraphPathRange","pixelFactorX","Reanimated","runOnJS","useAnimatedReaction","useSharedValue","useDerivedValue","cancelAnimation","withRepeat","withSequence","withTiming","withDelay","getSixDigitHex","GestureDetector","usePanGesture","getYForX","hexToRgba","INDICATOR_RADIUS","INDICATOR_BORDER_MULTIPLIER","INDICATOR_PULSE_BLUR_RADIUS_SMALL","INDICATOR_PULSE_BLUR_RADIUS_BIG","ReanimatedView","AnimatedLineGraph","points","color","gradientFillColors","lineThickness","range","enableFadeInMask","enablePanGesture","onPointSelected","onGestureStart","onGestureEnd","enableIndicator","indicatorPulsating","horizontalPadding","verticalPadding","TopAxisLabel","BottomAxisLabel","props","width","setWidth","height","setHeight","interpolateProgress","gesture","isActive","x","holdDuration","circleX","circleY","pathEnd","indicatorRadius","indicatorBorderRadius","current","pulseTrigger","value","indicatorPulseAnimation","indicatorPulseRadius","indicatorPulseOpacity","positions","Math","min","onLayout","nativeEvent","layout","round","straightLine","path","Make","moveTo","i","y","cubicTo","paths","gradientPaths","commands","commandsChanged","setCommandsChanged","pathRange","drawingWidth","lastPoint","length","max","floor","date","indicatorX","undefined","indicatorY","indicatorPulseColor","shouldFillGradient","gradientPath","createGraphPathProps","canvasHeight","canvasWidth","pathNew","gradientPathNew","toCmds","previous","from","to","interpolate","isInterpolatable","mass","stiffness","damping","velocity","gradientColors","stopPulsating","startPulsating","duration","setFingerX","fingerX","lowerBound","upperBound","fingerXInRange","actualFingerX","index","pointIndex","dataPoint","setIsActive","active","styles","container","axisLabelContainer","axisRow","svg","create","flex","paddingVertical"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native'\nimport {\n  Canvas,\n  runSpring,\n  SkPath,\n  LinearGradient,\n  Path,\n  Skia,\n  useValue,\n  useComputedValue,\n  vec,\n  Group,\n  PathCommand,\n  useSharedValueEffect,\n  mix,\n  Circle,\n  Shadow,\n} from '@shopify/react-native-skia'\nimport type { AnimatedLineGraphProps } from './LineGraphProps'\nimport { SelectionDot as DefaultSelectionDot } from './SelectionDot'\nimport {\n  createGraphPath,\n  createGraphPathWithGradient,\n  getGraphPathRange,\n  GraphPathRange,\n  pixelFactorX,\n} from './CreateGraphPath'\nimport Reanimated, {\n  runOnJS,\n  useAnimatedReaction,\n  useSharedValue,\n  useDerivedValue,\n  cancelAnimation,\n  withRepeat,\n  withSequence,\n  withTiming,\n  withDelay,\n} from 'react-native-reanimated'\nimport { getSixDigitHex } from './utils/getSixDigitHex'\nimport { GestureDetector } from 'react-native-gesture-handler'\nimport { usePanGesture } from './hooks/usePanGesture'\nimport { getYForX } from './GetYForX'\nimport { hexToRgba } from './utils/hexToRgba'\n\nconst INDICATOR_RADIUS = 7\nconst INDICATOR_BORDER_MULTIPLIER = 1.3\nconst INDICATOR_PULSE_BLUR_RADIUS_SMALL =\n  INDICATOR_RADIUS * INDICATOR_BORDER_MULTIPLIER\nconst INDICATOR_PULSE_BLUR_RADIUS_BIG =\n  INDICATOR_RADIUS * INDICATOR_BORDER_MULTIPLIER + 20\n\n// weird rea type bug\nconst ReanimatedView = Reanimated.View as any\n\nexport function AnimatedLineGraph({\n  points,\n  color,\n  gradientFillColors,\n  lineThickness = 3,\n  range,\n  enableFadeInMask,\n  enablePanGesture,\n  onPointSelected,\n  onGestureStart,\n  onGestureEnd,\n  SelectionDot = DefaultSelectionDot,\n  enableIndicator = false,\n  indicatorPulsating = false,\n  horizontalPadding = enableIndicator\n    ? INDICATOR_RADIUS * INDICATOR_BORDER_MULTIPLIER\n    : 0,\n  verticalPadding = lineThickness,\n  TopAxisLabel,\n  BottomAxisLabel,\n  ...props\n}: AnimatedLineGraphProps): React.ReactElement {\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n  const interpolateProgress = useValue(0)\n\n  const { gesture, isActive, x } = usePanGesture({ holdDuration: 300 })\n  const circleX = useValue(0)\n  const circleY = useValue(0)\n  const pathEnd = useValue(0)\n  const indicatorRadius = useValue(enableIndicator ? INDICATOR_RADIUS : 0)\n  const indicatorBorderRadius = useComputedValue(\n    () => indicatorRadius.current * INDICATOR_BORDER_MULTIPLIER,\n    [indicatorRadius]\n  )\n\n  const pulseTrigger = useDerivedValue(() => {\n    'worklet'\n    return isActive.value ? 1 : 0\n  }, [])\n  const indicatorPulseAnimation = useSharedValue(0)\n  const indicatorPulseRadius = useValue(INDICATOR_PULSE_BLUR_RADIUS_SMALL)\n  const indicatorPulseOpacity = useValue(1)\n\n  const positions = useComputedValue(\n    () => [\n      0,\n      Math.min(0.15, pathEnd.current),\n      pathEnd.current,\n      pathEnd.current,\n      1,\n    ],\n    [pathEnd]\n  )\n  const onLayout = useCallback(\n    ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n      setWidth(Math.round(layout.width))\n      setHeight(Math.round(layout.height))\n    },\n    []\n  )\n\n  const straightLine = useMemo(() => {\n    const path = Skia.Path.Make()\n    path.moveTo(0, height / 2)\n    for (let i = 0; i < width - 1; i += 2) {\n      const x = i\n      const y = height / 2\n      path.cubicTo(x, y, x, y, x, y)\n    }\n\n    return path\n  }, [height, width])\n\n  const paths = useValue<{ from?: SkPath; to?: SkPath }>({})\n  const gradientPaths = useValue<{ from?: SkPath; to?: SkPath }>({})\n  const commands = useRef<PathCommand[]>([])\n  const [commandsChanged, setCommandsChanged] = useState(0)\n\n  const pathRange: GraphPathRange = useMemo(\n    () => getGraphPathRange(points, range),\n    [points, range]\n  )\n\n  const drawingWidth = useMemo(() => {\n    const lastPoint = points[points.length - 1]!\n\n    return Math.max(\n      Math.floor(\n        (width - 2 * horizontalPadding) *\n          pixelFactorX(lastPoint.date, pathRange.x.min, pathRange.x.max)\n      ),\n      0\n    )\n  }, [horizontalPadding, pathRange.x.max, pathRange.x.min, points, width])\n\n  const indicatorX = useMemo(\n    () =>\n      commandsChanged >= 0\n        ? Math.floor(drawingWidth) + horizontalPadding\n        : undefined,\n    [commandsChanged, drawingWidth, horizontalPadding]\n  )\n  const indicatorY = useMemo(\n    () =>\n      commandsChanged >= 0 && indicatorX != null\n        ? getYForX(commands.current, indicatorX)\n        : undefined,\n    [commandsChanged, indicatorX]\n  )\n\n  const indicatorPulseColor = useMemo(() => hexToRgba(color, 0.4), [color])\n\n  const shouldFillGradient = gradientFillColors != null\n\n  useEffect(() => {\n    if (height < 1 || width < 1) {\n      // view is not yet measured!\n      return\n    }\n    if (points.length < 1) {\n      // points are still empty!\n      return\n    }\n\n    let path\n    let gradientPath\n\n    const createGraphPathProps = {\n      points: points,\n      range: pathRange,\n      horizontalPadding: horizontalPadding,\n      verticalPadding: verticalPadding,\n      canvasHeight: height,\n      canvasWidth: width,\n    }\n\n    if (shouldFillGradient) {\n      const { path: pathNew, gradientPath: gradientPathNew } =\n        createGraphPathWithGradient(createGraphPathProps)\n\n      path = pathNew\n      gradientPath = gradientPathNew\n    } else {\n      path = createGraphPath(createGraphPathProps)\n    }\n\n    commands.current = path.toCmds()\n\n    if (gradientPath != null) {\n      const previous = gradientPaths.current\n      let from: SkPath = previous.to ?? straightLine\n      if (previous.from != null && interpolateProgress.current < 1)\n        from =\n          from.interpolate(previous.from, interpolateProgress.current) ?? from\n\n      if (gradientPath.isInterpolatable(from)) {\n        gradientPaths.current = {\n          from: from,\n          to: gradientPath,\n        }\n      } else {\n        gradientPaths.current = {\n          from: gradientPath,\n          to: gradientPath,\n        }\n      }\n    }\n\n    const previous = paths.current\n    let from: SkPath = previous.to ?? straightLine\n    if (previous.from != null && interpolateProgress.current < 1)\n      from =\n        from.interpolate(previous.from, interpolateProgress.current) ?? from\n\n    if (path.isInterpolatable(from)) {\n      paths.current = {\n        from: from,\n        to: path,\n      }\n    } else {\n      paths.current = {\n        from: path,\n        to: path,\n      }\n    }\n\n    setCommandsChanged(commandsChanged + 1)\n\n    runSpring(\n      interpolateProgress,\n      { from: 0, to: 1 },\n      {\n        mass: 1,\n        stiffness: 500,\n        damping: 400,\n        velocity: 0,\n      }\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    height,\n    horizontalPadding,\n    interpolateProgress,\n    pathRange,\n    paths,\n    shouldFillGradient,\n    gradientPaths,\n    points,\n    range,\n    straightLine,\n    verticalPadding,\n    width,\n  ])\n\n  const gradientColors = useMemo(() => {\n    if (enableFadeInMask) {\n      return [\n        `${getSixDigitHex(color)}00`,\n        `${getSixDigitHex(color)}ff`,\n        `${getSixDigitHex(color)}ff`,\n        `${getSixDigitHex(color)}33`,\n        `${getSixDigitHex(color)}33`,\n      ]\n    } else {\n      return [\n        color,\n        color,\n        color,\n        `${getSixDigitHex(color)}33`,\n        `${getSixDigitHex(color)}33`,\n      ]\n    }\n  }, [color, enableFadeInMask])\n\n  const path = useComputedValue(\n    () => {\n      const from = paths.current.from ?? straightLine\n      const to = paths.current.to ?? straightLine\n\n      return to.interpolate(from, interpolateProgress.current)\n    },\n    // RN Skia deals with deps differently. They are actually the required SkiaValues that the derived value listens to, not react values.\n    [interpolateProgress]\n  )\n\n  const gradientPath = useComputedValue(\n    () => {\n      const from = gradientPaths.current.from ?? straightLine\n      const to = gradientPaths.current.to ?? straightLine\n\n      return to.interpolate(from, interpolateProgress.current)\n    },\n    // RN Skia deals with deps differently. They are actually the required SkiaValues that the derived value listens to, not react values.\n    [interpolateProgress]\n  )\n\n  const stopPulsating = useCallback(() => {\n    cancelAnimation(indicatorPulseAnimation)\n    indicatorPulseAnimation.value = 0\n  }, [indicatorPulseAnimation])\n\n  const startPulsating = useCallback(() => {\n    indicatorPulseAnimation.value = withRepeat(\n      withDelay(\n        1000,\n        withSequence(\n          withTiming(1, { duration: 1100 }),\n          withTiming(0, { duration: 0 }), // revert to 0\n          withTiming(0, { duration: 1200 }), // delay between pulses\n          withTiming(1, { duration: 1100 }),\n          withTiming(1, { duration: 2000 }) // delay after both pulses\n        )\n      ),\n      -1\n    )\n  }, [indicatorPulseAnimation])\n\n  const setFingerX = useCallback(\n    (fingerX: number) => {\n      const lowerBound = horizontalPadding\n      const upperBound = drawingWidth + horizontalPadding\n\n      const fingerXInRange = Math.min(Math.max(fingerX, lowerBound), upperBound)\n      const y = getYForX(commands.current, fingerXInRange)\n\n      if (y != null) {\n        circleY.current = y\n        circleX.current = fingerXInRange\n      }\n\n      if (fingerX > lowerBound && fingerX < upperBound && isActive.value)\n        pathEnd.current = fingerX / width\n\n      const actualFingerX = fingerX - horizontalPadding\n\n      const index = Math.round((actualFingerX / upperBound) * points.length)\n      const pointIndex = Math.min(Math.max(index, 0), points.length - 1)\n      const dataPoint = points[pointIndex]\n      if (dataPoint != null) onPointSelected?.(dataPoint)\n    },\n    [\n      circleX,\n      circleY,\n      drawingWidth,\n      horizontalPadding,\n      isActive.value,\n      onPointSelected,\n      pathEnd,\n      points,\n      width,\n    ]\n  )\n\n  const setIsActive = useCallback(\n    (active: boolean) => {\n      runSpring(indicatorRadius, !active ? INDICATOR_RADIUS : 0, {\n        mass: 1,\n        stiffness: 1000,\n        damping: 50,\n        velocity: 0,\n      })\n\n      if (active) {\n        onGestureStart?.()\n        stopPulsating()\n      } else {\n        onGestureEnd?.()\n        pathEnd.current = 1\n        startPulsating()\n      }\n    },\n    [\n      indicatorRadius,\n      onGestureEnd,\n      onGestureStart,\n      pathEnd,\n      startPulsating,\n      stopPulsating,\n    ]\n  )\n\n  useAnimatedReaction(\n    () => x.value,\n    (fingerX) => {\n      if (isActive.value || fingerX) {\n        runOnJS(setFingerX)(fingerX)\n      }\n    },\n    [isActive, setFingerX, width, x]\n  )\n\n  useAnimatedReaction(\n    () => isActive.value,\n    (active) => {\n      runOnJS(setIsActive)(active)\n    },\n    [isActive, setIsActive]\n  )\n\n  useEffect(() => {\n    if (points.length !== 0 && commands.current.length !== 0)\n      pathEnd.current = 1\n  }, [commands, pathEnd, points.length])\n\n  useEffect(() => {\n    if (indicatorPulsating) {\n      startPulsating()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [indicatorPulsating])\n\n  useSharedValueEffect(\n    () => {\n      if (pulseTrigger.value === 0) {\n        indicatorPulseRadius.current = mix(\n          indicatorPulseAnimation.value,\n          INDICATOR_PULSE_BLUR_RADIUS_SMALL,\n          INDICATOR_PULSE_BLUR_RADIUS_BIG\n        )\n        indicatorPulseOpacity.current = mix(indicatorPulseAnimation.value, 1, 0)\n      } else {\n        indicatorPulseRadius.current = 0\n      }\n    },\n    indicatorPulseAnimation,\n    pulseTrigger\n  )\n\n  return (\n    <View {...props}>\n      <GestureDetector gesture={enablePanGesture ? gesture : undefined}>\n        <ReanimatedView style={[styles.container, styles.axisLabelContainer]}>\n          {/* Top Label (max price) */}\n          {TopAxisLabel != null && (\n            <View style={styles.axisRow}>\n              <TopAxisLabel />\n            </View>\n          )}\n\n          {/* Actual Skia Graph */}\n          <View style={styles.container} onLayout={onLayout}>\n            <Canvas style={styles.svg}>\n              <Group>\n                <Path\n                  // @ts-ignore\n                  path={path}\n                  strokeWidth={lineThickness}\n                  style=\"stroke\"\n                  strokeJoin=\"round\"\n                  strokeCap=\"round\"\n                >\n                  <LinearGradient\n                    start={vec(0, 0)}\n                    end={vec(width, 0)}\n                    colors={gradientColors}\n                    positions={positions}\n                  />\n                </Path>\n\n                {shouldFillGradient && (\n                  <Path\n                    // @ts-ignore\n                    path={gradientPath}\n                  >\n                    <LinearGradient\n                      start={vec(0, 0)}\n                      end={vec(0, height)}\n                      colors={gradientFillColors}\n                    />\n                  </Path>\n                )}\n              </Group>\n\n              {SelectionDot != null && (\n                <SelectionDot\n                  isActive={isActive}\n                  color={color}\n                  lineThickness={lineThickness}\n                  circleX={circleX}\n                  circleY={circleY}\n                />\n              )}\n\n              {enableIndicator && (\n                <Group>\n                  {indicatorPulsating && (\n                    <Circle\n                      cx={indicatorX}\n                      cy={indicatorY}\n                      r={indicatorPulseRadius}\n                      opacity={indicatorPulseOpacity}\n                      color={indicatorPulseColor}\n                      style=\"fill\"\n                    />\n                  )}\n\n                  <Circle\n                    cx={indicatorX}\n                    cy={indicatorY}\n                    r={indicatorBorderRadius}\n                    color={'#ffffff'}\n                  >\n                    <Shadow dx={2} dy={2} color=\"rgba(0,0,0,0.2)\" blur={4} />\n                  </Circle>\n                  <Circle\n                    cx={indicatorX}\n                    cy={indicatorY}\n                    r={indicatorRadius}\n                    color={color}\n                  />\n                </Group>\n              )}\n            </Canvas>\n          </View>\n\n          {/* Bottom Label (min price) */}\n          {BottomAxisLabel != null && (\n            <View style={styles.axisRow}>\n              <BottomAxisLabel />\n            </View>\n          )}\n        </ReanimatedView>\n      </GestureDetector>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  svg: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n  },\n  axisLabelContainer: {\n    paddingVertical: 20,\n  },\n  axisRow: {\n    height: 17,\n  },\n})\n"]}