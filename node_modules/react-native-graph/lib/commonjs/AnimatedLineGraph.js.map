{"version":3,"sources":["AnimatedLineGraph.tsx"],"names":["INDICATOR_RADIUS","INDICATOR_BORDER_MULTIPLIER","INDICATOR_PULSE_BLUR_RADIUS_SMALL","INDICATOR_PULSE_BLUR_RADIUS_BIG","ReanimatedView","Reanimated","View","AnimatedLineGraph","points","color","gradientFillColors","lineThickness","range","enableFadeInMask","enablePanGesture","onPointSelected","onGestureStart","onGestureEnd","SelectionDot","DefaultSelectionDot","enableIndicator","indicatorPulsating","horizontalPadding","verticalPadding","TopAxisLabel","BottomAxisLabel","props","width","setWidth","height","setHeight","interpolateProgress","gesture","isActive","x","holdDuration","circleX","circleY","pathEnd","indicatorRadius","indicatorBorderRadius","current","pulseTrigger","value","indicatorPulseAnimation","indicatorPulseRadius","indicatorPulseOpacity","positions","Math","min","onLayout","nativeEvent","layout","round","straightLine","path","Skia","Path","Make","moveTo","i","y","cubicTo","paths","gradientPaths","commands","commandsChanged","setCommandsChanged","pathRange","drawingWidth","lastPoint","length","max","floor","date","indicatorX","undefined","indicatorY","indicatorPulseColor","shouldFillGradient","gradientPath","createGraphPathProps","canvasHeight","canvasWidth","pathNew","gradientPathNew","toCmds","previous","from","to","interpolate","isInterpolatable","mass","stiffness","damping","velocity","gradientColors","stopPulsating","startPulsating","duration","setFingerX","fingerX","lowerBound","upperBound","fingerXInRange","actualFingerX","index","pointIndex","dataPoint","setIsActive","active","styles","container","axisLabelContainer","axisRow","svg","StyleSheet","create","flex","paddingVertical"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAkBA;;AACA;;AAOA;;AAWA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,gBAAgB,GAAG,CAAzB;AACA,MAAMC,2BAA2B,GAAG,GAApC;AACA,MAAMC,iCAAiC,GACrCF,gBAAgB,GAAGC,2BADrB;AAEA,MAAME,+BAA+B,GACnCH,gBAAgB,GAAGC,2BAAnB,GAAiD,EADnD,C,CAGA;;AACA,MAAMG,cAAc,GAAGC,+BAAWC,IAAlC;;AAEO,SAASC,iBAAT,OAqBwC;AAAA,MArBb;AAChCC,IAAAA,MADgC;AAEhCC,IAAAA,KAFgC;AAGhCC,IAAAA,kBAHgC;AAIhCC,IAAAA,aAAa,GAAG,CAJgB;AAKhCC,IAAAA,KALgC;AAMhCC,IAAAA,gBANgC;AAOhCC,IAAAA,gBAPgC;AAQhCC,IAAAA,eARgC;AAShCC,IAAAA,cATgC;AAUhCC,IAAAA,YAVgC;AAWhCC,IAAAA,YAAY,GAAGC,0BAXiB;AAYhCC,IAAAA,eAAe,GAAG,KAZc;AAahCC,IAAAA,kBAAkB,GAAG,KAbW;AAchCC,IAAAA,iBAAiB,GAAGF,eAAe,GAC/BpB,gBAAgB,GAAGC,2BADY,GAE/B,CAhB4B;AAiBhCsB,IAAAA,eAAe,GAAGZ,aAjBc;AAkBhCa,IAAAA,YAlBgC;AAmBhCC,IAAAA,eAnBgC;AAoBhC,OAAGC;AApB6B,GAqBa;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB,qBAAS,CAAT,CAA1B;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB,qBAAS,CAAT,CAA5B;AACA,QAAMC,mBAAmB,GAAG,+BAAS,CAAT,CAA5B;AAEA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,MAA2B,kCAAc;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAAd,CAAjC;AACA,QAAMC,OAAO,GAAG,+BAAS,CAAT,CAAhB;AACA,QAAMC,OAAO,GAAG,+BAAS,CAAT,CAAhB;AACA,QAAMC,OAAO,GAAG,+BAAS,CAAT,CAAhB;AACA,QAAMC,eAAe,GAAG,+BAASnB,eAAe,GAAGpB,gBAAH,GAAsB,CAA9C,CAAxB;AACA,QAAMwC,qBAAqB,GAAG,uCAC5B,MAAMD,eAAe,CAACE,OAAhB,GAA0BxC,2BADJ,EAE5B,CAACsC,eAAD,CAF4B,CAA9B;AAKA,QAAMG,YAAY,GAAG,4CAAgB,MAAM;AACzC;;AACA,WAAOT,QAAQ,CAACU,KAAT,GAAiB,CAAjB,GAAqB,CAA5B;AACD,GAHoB,EAGlB,EAHkB,CAArB;AAIA,QAAMC,uBAAuB,GAAG,2CAAe,CAAf,CAAhC;AACA,QAAMC,oBAAoB,GAAG,+BAAS3C,iCAAT,CAA7B;AACA,QAAM4C,qBAAqB,GAAG,+BAAS,CAAT,CAA9B;AAEA,QAAMC,SAAS,GAAG,uCAChB,MAAM,CACJ,CADI,EAEJC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAeX,OAAO,CAACG,OAAvB,CAFI,EAGJH,OAAO,CAACG,OAHJ,EAIJH,OAAO,CAACG,OAJJ,EAKJ,CALI,CADU,EAQhB,CAACH,OAAD,CARgB,CAAlB;AAUA,QAAMY,QAAQ,GAAG,wBACf,SAAoD;AAAA,QAAnD;AAAEC,MAAAA,WAAW,EAAE;AAAEC,QAAAA;AAAF;AAAf,KAAmD;AAClDxB,IAAAA,QAAQ,CAACoB,IAAI,CAACK,KAAL,CAAWD,MAAM,CAACzB,KAAlB,CAAD,CAAR;AACAG,IAAAA,SAAS,CAACkB,IAAI,CAACK,KAAL,CAAWD,MAAM,CAACvB,MAAlB,CAAD,CAAT;AACD,GAJc,EAKf,EALe,CAAjB;AAQA,QAAMyB,YAAY,GAAG,oBAAQ,MAAM;AACjC,UAAMC,IAAI,GAAGC,sBAAKC,IAAL,CAAUC,IAAV,EAAb;;AACAH,IAAAA,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAe9B,MAAM,GAAG,CAAxB;;AACA,SAAK,IAAI+B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,KAAK,GAAG,CAA5B,EAA+BiC,CAAC,IAAI,CAApC,EAAuC;AACrC,YAAM1B,CAAC,GAAG0B,CAAV;AACA,YAAMC,CAAC,GAAGhC,MAAM,GAAG,CAAnB;AACA0B,MAAAA,IAAI,CAACO,OAAL,CAAa5B,CAAb,EAAgB2B,CAAhB,EAAmB3B,CAAnB,EAAsB2B,CAAtB,EAAyB3B,CAAzB,EAA4B2B,CAA5B;AACD;;AAED,WAAON,IAAP;AACD,GAVoB,EAUlB,CAAC1B,MAAD,EAASF,KAAT,CAVkB,CAArB;AAYA,QAAMoC,KAAK,GAAG,+BAAyC,EAAzC,CAAd;AACA,QAAMC,aAAa,GAAG,+BAAyC,EAAzC,CAAtB;AACA,QAAMC,QAAQ,GAAG,mBAAsB,EAAtB,CAAjB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwC,qBAAS,CAAT,CAA9C;AAEA,QAAMC,SAAyB,GAAG,oBAChC,MAAM,wCAAkB5D,MAAlB,EAA0BI,KAA1B,CAD0B,EAEhC,CAACJ,MAAD,EAASI,KAAT,CAFgC,CAAlC;AAKA,QAAMyD,YAAY,GAAG,oBAAQ,MAAM;AACjC,UAAMC,SAAS,GAAG9D,MAAM,CAACA,MAAM,CAAC+D,MAAP,GAAgB,CAAjB,CAAxB;AAEA,WAAOvB,IAAI,CAACwB,GAAL,CACLxB,IAAI,CAACyB,KAAL,CACE,CAAC9C,KAAK,GAAG,IAAIL,iBAAb,IACE,mCAAagD,SAAS,CAACI,IAAvB,EAA6BN,SAAS,CAAClC,CAAV,CAAYe,GAAzC,EAA8CmB,SAAS,CAAClC,CAAV,CAAYsC,GAA1D,CAFJ,CADK,EAKL,CALK,CAAP;AAOD,GAVoB,EAUlB,CAAClD,iBAAD,EAAoB8C,SAAS,CAAClC,CAAV,CAAYsC,GAAhC,EAAqCJ,SAAS,CAAClC,CAAV,CAAYe,GAAjD,EAAsDzC,MAAtD,EAA8DmB,KAA9D,CAVkB,CAArB;AAYA,QAAMgD,UAAU,GAAG,oBACjB,MACET,eAAe,IAAI,CAAnB,GACIlB,IAAI,CAACyB,KAAL,CAAWJ,YAAX,IAA2B/C,iBAD/B,GAEIsD,SAJW,EAKjB,CAACV,eAAD,EAAkBG,YAAlB,EAAgC/C,iBAAhC,CALiB,CAAnB;AAOA,QAAMuD,UAAU,GAAG,oBACjB,MACEX,eAAe,IAAI,CAAnB,IAAwBS,UAAU,IAAI,IAAtC,GACI,wBAASV,QAAQ,CAACxB,OAAlB,EAA2BkC,UAA3B,CADJ,GAEIC,SAJW,EAKjB,CAACV,eAAD,EAAkBS,UAAlB,CALiB,CAAnB;AAQA,QAAMG,mBAAmB,GAAG,oBAAQ,MAAM,0BAAUrE,KAAV,EAAiB,GAAjB,CAAd,EAAqC,CAACA,KAAD,CAArC,CAA5B;AAEA,QAAMsE,kBAAkB,GAAGrE,kBAAkB,IAAI,IAAjD;AAEA,wBAAU,MAAM;AAAA;;AACd,QAAImB,MAAM,GAAG,CAAT,IAAcF,KAAK,GAAG,CAA1B,EAA6B;AAC3B;AACA;AACD;;AACD,QAAInB,MAAM,CAAC+D,MAAP,GAAgB,CAApB,EAAuB;AACrB;AACA;AACD;;AAED,QAAIhB,IAAJ;AACA,QAAIyB,YAAJ;AAEA,UAAMC,oBAAoB,GAAG;AAC3BzE,MAAAA,MAAM,EAAEA,MADmB;AAE3BI,MAAAA,KAAK,EAAEwD,SAFoB;AAG3B9C,MAAAA,iBAAiB,EAAEA,iBAHQ;AAI3BC,MAAAA,eAAe,EAAEA,eAJU;AAK3B2D,MAAAA,YAAY,EAAErD,MALa;AAM3BsD,MAAAA,WAAW,EAAExD;AANc,KAA7B;;AASA,QAAIoD,kBAAJ,EAAwB;AACtB,YAAM;AAAExB,QAAAA,IAAI,EAAE6B,OAAR;AAAiBJ,QAAAA,YAAY,EAAEK;AAA/B,UACJ,kDAA4BJ,oBAA5B,CADF;AAGA1B,MAAAA,IAAI,GAAG6B,OAAP;AACAJ,MAAAA,YAAY,GAAGK,eAAf;AACD,KAND,MAMO;AACL9B,MAAAA,IAAI,GAAG,sCAAgB0B,oBAAhB,CAAP;AACD;;AAEDhB,IAAAA,QAAQ,CAACxB,OAAT,GAAmBc,IAAI,CAAC+B,MAAL,EAAnB;;AAEA,QAAIN,YAAY,IAAI,IAApB,EAA0B;AAAA;;AACxB,YAAMO,QAAQ,GAAGvB,aAAa,CAACvB,OAA/B;AACA,UAAI+C,IAAY,mBAAGD,QAAQ,CAACE,EAAZ,uDAAkBnC,YAAlC;AACA,UAAIiC,QAAQ,CAACC,IAAT,IAAiB,IAAjB,IAAyBzD,mBAAmB,CAACU,OAApB,GAA8B,CAA3D,EACE+C,IAAI,wBACFA,IAAI,CAACE,WAAL,CAAiBH,QAAQ,CAACC,IAA1B,EAAgCzD,mBAAmB,CAACU,OAApD,CADE,iEAC8D+C,IADlE;;AAGF,UAAIR,YAAY,CAACW,gBAAb,CAA8BH,IAA9B,CAAJ,EAAyC;AACvCxB,QAAAA,aAAa,CAACvB,OAAd,GAAwB;AACtB+C,UAAAA,IAAI,EAAEA,IADgB;AAEtBC,UAAAA,EAAE,EAAET;AAFkB,SAAxB;AAID,OALD,MAKO;AACLhB,QAAAA,aAAa,CAACvB,OAAd,GAAwB;AACtB+C,UAAAA,IAAI,EAAER,YADgB;AAEtBS,UAAAA,EAAE,EAAET;AAFkB,SAAxB;AAID;AACF;;AAED,UAAMO,QAAQ,GAAGxB,KAAK,CAACtB,OAAvB;AACA,QAAI+C,IAAY,oBAAGD,QAAQ,CAACE,EAAZ,yDAAkBnC,YAAlC;AACA,QAAIiC,QAAQ,CAACC,IAAT,IAAiB,IAAjB,IAAyBzD,mBAAmB,CAACU,OAApB,GAA8B,CAA3D,EACE+C,IAAI,yBACFA,IAAI,CAACE,WAAL,CAAiBH,QAAQ,CAACC,IAA1B,EAAgCzD,mBAAmB,CAACU,OAApD,CADE,mEAC8D+C,IADlE;;AAGF,QAAIjC,IAAI,CAACoC,gBAAL,CAAsBH,IAAtB,CAAJ,EAAiC;AAC/BzB,MAAAA,KAAK,CAACtB,OAAN,GAAgB;AACd+C,QAAAA,IAAI,EAAEA,IADQ;AAEdC,QAAAA,EAAE,EAAElC;AAFU,OAAhB;AAID,KALD,MAKO;AACLQ,MAAAA,KAAK,CAACtB,OAAN,GAAgB;AACd+C,QAAAA,IAAI,EAAEjC,IADQ;AAEdkC,QAAAA,EAAE,EAAElC;AAFU,OAAhB;AAID;;AAEDY,IAAAA,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAlB;AAEA,oCACEnC,mBADF,EAEE;AAAEyD,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,EAAE,EAAE;AAAf,KAFF,EAGE;AACEG,MAAAA,IAAI,EAAE,CADR;AAEEC,MAAAA,SAAS,EAAE,GAFb;AAGEC,MAAAA,OAAO,EAAE,GAHX;AAIEC,MAAAA,QAAQ,EAAE;AAJZ,KAHF,EA1Ec,CAoFd;AACD,GArFD,EAqFG,CACDlE,MADC,EAEDP,iBAFC,EAGDS,mBAHC,EAIDqC,SAJC,EAKDL,KALC,EAMDgB,kBANC,EAODf,aAPC,EAQDxD,MARC,EASDI,KATC,EAUD0C,YAVC,EAWD/B,eAXC,EAYDI,KAZC,CArFH;AAoGA,QAAMqE,cAAc,GAAG,oBAAQ,MAAM;AACnC,QAAInF,gBAAJ,EAAsB;AACpB,aAAO,CACJ,GAAE,oCAAeJ,KAAf,CAAsB,IADpB,EAEJ,GAAE,oCAAeA,KAAf,CAAsB,IAFpB,EAGJ,GAAE,oCAAeA,KAAf,CAAsB,IAHpB,EAIJ,GAAE,oCAAeA,KAAf,CAAsB,IAJpB,EAKJ,GAAE,oCAAeA,KAAf,CAAsB,IALpB,CAAP;AAOD,KARD,MAQO;AACL,aAAO,CACLA,KADK,EAELA,KAFK,EAGLA,KAHK,EAIJ,GAAE,oCAAeA,KAAf,CAAsB,IAJpB,EAKJ,GAAE,oCAAeA,KAAf,CAAsB,IALpB,CAAP;AAOD;AACF,GAlBsB,EAkBpB,CAACA,KAAD,EAAQI,gBAAR,CAlBoB,CAAvB;AAoBA,QAAM0C,IAAI,GAAG,uCACX,MAAM;AAAA;;AACJ,UAAMiC,IAAI,0BAAGzB,KAAK,CAACtB,OAAN,CAAc+C,IAAjB,qEAAyBlC,YAAnC;AACA,UAAMmC,EAAE,wBAAG1B,KAAK,CAACtB,OAAN,CAAcgD,EAAjB,iEAAuBnC,YAA/B;AAEA,WAAOmC,EAAE,CAACC,WAAH,CAAeF,IAAf,EAAqBzD,mBAAmB,CAACU,OAAzC,CAAP;AACD,GANU,EAOX;AACA,GAACV,mBAAD,CARW,CAAb;AAWA,QAAMiD,YAAY,GAAG,uCACnB,MAAM;AAAA;;AACJ,UAAMQ,IAAI,4BAAGxB,aAAa,CAACvB,OAAd,CAAsB+C,IAAzB,yEAAiClC,YAA3C;AACA,UAAMmC,EAAE,6BAAGzB,aAAa,CAACvB,OAAd,CAAsBgD,EAAzB,2EAA+BnC,YAAvC;AAEA,WAAOmC,EAAE,CAACC,WAAH,CAAeF,IAAf,EAAqBzD,mBAAmB,CAACU,OAAzC,CAAP;AACD,GANkB,EAOnB;AACA,GAACV,mBAAD,CARmB,CAArB;AAWA,QAAMkE,aAAa,GAAG,wBAAY,MAAM;AACtC,gDAAgBrD,uBAAhB;AACAA,IAAAA,uBAAuB,CAACD,KAAxB,GAAgC,CAAhC;AACD,GAHqB,EAGnB,CAACC,uBAAD,CAHmB,CAAtB;AAKA,QAAMsD,cAAc,GAAG,wBAAY,MAAM;AACvCtD,IAAAA,uBAAuB,CAACD,KAAxB,GAAgC,uCAC9B,sCACE,IADF,EAEE,yCACE,uCAAW,CAAX,EAAc;AAAEwD,MAAAA,QAAQ,EAAE;AAAZ,KAAd,CADF,EAEE,uCAAW,CAAX,EAAc;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAd,CAFF,EAEkC;AAChC,2CAAW,CAAX,EAAc;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAd,CAHF,EAGqC;AACnC,2CAAW,CAAX,EAAc;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAd,CAJF,EAKE,uCAAW,CAAX,EAAc;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAd,CALF,CAKoC;AALpC,KAFF,CAD8B,EAW9B,CAAC,CAX6B,CAAhC;AAaD,GAdsB,EAcpB,CAACvD,uBAAD,CAdoB,CAAvB;AAgBA,QAAMwD,UAAU,GAAG,wBAChBC,OAAD,IAAqB;AACnB,UAAMC,UAAU,GAAGhF,iBAAnB;AACA,UAAMiF,UAAU,GAAGlC,YAAY,GAAG/C,iBAAlC;AAEA,UAAMkF,cAAc,GAAGxD,IAAI,CAACC,GAAL,CAASD,IAAI,CAACwB,GAAL,CAAS6B,OAAT,EAAkBC,UAAlB,CAAT,EAAwCC,UAAxC,CAAvB;AACA,UAAM1C,CAAC,GAAG,wBAASI,QAAQ,CAACxB,OAAlB,EAA2B+D,cAA3B,CAAV;;AAEA,QAAI3C,CAAC,IAAI,IAAT,EAAe;AACbxB,MAAAA,OAAO,CAACI,OAAR,GAAkBoB,CAAlB;AACAzB,MAAAA,OAAO,CAACK,OAAR,GAAkB+D,cAAlB;AACD;;AAED,QAAIH,OAAO,GAAGC,UAAV,IAAwBD,OAAO,GAAGE,UAAlC,IAAgDtE,QAAQ,CAACU,KAA7D,EACEL,OAAO,CAACG,OAAR,GAAkB4D,OAAO,GAAG1E,KAA5B;AAEF,UAAM8E,aAAa,GAAGJ,OAAO,GAAG/E,iBAAhC;AAEA,UAAMoF,KAAK,GAAG1D,IAAI,CAACK,KAAL,CAAYoD,aAAa,GAAGF,UAAjB,GAA+B/F,MAAM,CAAC+D,MAAjD,CAAd;AACA,UAAMoC,UAAU,GAAG3D,IAAI,CAACC,GAAL,CAASD,IAAI,CAACwB,GAAL,CAASkC,KAAT,EAAgB,CAAhB,CAAT,EAA6BlG,MAAM,CAAC+D,MAAP,GAAgB,CAA7C,CAAnB;AACA,UAAMqC,SAAS,GAAGpG,MAAM,CAACmG,UAAD,CAAxB;AACA,QAAIC,SAAS,IAAI,IAAjB,EAAuB7F,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAG6F,SAAH,CAAf;AACxB,GAtBgB,EAuBjB,CACExE,OADF,EAEEC,OAFF,EAGEgC,YAHF,EAIE/C,iBAJF,EAKEW,QAAQ,CAACU,KALX,EAME5B,eANF,EAOEuB,OAPF,EAQE9B,MARF,EASEmB,KATF,CAvBiB,CAAnB;AAoCA,QAAMkF,WAAW,GAAG,wBACjBC,MAAD,IAAqB;AACnB,oCAAUvE,eAAV,EAA2B,CAACuE,MAAD,GAAU9G,gBAAV,GAA6B,CAAxD,EAA2D;AACzD4F,MAAAA,IAAI,EAAE,CADmD;AAEzDC,MAAAA,SAAS,EAAE,IAF8C;AAGzDC,MAAAA,OAAO,EAAE,EAHgD;AAIzDC,MAAAA,QAAQ,EAAE;AAJ+C,KAA3D;;AAOA,QAAIe,MAAJ,EAAY;AACV9F,MAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc;AACdiF,MAAAA,aAAa;AACd,KAHD,MAGO;AACLhF,MAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY;AACZqB,MAAAA,OAAO,CAACG,OAAR,GAAkB,CAAlB;AACAyD,MAAAA,cAAc;AACf;AACF,GAjBiB,EAkBlB,CACE3D,eADF,EAEEtB,YAFF,EAGED,cAHF,EAIEsB,OAJF,EAKE4D,cALF,EAMED,aANF,CAlBkB,CAApB;AA4BA,kDACE,MAAM/D,CAAC,CAACS,KADV,EAEG0D,OAAD,IAAa;AACX,QAAIpE,QAAQ,CAACU,KAAT,IAAkB0D,OAAtB,EAA+B;AAC7B,0CAAQD,UAAR,EAAoBC,OAApB;AACD;AACF,GANH,EAOE,CAACpE,QAAD,EAAWmE,UAAX,EAAuBzE,KAAvB,EAA8BO,CAA9B,CAPF;AAUA,kDACE,MAAMD,QAAQ,CAACU,KADjB,EAEGmE,MAAD,IAAY;AACV,wCAAQD,WAAR,EAAqBC,MAArB;AACD,GAJH,EAKE,CAAC7E,QAAD,EAAW4E,WAAX,CALF;AAQA,wBAAU,MAAM;AACd,QAAIrG,MAAM,CAAC+D,MAAP,KAAkB,CAAlB,IAAuBN,QAAQ,CAACxB,OAAT,CAAiB8B,MAAjB,KAA4B,CAAvD,EACEjC,OAAO,CAACG,OAAR,GAAkB,CAAlB;AACH,GAHD,EAGG,CAACwB,QAAD,EAAW3B,OAAX,EAAoB9B,MAAM,CAAC+D,MAA3B,CAHH;AAKA,wBAAU,MAAM;AACd,QAAIlD,kBAAJ,EAAwB;AACtB6E,MAAAA,cAAc;AACf,KAHa,CAId;;AACD,GALD,EAKG,CAAC7E,kBAAD,CALH;AAOA,6CACE,MAAM;AACJ,QAAIqB,YAAY,CAACC,KAAb,KAAuB,CAA3B,EAA8B;AAC5BE,MAAAA,oBAAoB,CAACJ,OAArB,GAA+B,0BAC7BG,uBAAuB,CAACD,KADK,EAE7BzC,iCAF6B,EAG7BC,+BAH6B,CAA/B;AAKA2C,MAAAA,qBAAqB,CAACL,OAAtB,GAAgC,0BAAIG,uBAAuB,CAACD,KAA5B,EAAmC,CAAnC,EAAsC,CAAtC,CAAhC;AACD,KAPD,MAOO;AACLE,MAAAA,oBAAoB,CAACJ,OAArB,GAA+B,CAA/B;AACD;AACF,GAZH,EAaEG,uBAbF,EAcEF,YAdF;AAiBA,sBACE,6BAAC,iBAAD,EAAUhB,KAAV,eACE,6BAAC,0CAAD;AAAiB,IAAA,OAAO,EAAEZ,gBAAgB,GAAGkB,OAAH,GAAa4C;AAAvD,kBACE,6BAAC,cAAD;AAAgB,IAAA,KAAK,EAAE,CAACmC,MAAM,CAACC,SAAR,EAAmBD,MAAM,CAACE,kBAA1B;AAAvB,KAEGzF,YAAY,IAAI,IAAhB,iBACC,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEuF,MAAM,CAACG;AAApB,kBACE,6BAAC,YAAD,OADF,CAHJ,eASE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACC,SAApB;AAA+B,IAAA,QAAQ,EAAE9D;AAAzC,kBACE,6BAAC,uBAAD;AAAQ,IAAA,KAAK,EAAE6D,MAAM,CAACI;AAAtB,kBACE,6BAAC,sBAAD,qBACE,6BAAC,qBAAD,CACE;AADF;AAEE,IAAA,IAAI,EAAE5D,IAFR;AAGE,IAAA,WAAW,EAAE5C,aAHf;AAIE,IAAA,KAAK,EAAC,QAJR;AAKE,IAAA,UAAU,EAAC,OALb;AAME,IAAA,SAAS,EAAC;AANZ,kBAQE,6BAAC,+BAAD;AACE,IAAA,KAAK,EAAE,0BAAI,CAAJ,EAAO,CAAP,CADT;AAEE,IAAA,GAAG,EAAE,0BAAIgB,KAAJ,EAAW,CAAX,CAFP;AAGE,IAAA,MAAM,EAAEqE,cAHV;AAIE,IAAA,SAAS,EAAEjD;AAJb,IARF,CADF,EAiBGgC,kBAAkB,iBACjB,6BAAC,qBAAD,CACE;AADF;AAEE,IAAA,IAAI,EAAEC;AAFR,kBAIE,6BAAC,+BAAD;AACE,IAAA,KAAK,EAAE,0BAAI,CAAJ,EAAO,CAAP,CADT;AAEE,IAAA,GAAG,EAAE,0BAAI,CAAJ,EAAOnD,MAAP,CAFP;AAGE,IAAA,MAAM,EAAEnB;AAHV,IAJF,CAlBJ,CADF,EAgCGQ,YAAY,IAAI,IAAhB,iBACC,6BAAC,YAAD;AACE,IAAA,QAAQ,EAAEe,QADZ;AAEE,IAAA,KAAK,EAAExB,KAFT;AAGE,IAAA,aAAa,EAAEE,aAHjB;AAIE,IAAA,OAAO,EAAEyB,OAJX;AAKE,IAAA,OAAO,EAAEC;AALX,IAjCJ,EA0CGjB,eAAe,iBACd,6BAAC,sBAAD,QACGC,kBAAkB,iBACjB,6BAAC,uBAAD;AACE,IAAA,EAAE,EAAEsD,UADN;AAEE,IAAA,EAAE,EAAEE,UAFN;AAGE,IAAA,CAAC,EAAEhC,oBAHL;AAIE,IAAA,OAAO,EAAEC,qBAJX;AAKE,IAAA,KAAK,EAAEgC,mBALT;AAME,IAAA,KAAK,EAAC;AANR,IAFJ,eAYE,6BAAC,uBAAD;AACE,IAAA,EAAE,EAAEH,UADN;AAEE,IAAA,EAAE,EAAEE,UAFN;AAGE,IAAA,CAAC,EAAErC,qBAHL;AAIE,IAAA,KAAK,EAAE;AAJT,kBAME,6BAAC,uBAAD;AAAQ,IAAA,EAAE,EAAE,CAAZ;AAAe,IAAA,EAAE,EAAE,CAAnB;AAAsB,IAAA,KAAK,EAAC,iBAA5B;AAA8C,IAAA,IAAI,EAAE;AAApD,IANF,CAZF,eAoBE,6BAAC,uBAAD;AACE,IAAA,EAAE,EAAEmC,UADN;AAEE,IAAA,EAAE,EAAEE,UAFN;AAGE,IAAA,CAAC,EAAEtC,eAHL;AAIE,IAAA,KAAK,EAAE9B;AAJT,IApBF,CA3CJ,CADF,CATF,EAqFGgB,eAAe,IAAI,IAAnB,iBACC,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEsF,MAAM,CAACG;AAApB,kBACE,6BAAC,eAAD,OADF,CAtFJ,CADF,CADF,CADF;AAiGD;;AAED,MAAMH,MAAM,GAAGK,wBAAWC,MAAX,CAAkB;AAC/BF,EAAAA,GAAG,EAAE;AACHG,IAAAA,IAAI,EAAE;AADH,GAD0B;AAI/BN,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE;AADG,GAJoB;AAO/BL,EAAAA,kBAAkB,EAAE;AAClBM,IAAAA,eAAe,EAAE;AADC,GAPW;AAU/BL,EAAAA,OAAO,EAAE;AACPrF,IAAAA,MAAM,EAAE;AADD;AAVsB,CAAlB,CAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { View, StyleSheet, LayoutChangeEvent } from 'react-native'\nimport {\n  Canvas,\n  runSpring,\n  SkPath,\n  LinearGradient,\n  Path,\n  Skia,\n  useValue,\n  useComputedValue,\n  vec,\n  Group,\n  PathCommand,\n  useSharedValueEffect,\n  mix,\n  Circle,\n  Shadow,\n} from '@shopify/react-native-skia'\nimport type { AnimatedLineGraphProps } from './LineGraphProps'\nimport { SelectionDot as DefaultSelectionDot } from './SelectionDot'\nimport {\n  createGraphPath,\n  createGraphPathWithGradient,\n  getGraphPathRange,\n  GraphPathRange,\n  pixelFactorX,\n} from './CreateGraphPath'\nimport Reanimated, {\n  runOnJS,\n  useAnimatedReaction,\n  useSharedValue,\n  useDerivedValue,\n  cancelAnimation,\n  withRepeat,\n  withSequence,\n  withTiming,\n  withDelay,\n} from 'react-native-reanimated'\nimport { getSixDigitHex } from './utils/getSixDigitHex'\nimport { GestureDetector } from 'react-native-gesture-handler'\nimport { usePanGesture } from './hooks/usePanGesture'\nimport { getYForX } from './GetYForX'\nimport { hexToRgba } from './utils/hexToRgba'\n\nconst INDICATOR_RADIUS = 7\nconst INDICATOR_BORDER_MULTIPLIER = 1.3\nconst INDICATOR_PULSE_BLUR_RADIUS_SMALL =\n  INDICATOR_RADIUS * INDICATOR_BORDER_MULTIPLIER\nconst INDICATOR_PULSE_BLUR_RADIUS_BIG =\n  INDICATOR_RADIUS * INDICATOR_BORDER_MULTIPLIER + 20\n\n// weird rea type bug\nconst ReanimatedView = Reanimated.View as any\n\nexport function AnimatedLineGraph({\n  points,\n  color,\n  gradientFillColors,\n  lineThickness = 3,\n  range,\n  enableFadeInMask,\n  enablePanGesture,\n  onPointSelected,\n  onGestureStart,\n  onGestureEnd,\n  SelectionDot = DefaultSelectionDot,\n  enableIndicator = false,\n  indicatorPulsating = false,\n  horizontalPadding = enableIndicator\n    ? INDICATOR_RADIUS * INDICATOR_BORDER_MULTIPLIER\n    : 0,\n  verticalPadding = lineThickness,\n  TopAxisLabel,\n  BottomAxisLabel,\n  ...props\n}: AnimatedLineGraphProps): React.ReactElement {\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n  const interpolateProgress = useValue(0)\n\n  const { gesture, isActive, x } = usePanGesture({ holdDuration: 300 })\n  const circleX = useValue(0)\n  const circleY = useValue(0)\n  const pathEnd = useValue(0)\n  const indicatorRadius = useValue(enableIndicator ? INDICATOR_RADIUS : 0)\n  const indicatorBorderRadius = useComputedValue(\n    () => indicatorRadius.current * INDICATOR_BORDER_MULTIPLIER,\n    [indicatorRadius]\n  )\n\n  const pulseTrigger = useDerivedValue(() => {\n    'worklet'\n    return isActive.value ? 1 : 0\n  }, [])\n  const indicatorPulseAnimation = useSharedValue(0)\n  const indicatorPulseRadius = useValue(INDICATOR_PULSE_BLUR_RADIUS_SMALL)\n  const indicatorPulseOpacity = useValue(1)\n\n  const positions = useComputedValue(\n    () => [\n      0,\n      Math.min(0.15, pathEnd.current),\n      pathEnd.current,\n      pathEnd.current,\n      1,\n    ],\n    [pathEnd]\n  )\n  const onLayout = useCallback(\n    ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n      setWidth(Math.round(layout.width))\n      setHeight(Math.round(layout.height))\n    },\n    []\n  )\n\n  const straightLine = useMemo(() => {\n    const path = Skia.Path.Make()\n    path.moveTo(0, height / 2)\n    for (let i = 0; i < width - 1; i += 2) {\n      const x = i\n      const y = height / 2\n      path.cubicTo(x, y, x, y, x, y)\n    }\n\n    return path\n  }, [height, width])\n\n  const paths = useValue<{ from?: SkPath; to?: SkPath }>({})\n  const gradientPaths = useValue<{ from?: SkPath; to?: SkPath }>({})\n  const commands = useRef<PathCommand[]>([])\n  const [commandsChanged, setCommandsChanged] = useState(0)\n\n  const pathRange: GraphPathRange = useMemo(\n    () => getGraphPathRange(points, range),\n    [points, range]\n  )\n\n  const drawingWidth = useMemo(() => {\n    const lastPoint = points[points.length - 1]!\n\n    return Math.max(\n      Math.floor(\n        (width - 2 * horizontalPadding) *\n          pixelFactorX(lastPoint.date, pathRange.x.min, pathRange.x.max)\n      ),\n      0\n    )\n  }, [horizontalPadding, pathRange.x.max, pathRange.x.min, points, width])\n\n  const indicatorX = useMemo(\n    () =>\n      commandsChanged >= 0\n        ? Math.floor(drawingWidth) + horizontalPadding\n        : undefined,\n    [commandsChanged, drawingWidth, horizontalPadding]\n  )\n  const indicatorY = useMemo(\n    () =>\n      commandsChanged >= 0 && indicatorX != null\n        ? getYForX(commands.current, indicatorX)\n        : undefined,\n    [commandsChanged, indicatorX]\n  )\n\n  const indicatorPulseColor = useMemo(() => hexToRgba(color, 0.4), [color])\n\n  const shouldFillGradient = gradientFillColors != null\n\n  useEffect(() => {\n    if (height < 1 || width < 1) {\n      // view is not yet measured!\n      return\n    }\n    if (points.length < 1) {\n      // points are still empty!\n      return\n    }\n\n    let path\n    let gradientPath\n\n    const createGraphPathProps = {\n      points: points,\n      range: pathRange,\n      horizontalPadding: horizontalPadding,\n      verticalPadding: verticalPadding,\n      canvasHeight: height,\n      canvasWidth: width,\n    }\n\n    if (shouldFillGradient) {\n      const { path: pathNew, gradientPath: gradientPathNew } =\n        createGraphPathWithGradient(createGraphPathProps)\n\n      path = pathNew\n      gradientPath = gradientPathNew\n    } else {\n      path = createGraphPath(createGraphPathProps)\n    }\n\n    commands.current = path.toCmds()\n\n    if (gradientPath != null) {\n      const previous = gradientPaths.current\n      let from: SkPath = previous.to ?? straightLine\n      if (previous.from != null && interpolateProgress.current < 1)\n        from =\n          from.interpolate(previous.from, interpolateProgress.current) ?? from\n\n      if (gradientPath.isInterpolatable(from)) {\n        gradientPaths.current = {\n          from: from,\n          to: gradientPath,\n        }\n      } else {\n        gradientPaths.current = {\n          from: gradientPath,\n          to: gradientPath,\n        }\n      }\n    }\n\n    const previous = paths.current\n    let from: SkPath = previous.to ?? straightLine\n    if (previous.from != null && interpolateProgress.current < 1)\n      from =\n        from.interpolate(previous.from, interpolateProgress.current) ?? from\n\n    if (path.isInterpolatable(from)) {\n      paths.current = {\n        from: from,\n        to: path,\n      }\n    } else {\n      paths.current = {\n        from: path,\n        to: path,\n      }\n    }\n\n    setCommandsChanged(commandsChanged + 1)\n\n    runSpring(\n      interpolateProgress,\n      { from: 0, to: 1 },\n      {\n        mass: 1,\n        stiffness: 500,\n        damping: 400,\n        velocity: 0,\n      }\n    )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    height,\n    horizontalPadding,\n    interpolateProgress,\n    pathRange,\n    paths,\n    shouldFillGradient,\n    gradientPaths,\n    points,\n    range,\n    straightLine,\n    verticalPadding,\n    width,\n  ])\n\n  const gradientColors = useMemo(() => {\n    if (enableFadeInMask) {\n      return [\n        `${getSixDigitHex(color)}00`,\n        `${getSixDigitHex(color)}ff`,\n        `${getSixDigitHex(color)}ff`,\n        `${getSixDigitHex(color)}33`,\n        `${getSixDigitHex(color)}33`,\n      ]\n    } else {\n      return [\n        color,\n        color,\n        color,\n        `${getSixDigitHex(color)}33`,\n        `${getSixDigitHex(color)}33`,\n      ]\n    }\n  }, [color, enableFadeInMask])\n\n  const path = useComputedValue(\n    () => {\n      const from = paths.current.from ?? straightLine\n      const to = paths.current.to ?? straightLine\n\n      return to.interpolate(from, interpolateProgress.current)\n    },\n    // RN Skia deals with deps differently. They are actually the required SkiaValues that the derived value listens to, not react values.\n    [interpolateProgress]\n  )\n\n  const gradientPath = useComputedValue(\n    () => {\n      const from = gradientPaths.current.from ?? straightLine\n      const to = gradientPaths.current.to ?? straightLine\n\n      return to.interpolate(from, interpolateProgress.current)\n    },\n    // RN Skia deals with deps differently. They are actually the required SkiaValues that the derived value listens to, not react values.\n    [interpolateProgress]\n  )\n\n  const stopPulsating = useCallback(() => {\n    cancelAnimation(indicatorPulseAnimation)\n    indicatorPulseAnimation.value = 0\n  }, [indicatorPulseAnimation])\n\n  const startPulsating = useCallback(() => {\n    indicatorPulseAnimation.value = withRepeat(\n      withDelay(\n        1000,\n        withSequence(\n          withTiming(1, { duration: 1100 }),\n          withTiming(0, { duration: 0 }), // revert to 0\n          withTiming(0, { duration: 1200 }), // delay between pulses\n          withTiming(1, { duration: 1100 }),\n          withTiming(1, { duration: 2000 }) // delay after both pulses\n        )\n      ),\n      -1\n    )\n  }, [indicatorPulseAnimation])\n\n  const setFingerX = useCallback(\n    (fingerX: number) => {\n      const lowerBound = horizontalPadding\n      const upperBound = drawingWidth + horizontalPadding\n\n      const fingerXInRange = Math.min(Math.max(fingerX, lowerBound), upperBound)\n      const y = getYForX(commands.current, fingerXInRange)\n\n      if (y != null) {\n        circleY.current = y\n        circleX.current = fingerXInRange\n      }\n\n      if (fingerX > lowerBound && fingerX < upperBound && isActive.value)\n        pathEnd.current = fingerX / width\n\n      const actualFingerX = fingerX - horizontalPadding\n\n      const index = Math.round((actualFingerX / upperBound) * points.length)\n      const pointIndex = Math.min(Math.max(index, 0), points.length - 1)\n      const dataPoint = points[pointIndex]\n      if (dataPoint != null) onPointSelected?.(dataPoint)\n    },\n    [\n      circleX,\n      circleY,\n      drawingWidth,\n      horizontalPadding,\n      isActive.value,\n      onPointSelected,\n      pathEnd,\n      points,\n      width,\n    ]\n  )\n\n  const setIsActive = useCallback(\n    (active: boolean) => {\n      runSpring(indicatorRadius, !active ? INDICATOR_RADIUS : 0, {\n        mass: 1,\n        stiffness: 1000,\n        damping: 50,\n        velocity: 0,\n      })\n\n      if (active) {\n        onGestureStart?.()\n        stopPulsating()\n      } else {\n        onGestureEnd?.()\n        pathEnd.current = 1\n        startPulsating()\n      }\n    },\n    [\n      indicatorRadius,\n      onGestureEnd,\n      onGestureStart,\n      pathEnd,\n      startPulsating,\n      stopPulsating,\n    ]\n  )\n\n  useAnimatedReaction(\n    () => x.value,\n    (fingerX) => {\n      if (isActive.value || fingerX) {\n        runOnJS(setFingerX)(fingerX)\n      }\n    },\n    [isActive, setFingerX, width, x]\n  )\n\n  useAnimatedReaction(\n    () => isActive.value,\n    (active) => {\n      runOnJS(setIsActive)(active)\n    },\n    [isActive, setIsActive]\n  )\n\n  useEffect(() => {\n    if (points.length !== 0 && commands.current.length !== 0)\n      pathEnd.current = 1\n  }, [commands, pathEnd, points.length])\n\n  useEffect(() => {\n    if (indicatorPulsating) {\n      startPulsating()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [indicatorPulsating])\n\n  useSharedValueEffect(\n    () => {\n      if (pulseTrigger.value === 0) {\n        indicatorPulseRadius.current = mix(\n          indicatorPulseAnimation.value,\n          INDICATOR_PULSE_BLUR_RADIUS_SMALL,\n          INDICATOR_PULSE_BLUR_RADIUS_BIG\n        )\n        indicatorPulseOpacity.current = mix(indicatorPulseAnimation.value, 1, 0)\n      } else {\n        indicatorPulseRadius.current = 0\n      }\n    },\n    indicatorPulseAnimation,\n    pulseTrigger\n  )\n\n  return (\n    <View {...props}>\n      <GestureDetector gesture={enablePanGesture ? gesture : undefined}>\n        <ReanimatedView style={[styles.container, styles.axisLabelContainer]}>\n          {/* Top Label (max price) */}\n          {TopAxisLabel != null && (\n            <View style={styles.axisRow}>\n              <TopAxisLabel />\n            </View>\n          )}\n\n          {/* Actual Skia Graph */}\n          <View style={styles.container} onLayout={onLayout}>\n            <Canvas style={styles.svg}>\n              <Group>\n                <Path\n                  // @ts-ignore\n                  path={path}\n                  strokeWidth={lineThickness}\n                  style=\"stroke\"\n                  strokeJoin=\"round\"\n                  strokeCap=\"round\"\n                >\n                  <LinearGradient\n                    start={vec(0, 0)}\n                    end={vec(width, 0)}\n                    colors={gradientColors}\n                    positions={positions}\n                  />\n                </Path>\n\n                {shouldFillGradient && (\n                  <Path\n                    // @ts-ignore\n                    path={gradientPath}\n                  >\n                    <LinearGradient\n                      start={vec(0, 0)}\n                      end={vec(0, height)}\n                      colors={gradientFillColors}\n                    />\n                  </Path>\n                )}\n              </Group>\n\n              {SelectionDot != null && (\n                <SelectionDot\n                  isActive={isActive}\n                  color={color}\n                  lineThickness={lineThickness}\n                  circleX={circleX}\n                  circleY={circleY}\n                />\n              )}\n\n              {enableIndicator && (\n                <Group>\n                  {indicatorPulsating && (\n                    <Circle\n                      cx={indicatorX}\n                      cy={indicatorY}\n                      r={indicatorPulseRadius}\n                      opacity={indicatorPulseOpacity}\n                      color={indicatorPulseColor}\n                      style=\"fill\"\n                    />\n                  )}\n\n                  <Circle\n                    cx={indicatorX}\n                    cy={indicatorY}\n                    r={indicatorBorderRadius}\n                    color={'#ffffff'}\n                  >\n                    <Shadow dx={2} dy={2} color=\"rgba(0,0,0,0.2)\" blur={4} />\n                  </Circle>\n                  <Circle\n                    cx={indicatorX}\n                    cy={indicatorY}\n                    r={indicatorRadius}\n                    color={color}\n                  />\n                </Group>\n              )}\n            </Canvas>\n          </View>\n\n          {/* Bottom Label (min price) */}\n          {BottomAxisLabel != null && (\n            <View style={styles.axisRow}>\n              <BottomAxisLabel />\n            </View>\n          )}\n        </ReanimatedView>\n      </GestureDetector>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  svg: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n  },\n  axisLabelContainer: {\n    paddingVertical: 20,\n  },\n  axisRow: {\n    height: 17,\n  },\n})\n"]}