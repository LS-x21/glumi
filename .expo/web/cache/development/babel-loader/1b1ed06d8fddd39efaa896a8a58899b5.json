{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { bloodSugarGraph } from \"../style/style\";\nimport Svg, { Path } from 'react-native-svg';\nimport { parseISO } from 'date-fns';\nimport * as d3 from 'd3';\nimport { Data } from \"./Data.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var vw = Dimensions.get(\"window\").width;\n\n  for (var i = 0; i < Data.length; i++) {\n    Data[i][0] = parseISO(Data[i][0]);\n  }\n\n  var width = vw * .75;\n  var height = width;\n  var margin = {\n    top: vw * .1,\n    bottom: vw * .1,\n    left: vw * .1,\n    right: vw * .1\n  };\n  var xAxis = d3.scaleLinear().domain([new Date(Data[0][0]), new Date(Data[Data.length - 1][0])]).range([margin.left, width - margin.right]);\n  var yAxis = d3.scaleLinear().domain(d3.extent(Data.map(function (i) {\n    return i[1];\n  }))).range([height - margin.bottom, margin.top]);\n  var line = d3.line().x(function (i) {\n    return xAxis(i[0]);\n  }).y(function (i) {\n    return yAxis(i[1]);\n  });\n  var graph = line(Data);\n  return _jsx(View, {\n    style: bloodSugarGraph.container,\n    children: _jsxs(Svg, {\n      width: width,\n      height: height,\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [_jsx(Path, {\n        fill: \"none\",\n        stroke: \"#66cc99\",\n        strokeWidth: vw * .02,\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        d: graph\n      }), yAxis.ticks().map(function (i) {\n        return _jsx(Text, {\n          y: yAxis(i),\n          style: bloodSugarGraph.yLabel,\n          children: i\n        });\n      })]\n    })\n  });\n});","map":{"version":3,"names":["bloodSugarGraph","Svg","Path","parseISO","d3","Data","sugarData","yHideRatio","defaultMax","vw","Dimensions","get","width","i","length","height","margin","top","bottom","left","right","xAxis","scaleLinear","domain","Date","range","yAxis","extent","map","line","x","y","graph","container","ticks","yLabel"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions, View } from 'react-native';\r\nimport { bloodSugarGraph } from '../style/style';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport { parseISO } from 'date-fns'\r\nimport * as d3 from 'd3';\r\nimport { Data } from './Data.js';\r\n\r\nexport default () => {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  for (let i = 0; i < Data.length; i++) {\r\n    Data[i][0] = parseISO(Data[i][0]);\r\n  }\r\n\r\n  const width = vw * .75;\r\n  const height = width;\r\n  const margin = {\r\n    top: vw * .1,\r\n    bottom: vw * .1,\r\n    left: vw * .1,\r\n    right: vw * .1,\r\n  }\r\n\r\n  const xAxis = d3.scaleLinear()\r\n    .domain([new Date(Data[0][0]), new Date(Data[Data.length - 1][0])])\r\n    .range([margin.left, width - margin.right]);\r\n\r\n  const yAxis = d3.scaleLinear()\r\n    .domain(d3.extent(Data.map((i) => i[1])))\r\n    .range([height - margin.bottom, margin.top]);\r\n\r\n  const line = d3.line()\r\n    .x(i => xAxis(i[0]))\r\n    .y(i => yAxis(i[1]))\r\n  let graph = line(Data);\r\n\r\n  return (\r\n    <View style={bloodSugarGraph.container}>\r\n      <Svg\r\n        width={width}\r\n        height={height}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <Path\r\n          fill=\"none\"\r\n          stroke=\"#66cc99\"\r\n          strokeWidth={vw * .02}\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d={graph}\r\n        />\r\n        {yAxis.ticks().map((i) => (\r\n          <Text\r\n            y={yAxis(i)}\r\n            style={bloodSugarGraph.yLabel}>\r\n            {i}\r\n          </Text>\r\n        ))}\r\n      </Svg>\r\n    </View>\r\n  );\r\n}"],"mappings":";;AACA,SAASA,eAAT;AACA,OAAOC,GAAP,IAAcC,IAAd,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,IAAT;;;AAEA,gBAAe,YAAM;EACnB,IAAMC,SAAS,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CAAlB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,UAAU,GAAG,GAAjB;EAEA,IAAMC,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAApC;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACS,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;IACpCR,IAAI,CAACQ,CAAD,CAAJ,CAAQ,CAAR,IAAaV,QAAQ,CAACE,IAAI,CAACQ,CAAD,CAAJ,CAAQ,CAAR,CAAD,CAArB;EACD;;EAED,IAAMD,KAAK,GAAGH,EAAE,GAAG,GAAnB;EACA,IAAMM,MAAM,GAAGH,KAAf;EACA,IAAMI,MAAM,GAAG;IACbC,GAAG,EAAER,EAAE,GAAG,EADG;IAEbS,MAAM,EAAET,EAAE,GAAG,EAFA;IAGbU,IAAI,EAAEV,EAAE,GAAG,EAHE;IAIbW,KAAK,EAAEX,EAAE,GAAG;EAJC,CAAf;EAOA,IAAMY,KAAK,GAAGjB,EAAE,CAACkB,WAAH,GACXC,MADW,CACJ,CAAC,IAAIC,IAAJ,CAASnB,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAAT,CAAD,EAAuB,IAAImB,IAAJ,CAASnB,IAAI,CAACA,IAAI,CAACS,MAAL,GAAc,CAAf,CAAJ,CAAsB,CAAtB,CAAT,CAAvB,CADI,EAEXW,KAFW,CAEL,CAACT,MAAM,CAACG,IAAR,EAAcP,KAAK,GAAGI,MAAM,CAACI,KAA7B,CAFK,CAAd;EAIA,IAAMM,KAAK,GAAGtB,EAAE,CAACkB,WAAH,GACXC,MADW,CACJnB,EAAE,CAACuB,MAAH,CAAUtB,IAAI,CAACuB,GAAL,CAAS,UAACf,CAAD;IAAA,OAAOA,CAAC,CAAC,CAAD,CAAR;EAAA,CAAT,CAAV,CADI,EAEXY,KAFW,CAEL,CAACV,MAAM,GAAGC,MAAM,CAACE,MAAjB,EAAyBF,MAAM,CAACC,GAAhC,CAFK,CAAd;EAIA,IAAMY,IAAI,GAAGzB,EAAE,CAACyB,IAAH,GACVC,CADU,CACR,UAAAjB,CAAC;IAAA,OAAIQ,KAAK,CAACR,CAAC,CAAC,CAAD,CAAF,CAAT;EAAA,CADO,EAEVkB,CAFU,CAER,UAAAlB,CAAC;IAAA,OAAIa,KAAK,CAACb,CAAC,CAAC,CAAD,CAAF,CAAT;EAAA,CAFO,CAAb;EAGA,IAAImB,KAAK,GAAGH,IAAI,CAACxB,IAAD,CAAhB;EAEA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEL,eAAe,CAACiC,SAA7B;IAAA,UACE,MAAC,GAAD;MACE,KAAK,EAAErB,KADT;MAEE,MAAM,EAAEG,MAFV;MAGE,KAAK,EAAC,4BAHR;MAAA,WAKE,KAAC,IAAD;QACE,IAAI,EAAC,MADP;QAEE,MAAM,EAAC,SAFT;QAGE,WAAW,EAAEN,EAAE,GAAG,GAHpB;QAIE,aAAa,EAAC,OAJhB;QAKE,cAAc,EAAC,OALjB;QAME,CAAC,EAAEuB;MANL,EALF,EAaGN,KAAK,CAACQ,KAAN,GAAcN,GAAd,CAAkB,UAACf,CAAD;QAAA,OACjB,KAAC,IAAD;UACE,CAAC,EAAEa,KAAK,CAACb,CAAD,CADV;UAEE,KAAK,EAAEb,eAAe,CAACmC,MAFzB;UAAA,UAGGtB;QAHH,EADiB;MAAA,CAAlB,CAbH;IAAA;EADF,EADF;AAyBD,CA1DD"},"metadata":{},"sourceType":"module"}