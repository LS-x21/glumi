{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Effect, useRef } from 'react';\nimport { general, home, textShift } from \"./../style/style.js\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport BloodSugarGraph from \"./BloodSugarGraph.js\";\nimport Sidebar from \"./Sidebar.js\";\nimport BloodSugarAnalysis from \"./BloodSugarAnalysis.js\";\nimport LogEvent from \"./LogEvent.js\";\nimport BloodPressureGraph from \"./BloodPressureGraph.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function HomePage() {\n  var textShift = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    Animated.timing(textShift, {\n      toValue: 100,\n      duration: 500,\n      useNativeDriver: false\n    }).start();\n  });\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: general.background,\n      children: [_jsx(LinearGradient, {\n        colors: ['#66CC99', '#3399FF', '#CCCCFF'],\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 1,\n          y: 1\n        },\n        style: general.backgroundGradient\n      }), _jsx(SafeAreaView, {\n        children: _jsxs(View, {\n          style: general.container,\n          children: [_jsx(View, {\n            style: home.sidebar,\n            children: _jsx(Sidebar, {})\n          }), _jsx(Animated.text, {\n            style: [general.title, {\n              color: textShift.interpolate({\n                inputRange: [0, 100],\n                outputRange: [\"#fff\", \"000\"]\n              })\n            }],\n            children: Greeting()\n          }), _jsx(View, {\n            style: home.mainInfograph,\n            children: _jsx(View, {\n              style: home.mainInfographContent,\n              children: _jsx(BloodSugarGraph, {})\n            })\n          }), _jsxs(View, {\n            style: home.subContent,\n            children: [_jsx(View, {\n              style: home.infographAnalysis,\n              children: _jsx(BloodSugarAnalysis, {})\n            }), _jsx(View, {\n              style: home.inputData,\n              children: _jsx(LogEvent, {})\n            })]\n          }), _jsx(View, {\n            style: home.bloodPressure,\n            children: _jsx(View, {\n              style: home.bloodPressureContent,\n              children: _jsx(BloodPressureGraph, {})\n            })\n          })]\n        })\n      })]\n    })\n  });\n}\n\nfunction Greeting() {\n  var greeting = \"Good\\nMorning\";\n  var time = new Date();\n\n  if (time.getHours() > 18) {\n    greeting = \"Good\\nEvening\";\n  } else if (time.getHours() > 12) {\n    greeting = \"Good\\nAfternoon\";\n  }\n\n  return greeting;\n}","map":{"version":3,"names":["Effect","useRef","general","home","textShift","LinearGradient","BloodSugarGraph","Sidebar","BloodSugarAnalysis","LogEvent","BloodPressureGraph","HomePage","Animated","Value","current","useEffect","timing","toValue","duration","useNativeDriver","start","background","x","y","backgroundGradient","container","sidebar","title","color","interpolate","inputRange","outputRange","Greeting","mainInfograph","mainInfographContent","subContent","infographAnalysis","inputData","bloodPressure","bloodPressureContent","greeting","time","Date","getHours"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/HomePage.js"],"sourcesContent":["import { Text, View, SafeAreaView, Animated } from 'react-native';\r\nimport { Effect, useRef } from 'react';\r\nimport { general, home, textShift } from './../style/style.js';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport BloodSugarGraph from './BloodSugarGraph.js';\r\nimport Sidebar from './Sidebar.js';\r\nimport BloodSugarAnalysis from './BloodSugarAnalysis.js';\r\nimport LogEvent from './LogEvent.js';\r\nimport BloodPressureGraph from './BloodPressureGraph.js';\r\n\r\n\r\n\r\nexport default function HomePage() {\r\n  const textShift = useRef(new Animated.Value(0)).current;\r\n\r\n  useEffect(() => {\r\n    Animated.timing(textShift, {\r\n      toValue: 100,\r\n      duration: 500,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <View style={general.background}>\r\n        <LinearGradient\r\n          colors={['#66CC99', '#3399FF', '#CCCCFF']}\r\n          start={{ x: 0, y: 0 }}\r\n          end={{ x: 1, y: 1 }}\r\n          style={general.backgroundGradient}\r\n        ></LinearGradient>\r\n        <SafeAreaView>\r\n          <View style={general.container}>\r\n            <View style={home.sidebar}>\r\n              <Sidebar />\r\n            </View>\r\n            <Animated.text\r\n              style={[general.title, { color: textShift.interpolate({\r\n                inputRange: [0, 100],\r\n                outputRange: [\"#fff\", \"000\"],\r\n              }) }]}\r\n            >\r\n              {Greeting()}\r\n            </Animated.text>\r\n            <View style={home.mainInfograph}>\r\n              <View style={home.mainInfographContent}>\r\n                <BloodSugarGraph />\r\n              </View>\r\n            </View>\r\n            <View style={home.subContent}>\r\n              <View style={home.infographAnalysis}>\r\n                <BloodSugarAnalysis />\r\n              </View>\r\n              <View style={home.inputData}>\r\n                <LogEvent />\r\n              </View>\r\n            </View>\r\n            <View style={home.bloodPressure}>\r\n              <View style={home.bloodPressureContent}>\r\n                <BloodPressureGraph />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </SafeAreaView>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Greeting() {\r\n  let greeting = \"Good\\nMorning\";\r\n  let time = new Date();\r\n  if (time.getHours() > 18) {\r\n    greeting = \"Good\\nEvening\";\r\n  } else if (time.getHours() > 12) {\r\n    greeting = \"Good\\nAfternoon\";\r\n  }\r\n  return greeting;\r\n}"],"mappings":";;;;AACA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,OAA/B;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,SAAxB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,eAAP;AACA,OAAOC,OAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,QAAP;AACA,OAAOC,kBAAP;;;;AAIA,eAAe,SAASC,QAAT,GAAoB;EACjC,IAAMP,SAAS,GAAGH,MAAM,CAAC,IAAIW,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAAhD;EAEAC,SAAS,CAAC,YAAM;IACdH,QAAQ,CAACI,MAAT,CAAgBZ,SAAhB,EAA2B;MACzBa,OAAO,EAAE,GADgB;MAEzBC,QAAQ,EAAE,GAFe;MAGzBC,eAAe,EAAE;IAHQ,CAA3B,EAIGC,KAJH;EAKD,CANQ,CAAT;EAQA,OACE;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAElB,OAAO,CAACmB,UAArB;MAAA,WACE,KAAC,cAAD;QACE,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CADV;QAEE,KAAK,EAAE;UAAEC,CAAC,EAAE,CAAL;UAAQC,CAAC,EAAE;QAAX,CAFT;QAGE,GAAG,EAAE;UAAED,CAAC,EAAE,CAAL;UAAQC,CAAC,EAAE;QAAX,CAHP;QAIE,KAAK,EAAErB,OAAO,CAACsB;MAJjB,EADF,EAOE,KAAC,YAAD;QAAA,UACE,MAAC,IAAD;UAAM,KAAK,EAAEtB,OAAO,CAACuB,SAArB;UAAA,WACE,KAAC,IAAD;YAAM,KAAK,EAAEtB,IAAI,CAACuB,OAAlB;YAAA,UACE,KAAC,OAAD;UADF,EADF,EAIE,KAAC,QAAD,CAAU,IAAV;YACE,KAAK,EAAE,CAACxB,OAAO,CAACyB,KAAT,EAAgB;cAAEC,KAAK,EAAExB,SAAS,CAACyB,WAAV,CAAsB;gBACpDC,UAAU,EAAE,CAAC,CAAD,EAAI,GAAJ,CADwC;gBAEpDC,WAAW,EAAE,CAAC,MAAD,EAAS,KAAT;cAFuC,CAAtB;YAAT,CAAhB,CADT;YAAA,UAMGC,QAAQ;UANX,EAJF,EAYE,KAAC,IAAD;YAAM,KAAK,EAAE7B,IAAI,CAAC8B,aAAlB;YAAA,UACE,KAAC,IAAD;cAAM,KAAK,EAAE9B,IAAI,CAAC+B,oBAAlB;cAAA,UACE,KAAC,eAAD;YADF;UADF,EAZF,EAiBE,MAAC,IAAD;YAAM,KAAK,EAAE/B,IAAI,CAACgC,UAAlB;YAAA,WACE,KAAC,IAAD;cAAM,KAAK,EAAEhC,IAAI,CAACiC,iBAAlB;cAAA,UACE,KAAC,kBAAD;YADF,EADF,EAIE,KAAC,IAAD;cAAM,KAAK,EAAEjC,IAAI,CAACkC,SAAlB;cAAA,UACE,KAAC,QAAD;YADF,EAJF;UAAA,EAjBF,EAyBE,KAAC,IAAD;YAAM,KAAK,EAAElC,IAAI,CAACmC,aAAlB;YAAA,UACE,KAAC,IAAD;cAAM,KAAK,EAAEnC,IAAI,CAACoC,oBAAlB;cAAA,UACE,KAAC,kBAAD;YADF;UADF,EAzBF;QAAA;MADF,EAPF;IAAA;EADF,EADF;AA6CD;;AAED,SAASP,QAAT,GAAoB;EAClB,IAAIQ,QAAQ,GAAG,eAAf;EACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;EACA,IAAID,IAAI,CAACE,QAAL,KAAkB,EAAtB,EAA0B;IACxBH,QAAQ,GAAG,eAAX;EACD,CAFD,MAEO,IAAIC,IAAI,CAACE,QAAL,KAAkB,EAAtB,EAA0B;IAC/BH,QAAQ,GAAG,iBAAX;EACD;;EACD,OAAOA,QAAP;AACD"},"metadata":{},"sourceType":"module"}