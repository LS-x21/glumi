{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { scaleLinear, scaleBand, select, csv, svg, max, min } from 'd3';\nimport { bloodSugarGraph } from \"../style/style\";\nimport rawData from \"./data.csv\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function BloodSugarGraph() {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var opacity = 1;\n  var vw = Dimensions.get(\"window\").width;\n  var svg = select('svg');\n  var width = 500;\n  var height = 500;\n  csv(rawData).then(function (data) {\n    data.forEach(function (i) {\n      i.value = +i.value;\n    });\n    renderData(data);\n  });\n\n  var renderData = function renderData(data) {\n    var xScale = scaleLinear().domain([0, max(data, function (i) {\n      return i.value;\n    })]).range(0, width);\n    var yScale = scaleBand().domain(data, function (i) {\n      return data.date;\n    }).range([height, 35]);\n    svg.selectAll('rect').data(data).enter().append('rect').attr('width', function (i) {\n      return xScale(i.value);\n    }).attr('height', 500);\n  };\n\n  var makeGraph = function makeGraph() {\n    var min = Math.min.apply(Math, _toConsumableArray(data.values()));\n    var max = Math.max.apply(Math, _toConsumableArray(data.values()));\n  };\n\n  return _jsx(Text, {\n    children: \"hello world\"\n  });\n}","map":{"version":3,"names":["scaleLinear","scaleBand","select","csv","svg","max","min","bloodSugarGraph","rawData","BloodSugarGraph","sugarData","yHideRatio","defaultMax","opacity","vw","Dimensions","get","width","height","then","data","forEach","i","value","renderData","xScale","domain","range","yScale","date","selectAll","enter","append","attr","makeGraph","Math","values"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions, Text } from 'react-native';\r\nimport { scaleLinear, scaleBand, select, csv, svg, max, min } from 'd3';\r\nimport { bloodSugarGraph } from '../style/style';\r\nimport rawData from './data.csv';\r\n// import { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\r\n\r\n\r\nexport default function BloodSugarGraph() {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n  let opacity = 1;\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  const svg = select('svg');\r\n\r\n  const width = 500;\r\n  const height = 500;\r\n\r\n  csv(rawData).then(data => {\r\n    data.forEach(i => {\r\n      i.value = +i.value;\r\n    });\r\n    renderData(data)\r\n  })\r\n\r\n  const renderData = data => {\r\n    const xScale = scaleLinear().domain([0, max(data, i => i.value)]).range(0, width); //the 10 is padding\r\n    const yScale = scaleBand().domain(data, i=>data.date).range([height, 35]); //the 35 is padding\r\n\r\n    svg.selectAll('rect').data(data).enter()\r\n      .append('rect')\r\n      .attr('width', i => xScale(i.value))\r\n      .attr('height', 500)\r\n  }\r\n\r\n  const makeGraph = () => {\r\n\r\n\r\n    const min = Math.min(...data.values());\r\n    const max = Math.max(...data.values());\r\n\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <Text>hello world</Text>\r\n  );\r\n\r\n\r\n\r\n  // const data = {\r\n  //   labels: [\"sun\", \"mon\", \"tue\"],\r\n  //   datasets: [\r\n  //     {\r\n  //       data: [\r\n  //         Math.random() * 100,\r\n  //         Math.random() * 100,\r\n  //         Math.random() * 100\r\n  //       ]\r\n  //     }\r\n  //   ],\r\n  // };\r\n\r\n  // const chartConfig = {\r\n  //   backgroundColor: `rgba(255, 255, 255, ${opacity}})`,\r\n  //   backgroundGradientFrom: `rgba(255, 255, 255, ${opacity})`,\r\n  //   backgroundGradientTo: `rgba(255, 255, 255, ${opacity})`,\r\n  //   decimalPlaces: 2,\r\n  //   color: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n  //   labelColor: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n  //   style: {\r\n  //     borderRadius: 12,\r\n  //   },\r\n\r\n  // }\r\n\r\n  // return (\r\n  //   <LineChart\r\n  //     style={\r\n  //       {\r\n  //         shadowColor: \"#000\",\r\n  //         shadowOffset: { width: vw * .01, height: vw * .01 },\r\n  //         shadowOpacity: .5,\r\n  //         shadowRadius: vw * .1,\r\n  //         marginVertical: 8,\r\n  //         borderRadius: 10,\r\n  //         width: vw * .8,\r\n  //       }\r\n  //     }\r\n  //     withOuterLines\r\n  //     data={data}\r\n  //     width={vw * .8} // from react-native\r\n  //     height={vw * .8}\r\n  //     yAxisInterval={1} // optional, defaults to 1\r\n  //     chartConfig={chartConfig}\r\n  //     yLabelsOffset={vw * .05}\r\n  //     xLabelsOffset={vw * .02}\r\n  //   />\r\n  // );\r\n}"],"mappings":";;;AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,MAAjC,EAAyCC,GAAzC,EAA8CC,GAA9C,EAAmDC,GAAnD,EAAwDC,GAAxD,QAAmE,IAAnE;AACA,SAASC,eAAT;AACA,OAAOC,OAAP;;AAIA,eAAe,SAASC,eAAT,GAA2B;EACxC,IAAMC,SAAS,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CAAlB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,OAAO,GAAG,CAAd;EACA,IAAMC,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAApC;EAEA,IAAMb,GAAG,GAAGF,MAAM,CAAC,KAAD,CAAlB;EAEA,IAAMe,KAAK,GAAG,GAAd;EACA,IAAMC,MAAM,GAAG,GAAf;EAEAf,GAAG,CAACK,OAAD,CAAH,CAAaW,IAAb,CAAkB,UAAAC,IAAI,EAAI;IACxBA,IAAI,CAACC,OAAL,CAAa,UAAAC,CAAC,EAAI;MAChBA,CAAC,CAACC,KAAF,GAAU,CAACD,CAAC,CAACC,KAAb;IACD,CAFD;IAGAC,UAAU,CAACJ,IAAD,CAAV;EACD,CALD;;EAOA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAAAJ,IAAI,EAAI;IACzB,IAAMK,MAAM,GAAGzB,WAAW,GAAG0B,MAAd,CAAqB,CAAC,CAAD,EAAIrB,GAAG,CAACe,IAAD,EAAO,UAAAE,CAAC;MAAA,OAAIA,CAAC,CAACC,KAAN;IAAA,CAAR,CAAP,CAArB,EAAmDI,KAAnD,CAAyD,CAAzD,EAA4DV,KAA5D,CAAf;IACA,IAAMW,MAAM,GAAG3B,SAAS,GAAGyB,MAAZ,CAAmBN,IAAnB,EAAyB,UAAAE,CAAC;MAAA,OAAEF,IAAI,CAACS,IAAP;IAAA,CAA1B,EAAuCF,KAAvC,CAA6C,CAACT,MAAD,EAAS,EAAT,CAA7C,CAAf;IAEAd,GAAG,CAAC0B,SAAJ,CAAc,MAAd,EAAsBV,IAAtB,CAA2BA,IAA3B,EAAiCW,KAAjC,GACGC,MADH,CACU,MADV,EAEGC,IAFH,CAEQ,OAFR,EAEiB,UAAAX,CAAC;MAAA,OAAIG,MAAM,CAACH,CAAC,CAACC,KAAH,CAAV;IAAA,CAFlB,EAGGU,IAHH,CAGQ,QAHR,EAGkB,GAHlB;EAID,CARD;;EAUA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IAGtB,IAAM5B,GAAG,GAAG6B,IAAI,CAAC7B,GAAL,OAAA6B,IAAI,qBAAQf,IAAI,CAACgB,MAAL,EAAR,EAAhB;IACA,IAAM/B,GAAG,GAAG8B,IAAI,CAAC9B,GAAL,OAAA8B,IAAI,qBAAQf,IAAI,CAACgB,MAAL,EAAR,EAAhB;EAID,CARD;;EAUA,OACE,KAAC,IAAD;IAAA;EAAA,EADF;AAuDD"},"metadata":{},"sourceType":"module"}