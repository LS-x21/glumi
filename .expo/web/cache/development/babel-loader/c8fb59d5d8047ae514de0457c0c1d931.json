{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { generateDatabaseId, isBoolean, isFunction, isNull, isNumber, isObject, isString, isUndefined, isValidPath, pathChild, pathParent, promiseWithOptionalCallback } from '@react-native-firebase/app/lib/common';\nimport DatabaseDataSnapshot from \"./DatabaseDataSnapshot\";\nimport DatabaseOnDisconnect from \"./DatabaseOnDisconnect\";\nimport DatabaseQuery, { provideReferenceClass as provideReferenceClassForQuery } from \"./DatabaseQuery\";\nimport DatabaseQueryModifiers from \"./DatabaseQueryModifiers\";\nimport DatabaseThenableReference, { provideReferenceClass as provideReferenceClassForThenable } from \"./DatabaseThenableReference\";\nvar internalRefs = ['.info/connected', '.info/serverTimeOffset'];\n\nvar DatabaseReference = function (_DatabaseQuery) {\n  _inherits(DatabaseReference, _DatabaseQuery);\n\n  var _super = _createSuper(DatabaseReference);\n\n  function DatabaseReference(database, path) {\n    var _this;\n\n    _classCallCheck(this, DatabaseReference);\n\n    if (!internalRefs.includes(path) && !isValidPath(path)) {\n      throw new Error('firebase.database() Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n    }\n\n    _this = _super.call(this, database, path, new DatabaseQueryModifiers());\n    _this._database = database;\n    return _this;\n  }\n\n  _createClass(DatabaseReference, [{\n    key: \"parent\",\n    get: function get() {\n      var parentPath = pathParent(this.path);\n\n      if (parentPath === null) {\n        return null;\n      }\n\n      return new DatabaseReference(this._database, parentPath);\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      return new DatabaseReference(this._database, '/');\n    }\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      if (!isString(path)) {\n        throw new Error(\"firebase.database().ref().child(*) 'path' must be a string value.\");\n      }\n\n      return new DatabaseReference(this._database, pathChild(this.path, path));\n    }\n  }, {\n    key: \"set\",\n    value: function set(value, onComplete) {\n      if (isUndefined(value)) {\n        throw new Error(\"firebase.database().ref().set(*) 'value' must be defined.\");\n      }\n\n      if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n        throw new Error(\"firebase.database().ref().set(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      return promiseWithOptionalCallback(this._database.native.set(this.path, {\n        value: value\n      }), onComplete);\n    }\n  }, {\n    key: \"update\",\n    value: function update(values, onComplete) {\n      if (!isObject(values)) {\n        throw new Error(\"firebase.database().ref().update(*) 'values' must be an object.\");\n      }\n\n      var keys = Object.keys(values);\n\n      for (var i = 0; i < keys.length; i++) {\n        if (!isValidPath(keys[i])) {\n          throw new Error('firebase.database().update(*) \\'values\\' contains an invalid path. Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n        }\n      }\n\n      if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n        throw new Error(\"firebase.database().ref().update(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      return promiseWithOptionalCallback(this._database.native.update(this.path, {\n        values: values\n      }), onComplete);\n    }\n  }, {\n    key: \"setWithPriority\",\n    value: function setWithPriority(newVal, newPriority, onComplete) {\n      if (isUndefined(newVal)) {\n        throw new Error(\"firebase.database().ref().setWithPriority(*) 'newVal' must be defined.\");\n      }\n\n      if (!isNumber(newPriority) && !isString(newPriority) && !isNull(newPriority)) {\n        throw new Error(\"firebase.database().ref().setWithPriority(_, *) 'newPriority' must be a number, string or null value.\");\n      }\n\n      if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n        throw new Error(\"firebase.database().ref().setWithPriority(_, _, *) 'onComplete' must be a function if provided.\");\n      }\n\n      return promiseWithOptionalCallback(this._database.native.setWithPriority(this.path, {\n        value: newVal,\n        priority: newPriority\n      }), onComplete);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(onComplete) {\n      if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n        throw new Error(\"firebase.database().ref().remove(*) 'onComplete' must be a function if provided.\");\n      }\n\n      return promiseWithOptionalCallback(this._database.native.remove(this.path), onComplete);\n    }\n  }, {\n    key: \"transaction\",\n    value: function transaction(transactionUpdate, onComplete, applyLocally) {\n      var _this2 = this;\n\n      if (!isFunction(transactionUpdate)) {\n        throw new Error(\"firebase.database().ref().transaction(*) 'transactionUpdate' must be a function.\");\n      }\n\n      if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n        throw new Error(\"firebase.database().ref().transaction(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      if (!isUndefined(applyLocally) && !isBoolean(applyLocally)) {\n        throw new Error(\"firebase.database().ref().transaction(_, _, *) 'applyLocally' must be a boolean value if provided.\");\n      }\n\n      return new Promise(function (resolve, reject) {\n        var onCompleteWrapper = function onCompleteWrapper(error, committed, snapshotData) {\n          if (isFunction(onComplete)) {\n            if (error) {\n              onComplete(error, committed, null);\n            } else {\n              onComplete(null, committed, new DatabaseDataSnapshot(_this2, snapshotData));\n            }\n          }\n\n          if (error) {\n            return reject(error);\n          }\n\n          return resolve({\n            committed: committed,\n            snapshot: new DatabaseDataSnapshot(_this2, snapshotData)\n          });\n        };\n\n        _this2._database._transaction.add(_this2, transactionUpdate, onCompleteWrapper, applyLocally);\n      });\n    }\n  }, {\n    key: \"setPriority\",\n    value: function setPriority(priority, onComplete) {\n      if (!isNumber(priority) && !isString(priority) && !isNull(priority)) {\n        throw new Error(\"firebase.database().ref().setPriority(*) 'priority' must be a number, string or null value.\");\n      }\n\n      if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n        throw new Error(\"firebase.database().ref().setPriority(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      return promiseWithOptionalCallback(this._database.native.setPriority(this.path, {\n        priority: priority\n      }), onComplete);\n    }\n  }, {\n    key: \"push\",\n    value: function push(value, onComplete) {\n      if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n        throw new Error(\"firebase.database().ref().push(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      var id = generateDatabaseId(this._database._serverTimeOffset);\n\n      if (isUndefined(value) || isNull(value)) {\n        return new DatabaseThenableReference(this._database, pathChild(this.path, id), Promise.resolve(this.child(id)));\n      }\n\n      var pushRef = this.child(id);\n      var promise = pushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n\n      if (onComplete) {\n        promise.catch(function () {});\n      }\n\n      return new DatabaseThenableReference(this._database, pathChild(this.path, id), promise);\n    }\n  }, {\n    key: \"onDisconnect\",\n    value: function onDisconnect() {\n      return new DatabaseOnDisconnect(this);\n    }\n  }]);\n\n  return DatabaseReference;\n}(DatabaseQuery);\n\nexport { DatabaseReference as default };\nprovideReferenceClassForQuery(DatabaseReference);\nprovideReferenceClassForThenable(DatabaseReference);","map":{"version":3,"names":["generateDatabaseId","isBoolean","isFunction","isNull","isNumber","isObject","isString","isUndefined","isValidPath","pathChild","pathParent","promiseWithOptionalCallback","DatabaseDataSnapshot","DatabaseOnDisconnect","DatabaseQuery","provideReferenceClass","provideReferenceClassForQuery","DatabaseQueryModifiers","DatabaseThenableReference","provideReferenceClassForThenable","internalRefs","DatabaseReference","database","path","includes","Error","_database","parentPath","value","onComplete","native","set","values","keys","Object","i","length","update","newVal","newPriority","setWithPriority","priority","remove","transactionUpdate","applyLocally","Promise","resolve","reject","onCompleteWrapper","error","committed","snapshotData","snapshot","_transaction","add","setPriority","id","_serverTimeOffset","child","pushRef","promise","then","catch"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/node_modules/@react-native-firebase/database/lib/DatabaseReference.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  generateDatabaseId,\n  isBoolean,\n  isFunction,\n  isNull,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n  isValidPath,\n  pathChild,\n  pathParent,\n  promiseWithOptionalCallback,\n} from '@react-native-firebase/app/lib/common';\nimport DatabaseDataSnapshot from './DatabaseDataSnapshot';\nimport DatabaseOnDisconnect from './DatabaseOnDisconnect';\nimport DatabaseQuery, {\n  provideReferenceClass as provideReferenceClassForQuery,\n} from './DatabaseQuery';\nimport DatabaseQueryModifiers from './DatabaseQueryModifiers';\nimport DatabaseThenableReference, {\n  provideReferenceClass as provideReferenceClassForThenable,\n} from './DatabaseThenableReference';\n\nconst internalRefs = ['.info/connected', '.info/serverTimeOffset'];\n\nexport default class DatabaseReference extends DatabaseQuery {\n  constructor(database, path) {\n    // Validate the reference path\n    if (!internalRefs.includes(path) && !isValidPath(path)) {\n      throw new Error(\n        'firebase.database() Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"',\n      );\n    }\n\n    super(database, path, new DatabaseQueryModifiers());\n    this._database = database;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#parent\n   */\n  get parent() {\n    const parentPath = pathParent(this.path);\n    if (parentPath === null) {\n      return null;\n    }\n    return new DatabaseReference(this._database, parentPath);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#root\n   */\n  get root() {\n    return new DatabaseReference(this._database, '/');\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#child\n   * @param path\n   */\n  child(path) {\n    if (!isString(path)) {\n      throw new Error(\"firebase.database().ref().child(*) 'path' must be a string value.\");\n    }\n    return new DatabaseReference(this._database, pathChild(this.path, path));\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#set\n   * @param value\n   * @param onComplete\n   */\n  set(value, onComplete) {\n    if (isUndefined(value)) {\n      throw new Error(\"firebase.database().ref().set(*) 'value' must be defined.\");\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().set(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(this._database.native.set(this.path, { value }), onComplete);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#update\n   * @param values\n   * @param onComplete\n   */\n  update(values, onComplete) {\n    if (!isObject(values)) {\n      throw new Error(\"firebase.database().ref().update(*) 'values' must be an object.\");\n    }\n\n    const keys = Object.keys(values);\n    for (let i = 0; i < keys.length; i++) {\n      if (!isValidPath(keys[i])) {\n        throw new Error(\n          'firebase.database().update(*) \\'values\\' contains an invalid path. Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"',\n        );\n      }\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().update(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(\n      this._database.native.update(this.path, { values }),\n      onComplete,\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#setwithpriority\n   * @param newVal\n   * @param newPriority\n   * @param onComplete\n   */\n  setWithPriority(newVal, newPriority, onComplete) {\n    if (isUndefined(newVal)) {\n      throw new Error(\"firebase.database().ref().setWithPriority(*) 'newVal' must be defined.\");\n    }\n\n    if (!isNumber(newPriority) && !isString(newPriority) && !isNull(newPriority)) {\n      throw new Error(\n        \"firebase.database().ref().setWithPriority(_, *) 'newPriority' must be a number, string or null value.\",\n      );\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().setWithPriority(_, _, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(\n      this._database.native.setWithPriority(this.path, {\n        value: newVal,\n        priority: newPriority,\n      }),\n      onComplete,\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#remove\n   * @param onComplete\n   */\n  remove(onComplete) {\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().remove(*) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(this._database.native.remove(this.path), onComplete);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#transaction\n   * @param transactionUpdate\n   * @param onComplete\n   * @param applyLocally\n   */\n  transaction(transactionUpdate, onComplete, applyLocally) {\n    if (!isFunction(transactionUpdate)) {\n      throw new Error(\n        \"firebase.database().ref().transaction(*) 'transactionUpdate' must be a function.\",\n      );\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().transaction(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    if (!isUndefined(applyLocally) && !isBoolean(applyLocally)) {\n      throw new Error(\n        \"firebase.database().ref().transaction(_, _, *) 'applyLocally' must be a boolean value if provided.\",\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      const onCompleteWrapper = (error, committed, snapshotData) => {\n        if (isFunction(onComplete)) {\n          if (error) {\n            onComplete(error, committed, null);\n          } else {\n            onComplete(null, committed, new DatabaseDataSnapshot(this, snapshotData));\n          }\n        }\n\n        if (error) {\n          return reject(error);\n        }\n        return resolve({\n          committed,\n          snapshot: new DatabaseDataSnapshot(this, snapshotData),\n        });\n      };\n\n      // start the transaction natively\n      this._database._transaction.add(this, transactionUpdate, onCompleteWrapper, applyLocally);\n    });\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#setpriority\n   * @param priority\n   * @param onComplete\n   */\n  setPriority(priority, onComplete) {\n    if (!isNumber(priority) && !isString(priority) && !isNull(priority)) {\n      throw new Error(\n        \"firebase.database().ref().setPriority(*) 'priority' must be a number, string or null value.\",\n      );\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().setPriority(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(\n      this._database.native.setPriority(this.path, { priority }),\n      onComplete,\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#push\n   * @param value\n   * @param onComplete\n   * @returns {DatabaseReference}\n   */\n  push(value, onComplete) {\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().push(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    const id = generateDatabaseId(this._database._serverTimeOffset);\n\n    if (isUndefined(value) || isNull(value)) {\n      return new DatabaseThenableReference(\n        this._database,\n        pathChild(this.path, id),\n        Promise.resolve(this.child(id)),\n      );\n    }\n\n    const pushRef = this.child(id);\n\n    const promise = pushRef.set(value, onComplete).then(() => pushRef);\n\n    // Prevent unhandled promise rejection if onComplete is passed\n    if (onComplete) {\n      promise.catch(() => {});\n    }\n\n    return new DatabaseThenableReference(this._database, pathChild(this.path, id), promise);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#ondisconnect\n   */\n  onDisconnect() {\n    return new DatabaseOnDisconnect(this);\n  }\n}\n\n// To avoid React Native require cycle warnings\nprovideReferenceClassForQuery(DatabaseReference);\nprovideReferenceClassForThenable(DatabaseReference);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}