{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth } from \"firebase/auth\";\nimport { getDatabase, push, ref, set, update } from \"firebase/database\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCWk2EKd0342I82gVHHpDNQYCzdGTjo5Ew\",\n  authDomain: \"breathanalyzer-db8fb.firebaseapp.com\",\n  databaseURL: \"https://breathanalyzer-db8fb-default-rtdb.firebaseio.com\",\n  projectId: \"breathanalyzer-db8fb\",\n  storageBucket: \"breathanalyzer-db8fb.appspot.com\",\n  messagingSenderId: \"444177996622\",\n  appId: \"1:444177996622:web:3e2ea687b31085fb2adc1f\",\n  measurementId: \"G-YNESQV4MPD\",\n  databaseURL: \"https://breathanalyzer-db8fb-default-rtdb.firebaseio.com/\"\n};\nvar app = initializeApp(firebaseConfig);\nvar authen = getAuth(app);\nvar database = getDatabase(app);\n\nfunction createUserData(userId, name, email) {\n  set(ref(database, 'users/' + userId), {\n    name: name,\n    email: email\n  });\n}\n\nfunction pairDevice(userID) {\n  set(ref(database, 'users/currPairingUID/'), userID);\n}\n\nfunction unPair(userID) {\n  update(ref(database, \"/users/\"), {\n    currPairingUID: null\n  });\n}\n\nfunction updateSettings(userID, isDarkMode) {\n  console.log(userID);\n  set(ref(database, 'users/' + userID + '/settings'), {\n    isDarkMode: isDarkMode\n  });\n}\n\nfunction writeHealthData(dataType, key, val) {\n  var dataListRef = ref(database, 'users/' + authen.currentUser.uid + '/data/' + dataType + '/' + key);\n  var temp = parseFloat(val);\n  set(dataListRef, temp);\n}\n\nfunction editKey(dataType, key, value) {}\n\nfunction editValue(dataType, key, value) {}\n\nvar getStringDate = function getStringDate(d) {\n  var date = new Date(d);\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n  var year = date.getFullYear();\n  return month + \"/\" + day + \"/\" + year;\n};\n\nexport function clearSpecData(type) {\n  set(ref(database, 'users/' + authen.currentUser.uid + '/data/' + type), {});\n}\nvar test = getStringDate(\"02-01-1997T11:08\");\nconsole.log(test);\nexport { authen, database, writeHealthData, createUserData, pairDevice, unPair, updateSettings, editKey, editValue };","map":{"version":3,"names":["initializeApp","getAuth","getDatabase","push","ref","set","update","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","authen","database","createUserData","userId","name","email","pairDevice","userID","unPair","currPairingUID","updateSettings","isDarkMode","console","log","writeHealthData","dataType","key","val","dataListRef","currentUser","uid","temp","parseFloat","editKey","value","editValue","getStringDate","d","date","Date","month","getMonth","day","getDate","year","getFullYear","clearSpecData","type","test"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/Firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase, push, ref, set, update } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCWk2EKd0342I82gVHHpDNQYCzdGTjo5Ew\",\r\n    authDomain: \"breathanalyzer-db8fb.firebaseapp.com\",\r\n    databaseURL: \"https://breathanalyzer-db8fb-default-rtdb.firebaseio.com\",\r\n    projectId: \"breathanalyzer-db8fb\",\r\n    storageBucket: \"breathanalyzer-db8fb.appspot.com\",\r\n    messagingSenderId: \"444177996622\",\r\n    appId: \"1:444177996622:web:3e2ea687b31085fb2adc1f\",\r\n    measurementId: \"G-YNESQV4MPD\",\r\n    databaseURL: \"https://breathanalyzer-db8fb-default-rtdb.firebaseio.com/\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig)\r\n\r\nconst authen = getAuth(app);\r\n\r\n// const reference = \r\nconst database = getDatabase(app);\r\n\r\nfunction createUserData(userId, name, email){\r\n    set(ref(database, 'users/' + userId), {\r\n        name: name,\r\n        email: email\r\n    })\r\n}\r\n\r\nfunction pairDevice(userID){\r\n    set(ref(database, 'users/currPairingUID/'), userID);\r\n}\r\n\r\nfunction unPair(userID){\r\n    update(ref(database, \"/users/\"), {\r\n        currPairingUID: null\r\n    })\r\n}\r\n\r\nfunction updateSettings(userID, isDarkMode){\r\n    console.log(userID);\r\n    set(ref(database, 'users/' + userID + '/settings'), {\r\n        isDarkMode: isDarkMode\r\n    })\r\n}\r\n\r\nfunction writeHealthData(dataType, key, val){\r\n\r\n    const dataListRef = ref(database, 'users/' + authen.currentUser.uid + '/data/' + dataType + '/' + key);\r\n    let temp = parseFloat(val);\r\n    set(dataListRef, temp);\r\n}\r\n\r\nfunction editKey(dataType, key, value){\r\n\r\n}\r\n\r\nfunction editValue(dataType, key, value){\r\n\r\n}\r\n\r\nconst getStringDate = (d) => {\r\n    let date = new Date(d);\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n    let year = date.getFullYear();\r\n    return (month + \"/\" + day + \"/\" + year);\r\n}\r\n\r\nexport function clearSpecData(type){\r\n    set(ref(database, 'users/' + authen.currentUser.uid + '/data/' + type), {\r\n    })\r\n}\r\n\r\nlet test = getStringDate(\"02-01-1997T11:08\");\r\nconsole.log(test);\r\n\r\n\r\nexport { authen, database, writeHealthData,\r\ncreateUserData, pairDevice, unPair, updateSettings, editKey, editValue};"],"mappings":"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"},"metadata":{},"sourceType":"module"}