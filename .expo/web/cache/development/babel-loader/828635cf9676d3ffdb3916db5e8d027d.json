{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isArray, isFunction, isObject, isString } from '@react-native-firebase/app/lib/common';\nimport { deepGet } from '@react-native-firebase/app/lib/common/deeps';\n\nvar DatabaseDataSnapshot = function () {\n  function DatabaseDataSnapshot(reference, snapshot) {\n    _classCallCheck(this, DatabaseDataSnapshot);\n\n    this._snapshot = snapshot;\n\n    if (reference.key !== snapshot.key) {\n      this._ref = reference.ref.child(snapshot.key);\n    } else {\n      this._ref = reference;\n    }\n  }\n\n  _createClass(DatabaseDataSnapshot, [{\n    key: \"key\",\n    get: function get() {\n      return this._snapshot.key;\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return this._ref;\n    }\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      if (!isString(path)) {\n        throw new Error(\"snapshot().child(*) 'path' must be a string value\");\n      }\n\n      var value = deepGet(this._snapshot.value, path);\n\n      if (value === undefined) {\n        value = null;\n      }\n\n      var childRef = this._ref.child(path);\n\n      return new DatabaseDataSnapshot(childRef, {\n        value: value,\n        key: childRef.key,\n        exists: value !== null,\n        childKeys: isObject(value) ? Object.keys(value) : []\n      });\n    }\n  }, {\n    key: \"exists\",\n    value: function exists() {\n      return this._snapshot.exists;\n    }\n  }, {\n    key: \"exportVal\",\n    value: function exportVal() {\n      var value = this._snapshot.value;\n\n      if (isObject(value) || isArray(value)) {\n        value = JSON.parse(JSON.stringify(value));\n      }\n\n      return {\n        '.value': value,\n        '.priority': this._snapshot.priority\n      };\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(action) {\n      var _this = this;\n\n      if (!isFunction(action)) {\n        throw new Error(\"snapshot.forEach(*) 'action' must be a function.\");\n      }\n\n      if (isArray(this._snapshot.value)) {\n        return this._snapshot.value.some(function (value, i) {\n          var snapshot = _this.child(i.toString());\n\n          return action(snapshot, i) === true;\n        });\n      }\n\n      if (!this._snapshot.childKeys.length) {\n        return false;\n      }\n\n      var cancelled = false;\n\n      for (var i = 0; i < this._snapshot.childKeys.length; i++) {\n        var key = this._snapshot.childKeys[i];\n        var snapshot = this.child(key);\n        var actionReturn = action(snapshot, i);\n\n        if (actionReturn === true) {\n          cancelled = true;\n          break;\n        }\n      }\n\n      return cancelled;\n    }\n  }, {\n    key: \"getPriority\",\n    value: function getPriority() {\n      return this._snapshot.priority;\n    }\n  }, {\n    key: \"hasChild\",\n    value: function hasChild(path) {\n      if (!isString(path)) {\n        throw new Error(\"snapshot.hasChild(*) 'path' must be a string value.\");\n      }\n\n      return deepGet(this._snapshot.value, path) !== undefined;\n    }\n  }, {\n    key: \"hasChildren\",\n    value: function hasChildren() {\n      return this.numChildren() > 0;\n    }\n  }, {\n    key: \"numChildren\",\n    value: function numChildren() {\n      var value = this._snapshot.value;\n\n      if (isArray(value)) {\n        return value.length;\n      }\n\n      if (!isObject(value)) {\n        return 0;\n      }\n\n      return Object.keys(value).length;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.val();\n    }\n  }, {\n    key: \"val\",\n    value: function val() {\n      var value = this._snapshot.value;\n\n      if (isObject(value) || isArray(value)) {\n        return JSON.parse(JSON.stringify(value));\n      }\n\n      return value;\n    }\n  }]);\n\n  return DatabaseDataSnapshot;\n}();\n\nexport { DatabaseDataSnapshot as default };","map":{"version":3,"names":["isArray","isFunction","isObject","isString","deepGet","DatabaseDataSnapshot","reference","snapshot","_snapshot","key","_ref","ref","child","path","Error","value","undefined","childRef","exists","childKeys","Object","keys","JSON","parse","stringify","priority","action","some","i","toString","length","cancelled","actionReturn","numChildren","val"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/node_modules/@react-native-firebase/database/lib/DatabaseDataSnapshot.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isArray, isFunction, isObject, isString } from '@react-native-firebase/app/lib/common';\nimport { deepGet } from '@react-native-firebase/app/lib/common/deeps';\n\nexport default class DatabaseDataSnapshot {\n  constructor(reference, snapshot) {\n    this._snapshot = snapshot;\n\n    if (reference.key !== snapshot.key) {\n      // reference is a query?\n      this._ref = reference.ref.child(snapshot.key);\n    } else {\n      this._ref = reference;\n    }\n\n    // TODO #894\n    // if (this._ref.path === '.info/connected') {\n    //  Handle 1/0 vs true/false values on ios/android\n    // }\n  }\n\n  get key() {\n    return this._snapshot.key;\n  }\n\n  get ref() {\n    return this._ref;\n  }\n\n  /**\n   * Returns a new snapshot of the child location\n   * @param path\n   * @returns {DatabaseDataSnapshot}\n   */\n  child(path) {\n    if (!isString(path)) {\n      throw new Error(\"snapshot().child(*) 'path' must be a string value\");\n    }\n\n    let value = deepGet(this._snapshot.value, path);\n\n    if (value === undefined) {\n      value = null;\n    }\n\n    const childRef = this._ref.child(path);\n\n    return new DatabaseDataSnapshot(childRef, {\n      value,\n      key: childRef.key,\n      exists: value !== null,\n      childKeys: isObject(value) ? Object.keys(value) : [],\n    });\n  }\n\n  /**\n   * Returns whether the value exists\n   *\n   * @returns {(function())|((path: PathLike, callback: (exists: boolean) => void) => void)|boolean|exists|(() => boolean)}\n   */\n  exists() {\n    return this._snapshot.exists;\n  }\n\n  /**\n   * Exports value and priority\n   *\n   * @returns {{'.priority': *, '.value': *}}\n   */\n  exportVal() {\n    let { value } = this._snapshot;\n\n    if (isObject(value) || isArray(value)) {\n      value = JSON.parse(JSON.stringify(value));\n    }\n\n    return {\n      '.value': value,\n      '.priority': this._snapshot.priority,\n    };\n  }\n\n  /**\n   * Iterate over keys in order from Firebase\n   *\n   * @param action\n   * @return {boolean}\n   */\n  forEach(action) {\n    if (!isFunction(action)) {\n      throw new Error(\"snapshot.forEach(*) 'action' must be a function.\");\n    }\n\n    // If the value is an array,\n    if (isArray(this._snapshot.value)) {\n      return this._snapshot.value.some((value, i) => {\n        const snapshot = this.child(i.toString());\n        return action(snapshot, i) === true;\n      });\n    }\n\n    if (!this._snapshot.childKeys.length) {\n      return false;\n    }\n\n    let cancelled = false;\n\n    for (let i = 0; i < this._snapshot.childKeys.length; i++) {\n      const key = this._snapshot.childKeys[i];\n      const snapshot = this.child(key);\n      const actionReturn = action(snapshot, i);\n\n      if (actionReturn === true) {\n        cancelled = true;\n        break;\n      }\n    }\n\n    return cancelled;\n  }\n\n  getPriority() {\n    return this._snapshot.priority;\n  }\n\n  /**\n   * Checks the returned value for a nested child path\n   *\n   * @param path\n   * @returns {boolean}\n   */\n  hasChild(path) {\n    if (!isString(path)) {\n      throw new Error(\"snapshot.hasChild(*) 'path' must be a string value.\");\n    }\n\n    return deepGet(this._snapshot.value, path) !== undefined;\n  }\n\n  /**\n   * Returns whether the snapshot has any children\n   *\n   * @returns {boolean}\n   */\n  hasChildren() {\n    return this.numChildren() > 0;\n  }\n\n  /**\n   * Returns the number of children this snapshot has\n   *\n   * @returns {number}\n   */\n  numChildren() {\n    const { value } = this._snapshot;\n    if (isArray(value)) {\n      return value.length;\n    }\n    if (!isObject(value)) {\n      return 0;\n    }\n    return Object.keys(value).length;\n  }\n\n  /**\n   * Overrides the .toJSON implementation for snapshot\n   * Same as snapshot.val()\n   * @returns {any}\n   */\n  toJSON() {\n    return this.val();\n  }\n\n  /**\n   * Returns the serialized value of the snapshot returned from Firebase\n   *\n   * @returns {any}\n   */\n  val() {\n    const { value } = this._snapshot;\n\n    if (isObject(value) || isArray(value)) {\n      return JSON.parse(JSON.stringify(value));\n    }\n\n    return value;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}