{"ast":null,"code":"import { authen, database, updateDataFire } from \"../Firebase\";\nimport { getDatabase, ref, onValue, onChildAdded } from \"firebase/database\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { reloadData } from \"./DeepHomePage\";\nvar userID = 0;\nvar dataBreathRef = ref(database, 'users/' + userID + '/data/Breathanalyzer/');\nexport { dataBreathRef };\n\nfunction wrapListener() {\n  onChildAdded(dataBreathRef, function (data) {\n    +console.log(\"Child added\");\n    var temp = data.key + \":00.000Z\";\n    AceData.push({\n      date: temp,\n      value: data.val()\n    });\n    console.log(AceData);\n    console.log(\"break\");\n  });\n}\n\nonAuthStateChanged(authen, function (user) {\n  if (user != null) {\n    userID = user.uid;\n  }\n\n  console.log(userID);\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Breathanalyzer/\");\n  wrapListener();\n});\nexport var AceData = [];\nexport var GulData = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}];\nexport var FoodData = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}];","map":{"version":3,"names":["authen","database","updateDataFire","getDatabase","ref","onValue","onChildAdded","onAuthStateChanged","reloadData","userID","dataBreathRef","wrapListener","data","console","log","temp","key","AceData","push","date","value","val","user","uid","GulData","Math","floor","random","FoodData"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/Data.js"],"sourcesContent":["import { authen, database, updateDataFire } from \"../Firebase\";\r\nimport { getDatabase, ref, onValue, onChildAdded } from \"firebase/database\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { reloadData } from \"./DeepHomePage\";\r\n\r\n// export const Data = [\r\n//   { date: '2022-02-01T05:00:00.000Z', value: 250 },\r\n//   { date: '2022-02-02T05:00:00.000Z', value: 300.35 },\r\n//   { date: '2022-02-03T05:00:00.000Z', value: 150.84 },\r\n//   { date: '2022-02-04T05:00:00.000Z', value: 500.92 },\r\n//   { date: '2022-02-05T05:00:00.000Z', value: 200.8 },\r\n//   { date: '2022-02-06T05:00:00.000Z', value: 150.47 },\r\n//   { date: '2022-02-07T05:00:00.000Z', value: 100.47 },\r\n// ]; 26th, 2\r\n\r\nlet userID = 0;\r\n\r\nlet dataBreathRef = ref(database, 'users/' + userID + '/data/Breathanalyzer/');\r\nexport { dataBreathRef };\r\nfunction wrapListener() {\r\n\r\n  onChildAdded(dataBreathRef, (data) => {\r\n    +\r\n    console.log(\"Child added\");\r\n    let temp = data.key + \":00.000Z\";\r\n    AceData.push({ date: temp, value: data.val() });\r\n    console.log(AceData);\r\n    console.log(\"break\");\r\n  });\r\n}\r\n\r\nonAuthStateChanged(authen, (user) => {\r\n  if (user != null) {\r\n    userID = user.uid;\r\n  }\r\n  console.log(userID);\r\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Breathanalyzer/\");\r\n  wrapListener();\r\n});\r\n\r\nexport const AceData = [\r\n];\r\n\r\nexport const GulData = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-02T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-03T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-04T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-05T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-06T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-07T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n];\r\n\r\nexport const FoodData = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-02T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-03T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-04T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-05T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-06T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-07T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}