{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { bloodSugarGraph } from \"../style/style\";\nimport Svg, { Path } from 'react-native-svg';\nimport { parseISO } from 'date-fns';\nimport * as d3 from 'd3';\nimport { Data } from \"./Data.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function (props) {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var vw = Dimensions.get(\"window\").width;\n  var width = props.width;\n  var height = width;\n  var margin = {\n    top: vw * .1,\n    bottom: vw * .1,\n    left: vw * .06,\n    right: vw * .1\n  };\n  var style = StyleSheet.create({\n    container: {\n      justifyContent: \"center\",\n      alignSelf: \"center\",\n      marginRight: \"auto\"\n    },\n    content: {\n      justifyContent: \"center\",\n      alignSelf: \"center\",\n      flexDirection: \"row\"\n    },\n    xLabelContainer: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingBottom: width * .02\n    },\n    xLabel: {\n      fontSize: width * .05,\n      fontFamily: \"BalooTamma2-Bold\",\n      color: \"#000\"\n    },\n    unitContainer: {\n      width: \"auto\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    unit: {\n      fontSize: width * .04,\n      fontFamily: \"BalooTamma2-Bold\",\n      color: \"#222\",\n      marginTop: width * .001\n    },\n    labelContainer: {\n      justifyContent: \"space-evenly\",\n      width: \"auto\"\n    },\n    yLabel: {\n      fontSize: width * .0035,\n      fontFamily: \"BalooTamma2-Regular\",\n      color: \"#555\",\n      opacity: .8,\n      marginLeft: width * .002\n    }\n  });\n\n  var makeLine = function makeLine(givenData) {\n    var xScale = d3.scaleTime().domain([new Date(givenData[0].date), new Date(givenData[givenData.length - 1].date)]).range([margin.left, width - margin.right]);\n    var yScale = d3.scaleLinear().domain(d3.extent(givenData.map(function (i) {\n      return i.value;\n    }))).range([height - margin.bottom, margin.top]);\n    var scaledData = [];\n    givenData.forEach(function (i) {\n      scaledData.push([xScale(new Date(i.date)), yScale(i.value)]);\n    });\n    var line = d3.line();\n    var graph = line(scaledData);\n    var html = [];\n    yScale.ticks().reverse().forEach(function (i) {\n      html.push(_jsx(Text, {\n        style: bloodSugarGraph.yLabel,\n        children: i\n      }, i));\n    });\n    return [graph, html];\n  };\n\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsxs(View, {\n      style: style.content,\n      children: [_jsx(View, {\n        style: style.unitContainer,\n        children: _jsx(Text, {\n          style: [style.unit, {\n            transform: [{\n              rotate: '270deg'\n            }]\n          }],\n          children: \"ppm\"\n        })\n      }), _jsx(View, {\n        style: style.labelContainer,\n        children: makeLine(Data)[1]\n      }), _jsx(Svg, {\n        width: width,\n        height: height,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: _jsx(Path, {\n          fill: \"none\",\n          stroke: \"#ff9933\",\n          strokeWidth: vw * .015,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          d: makeLine(Data)[0]\n        })\n      })]\n    }), _jsx(View, {\n      style: style.xLabelContainer,\n      children: _jsx(Text, {\n        style: style.xLabel,\n        children: \"Acetone Levels\"\n      })\n    })]\n  });\n});","map":{"version":3,"names":["bloodSugarGraph","Svg","Path","parseISO","d3","Data","props","sugarData","yHideRatio","defaultMax","vw","Dimensions","get","width","height","margin","top","bottom","left","right","style","StyleSheet","create","container","justifyContent","alignSelf","marginRight","content","flexDirection","xLabelContainer","alignItems","paddingBottom","xLabel","fontSize","fontFamily","color","unitContainer","unit","marginTop","labelContainer","yLabel","opacity","marginLeft","makeLine","givenData","xScale","scaleTime","domain","Date","date","length","range","yScale","scaleLinear","extent","map","i","value","scaledData","forEach","push","line","graph","html","ticks","reverse","transform","rotate"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions, View, Text, StyleSheet } from 'react-native';\r\nimport { bloodSugarGraph } from '../style/style';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport { parseISO } from 'date-fns'\r\nimport * as d3 from 'd3';\r\nimport { Data } from './Data.js';\r\n\r\nexport default (props) => {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  const width = props.width;\r\n  const height = width;\r\n  const margin = {\r\n    top: vw * .1,\r\n    bottom: vw * .1,\r\n    left: vw * .06,\r\n    right: vw * .1,\r\n  }\r\n\r\n  const style = StyleSheet.create({\r\n    container: {\r\n      justifyContent: \"center\",\r\n      alignSelf: \"center\",\r\n      marginRight: \"auto\",\r\n    },\r\n\r\n    content: {\r\n      justifyContent: \"center\",\r\n      alignSelf: \"center\",\r\n      flexDirection: \"row\",\r\n    },\r\n\r\n    xLabelContainer: {\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      paddingBottom: width * .02,\r\n    },\r\n\r\n    xLabel: {\r\n      fontSize: width * .05,\r\n      fontFamily: \"BalooTamma2-Bold\",\r\n      color: \"#000\",\r\n    },\r\n\r\n    unitContainer: {\r\n      width: \"auto\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n\r\n    unit: {\r\n      fontSize: width * .04,\r\n      fontFamily: \"BalooTamma2-Bold\",\r\n      color: \"#222\",\r\n      marginTop: width * .001,\r\n    },\r\n\r\n    labelContainer: {\r\n      justifyContent: \"space-evenly\",\r\n      width: \"auto\",\r\n    },\r\n\r\n    yLabel: {\r\n      fontSize: width * .0035,\r\n      fontFamily: \"BalooTamma2-Regular\",\r\n      color: \"#555\",\r\n      opacity: .8,\r\n      marginLeft: width * .002,\r\n    },\r\n\r\n  });\r\n\r\n  const makeLine = (givenData) => {\r\n\r\n    const xScale = d3.scaleTime()\r\n      .domain([new Date(givenData[0].date), new Date(givenData[givenData.length - 1].date)])\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    const yScale = d3.scaleLinear()\r\n      .domain(d3.extent(givenData.map((i) => i.value)))\r\n      .range([height - margin.bottom, margin.top]);\r\n\r\n    let scaledData = [];\r\n    givenData.forEach((i) => {\r\n      scaledData.push([xScale(new Date(i.date)), yScale(i.value)])\r\n    });\r\n\r\n    let line = d3.line()\r\n\r\n    let graph = line(scaledData);\r\n\r\n    let html = [];\r\n    yScale.ticks().reverse().forEach((i) => {\r\n      html.push(<Text key={i} style={bloodSugarGraph.yLabel}>{i}</Text>)\r\n    });\r\n    return [graph, html];\r\n  }\r\n\r\n  return (\r\n    <View style={style.container}>\r\n      <View style={style.content}>\r\n        <View style={style.unitContainer}>\r\n          <Text style={[style.unit,\r\n          {\r\n            transform: [{ rotate: '270deg' }]\r\n          }]}>\r\n            ppm</Text>\r\n        </View>\r\n        <View style={style.labelContainer}>\r\n          {makeLine(Data)[1]}\r\n        </View>\r\n        <Svg\r\n          width={width}\r\n          height={height}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <Path\r\n            fill=\"none\"\r\n            stroke=\"#ff9933\"\r\n            strokeWidth={vw * .015}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d={makeLine(Data)[0]}\r\n          />\r\n        </Svg>\r\n      </View>\r\n      <View style={style.xLabelContainer}>\r\n        <Text style={style.xLabel}>Acetone Levels</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}