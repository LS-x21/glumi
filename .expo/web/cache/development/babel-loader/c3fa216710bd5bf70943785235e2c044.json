{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useEffect, useRef, useState } from 'react';\nimport { home } from \"./../style/style.js\";\nimport BloodSugarGraph from \"./BloodSugarGraph.js\";\nimport BloodSugarAnalysis from \"./BloodSugarAnalysis.js\";\nimport BloodPressureGraph from \"./BloodPressureGraph.js\";\nimport LogEvent from \"./LogEvent.js\";\nimport { authen } from \"../Firebase.js\";\nimport TreeSVG from \"../assets/TreeSVG.js\";\nimport DarkTreeSVG from \"../assets/DarkTreeSVG.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sliderElementActive = _useState2[0],\n      setSliderElementActive = _useState2[1];\n\n  var sliderElements = [_jsx(BloodSugarAnalysis, {}), _jsx(BloodSugarAnalysis, {}), _jsx(BloodSugarAnalysis, {})];\n\n  onchange = function onchange(nativeEvent) {\n    if (nativeEvent) {\n      var slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\n\n      if (slide != sliderElementActive) {\n        setSliderElementActive(slide);\n      }\n    }\n  };\n\n  return _jsxs(View, {\n    style: home.container,\n    children: [_jsx(View, {\n      style: home.backgroundContainer,\n      children: _jsx(TreeSVG, {})\n    }), _jsxs(SafeAreaView, {\n      style: home.wrapper,\n      children: [_jsx(Text, {\n        style: home.title,\n        children: Greeting()\n      }), _jsx(Text, {\n        style: home.subtitle,\n        children: getDate()\n      }), _jsxs(View, {\n        style: home.content,\n        children: [_jsxs(View, {\n          style: home.summary,\n          children: [_jsx(Text, {\n            style: home.heading,\n            children: \"Summary\"\n          }), _jsx(BloodSugarGraph, {})]\n        }), _jsxs(View, {\n          style: home.slider,\n          children: [_jsx(Text, {\n            style: [home.heading, home.sliderHeading],\n            children: \"Discover More!\"\n          }), _jsx(ScrollView, {\n            onScroll: function onScroll(_ref) {\n              var nativeEvent = _ref.nativeEvent;\n              return onchange(nativeEvent);\n            },\n            horizontal: true,\n            showsHorizontalScrollIndicator: false,\n            pagingEnabled: true,\n            style: home.sliderContainer,\n            children: sliderElements.map(function (i, index) {\n              return _jsx(View, {\n                style: home.sliderElement,\n                children: i\n              }, i);\n            })\n          }), _jsx(View, {\n            style: home.dotContainer,\n            children: sliderElements.map(function (i, index) {\n              return _jsx(View, {\n                style: sliderElementActive == index ? home.dotActive : home.dot,\n                children: \"\\u25CF\"\n              }, i);\n            })\n          })]\n        })]\n      }), _jsx(View, {\n        style: home.spacer\n      })]\n    })]\n  });\n});\n\nfunction Greeting() {\n  var greeting = \"Good Morning\";\n  var time = new Date();\n\n  if (time.getHours() > 18) {\n    greeting = \"Good Evening\";\n  } else if (time.getHours() > 12) {\n    greeting = \"Good Afternoon\";\n  }\n\n  return greeting;\n}\n\nfunction getDate() {\n  var date = new Date();\n  var year = date.getFullYear();\n  var month = date.toLocaleString('default', {\n    month: 'long'\n  });\n  var day = date.getDate();\n  return year + \" \" + month + \" \" + day;\n}","map":{"version":3,"names":["useEffect","useRef","useState","home","BloodSugarGraph","BloodSugarAnalysis","BloodPressureGraph","LogEvent","authen","TreeSVG","DarkTreeSVG","sliderElementActive","setSliderElementActive","sliderElements","onchange","nativeEvent","slide","Math","ceil","contentOffset","x","layoutMeasurement","width","container","backgroundContainer","wrapper","title","Greeting","subtitle","getDate","content","summary","heading","slider","sliderHeading","sliderContainer","map","i","index","sliderElement","dotContainer","dotActive","dot","spacer","greeting","time","Date","getHours","date","year","getFullYear","month","toLocaleString","day"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/DeepHomePage.js"],"sourcesContent":["import {\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  Animated,\r\n  ImageBackground,\r\n  ScrollView,\r\n  Dimensions,\r\n  Image,\r\n} from 'react-native';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { home } from './../style/style.js';\r\nimport BloodSugarGraph from './BloodSugarGraph.js';\r\nimport BloodSugarAnalysis from './BloodSugarAnalysis.js';\r\nimport BloodPressureGraph from './BloodPressureGraph.js';\r\nimport LogEvent from './LogEvent.js';\r\nimport { authen } from '../Firebase.js';\r\n\r\nimport TreeSVG from '../assets/TreeSVG.js';\r\nimport DarkTreeSVG from '../assets/DarkTreeSVG.js';\r\n\r\n\r\nexport default () => {\r\n\r\n  // const shift = useRef(new Animated.Value(0)).current;\r\n  // useEffect(() => {\r\n  //   Animated.timing(shift, {\r\n  //     toValue: 100,\r\n  //     duration: 1000,\r\n  //     useNativeDriver: true,\r\n  //   }).start();\r\n  // }, []);\r\n\r\n  // <Animated.Text style={[home.title, {\r\n  //   color: shift.interpolate({\r\n  //     inputRange: [0, 100],\r\n  //     outputRange: ['#000', '#fff'],\r\n  //   }),\r\n  // }]}>\r\n  //   {Greeting()}\r\n  // </Animated.Text>\r\n\r\n  const [sliderElementActive, setSliderElementActive] = useState(0);\r\n\r\n  const sliderElements = [\r\n    <BloodSugarAnalysis />,\r\n    <BloodSugarAnalysis />,\r\n    <BloodSugarAnalysis />,\r\n  ]\r\n\r\n  onchange = (nativeEvent) => {\r\n    if (nativeEvent) {\r\n      const slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\r\n      if (slide != sliderElementActive) {\r\n        setSliderElementActive(slide)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={home.container}>\r\n      <View style={home.backgroundContainer}>\r\n        <TreeSVG />\r\n      </View>\r\n      <SafeAreaView style={home.wrapper}>\r\n        <Text style={home.title}>\r\n          {Greeting()}\r\n        </Text>\r\n        <Text style={home.subtitle}>\r\n          {getDate()}\r\n        </Text>\r\n        <View style={home.content}>\r\n          <View style={home.summary}>\r\n            <Text style={home.heading}>Summary</Text>\r\n            <BloodSugarGraph />\r\n          </View>\r\n          <View style={home.slider}>\r\n            <Text style={[home.heading, home.sliderHeading]}>Discover More!</Text>\r\n            <ScrollView\r\n              onScroll={({ nativeEvent }) => onchange(nativeEvent)}\r\n              horizontal\r\n              showsHorizontalScrollIndicator={false}\r\n              pagingEnabled\r\n              style={home.sliderContainer}\r\n            >\r\n              {\r\n                sliderElements.map((i, index) =>\r\n                  <View style={home.sliderElement} key={i}>\r\n                    {i}\r\n                  </View>\r\n\r\n                )\r\n              }\r\n            </ScrollView>\r\n            <View style={home.dotContainer}>\r\n              {\r\n                sliderElements.map((i, index) =>\r\n                  <View\r\n                    key={i}\r\n                    style={sliderElementActive == index ? home.dotActive : home.dot}\r\n                  >‚óè</View>\r\n                )\r\n              }\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={home.spacer} />\r\n      </SafeAreaView>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Greeting() {\r\n  let greeting = \"Good Morning\";\r\n  let time = new Date();\r\n  if (time.getHours() > 18) {\r\n    greeting = \"Good Evening\";\r\n  } else if (time.getHours() > 12) {\r\n    greeting = \"Good Afternoon\";\r\n  }\r\n  return greeting;\r\n}\r\n\r\nfunction getDate() {\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.toLocaleString('default', { month: 'long' });\r\n  let day = date.getDate();\r\n  return `${year} ${month} ${day}`;\r\n}"],"mappings":";;;;;;;;;AAUA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT;AACA,OAAOC,eAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,QAAP;AACA,SAASC,MAAT;AAEA,OAAOC,OAAP;AACA,OAAOC,WAAP;;;AAGA,gBAAe,YAAM;EAoBnB,gBAAsDR,QAAQ,CAAC,CAAD,CAA9D;EAAA;EAAA,IAAOS,mBAAP;EAAA,IAA4BC,sBAA5B;;EAEA,IAAMC,cAAc,GAAG,CACrB,KAAC,kBAAD,KADqB,EAErB,KAAC,kBAAD,KAFqB,EAGrB,KAAC,kBAAD,KAHqB,CAAvB;;EAMAC,QAAQ,GAAG,kBAACC,WAAD,EAAiB;IAC1B,IAAIA,WAAJ,EAAiB;MACf,IAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUH,WAAW,CAACI,aAAZ,CAA0BC,CAA1B,GAA8BL,WAAW,CAACM,iBAAZ,CAA8BC,KAAtE,CAAd;;MACA,IAAIN,KAAK,IAAIL,mBAAb,EAAkC;QAChCC,sBAAsB,CAACI,KAAD,CAAtB;MACD;IACF;EACF,CAPD;;EASA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEb,IAAI,CAACoB,SAAlB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEpB,IAAI,CAACqB,mBAAlB;MAAA,UACE,KAAC,OAAD;IADF,EADF,EAIE,MAAC,YAAD;MAAc,KAAK,EAAErB,IAAI,CAACsB,OAA1B;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEtB,IAAI,CAACuB,KAAlB;QAAA,UACGC,QAAQ;MADX,EADF,EAIE,KAAC,IAAD;QAAM,KAAK,EAAExB,IAAI,CAACyB,QAAlB;QAAA,UACGC,OAAO;MADV,EAJF,EAOE,MAAC,IAAD;QAAM,KAAK,EAAE1B,IAAI,CAAC2B,OAAlB;QAAA,WACE,MAAC,IAAD;UAAM,KAAK,EAAE3B,IAAI,CAAC4B,OAAlB;UAAA,WACE,KAAC,IAAD;YAAM,KAAK,EAAE5B,IAAI,CAAC6B,OAAlB;YAAA;UAAA,EADF,EAEE,KAAC,eAAD,KAFF;QAAA,EADF,EAKE,MAAC,IAAD;UAAM,KAAK,EAAE7B,IAAI,CAAC8B,MAAlB;UAAA,WACE,KAAC,IAAD;YAAM,KAAK,EAAE,CAAC9B,IAAI,CAAC6B,OAAN,EAAe7B,IAAI,CAAC+B,aAApB,CAAb;YAAA;UAAA,EADF,EAEE,KAAC,UAAD;YACE,QAAQ,EAAE;cAAA,IAAGnB,WAAH,QAAGA,WAAH;cAAA,OAAqBD,QAAQ,CAACC,WAAD,CAA7B;YAAA,CADZ;YAEE,UAAU,MAFZ;YAGE,8BAA8B,EAAE,KAHlC;YAIE,aAAa,MAJf;YAKE,KAAK,EAAEZ,IAAI,CAACgC,eALd;YAAA,UAQItB,cAAc,CAACuB,GAAf,CAAmB,UAACC,CAAD,EAAIC,KAAJ;cAAA,OACjB,KAAC,IAAD;gBAAM,KAAK,EAAEnC,IAAI,CAACoC,aAAlB;gBAAA,UACGF;cADH,GAAsCA,CAAtC,CADiB;YAAA,CAAnB;UARJ,EAFF,EAkBE,KAAC,IAAD;YAAM,KAAK,EAAElC,IAAI,CAACqC,YAAlB;YAAA,UAEI3B,cAAc,CAACuB,GAAf,CAAmB,UAACC,CAAD,EAAIC,KAAJ;cAAA,OACjB,KAAC,IAAD;gBAEE,KAAK,EAAE3B,mBAAmB,IAAI2B,KAAvB,GAA+BnC,IAAI,CAACsC,SAApC,GAAgDtC,IAAI,CAACuC,GAF9D;gBAAA;cAAA,GACOL,CADP,CADiB;YAAA,CAAnB;UAFJ,EAlBF;QAAA,EALF;MAAA,EAPF,EA0CE,KAAC,IAAD;QAAM,KAAK,EAAElC,IAAI,CAACwC;MAAlB,EA1CF;IAAA,EAJF;EAAA,EADF;AAmDD,CAxFD;;AA0FA,SAAShB,QAAT,GAAoB;EAClB,IAAIiB,QAAQ,GAAG,cAAf;EACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;EACA,IAAID,IAAI,CAACE,QAAL,KAAkB,EAAtB,EAA0B;IACxBH,QAAQ,GAAG,cAAX;EACD,CAFD,MAEO,IAAIC,IAAI,CAACE,QAAL,KAAkB,EAAtB,EAA0B;IAC/BH,QAAQ,GAAG,gBAAX;EACD;;EACD,OAAOA,QAAP;AACD;;AAED,SAASf,OAAT,GAAmB;EACjB,IAAImB,IAAI,GAAG,IAAIF,IAAJ,EAAX;EACA,IAAIG,IAAI,GAAGD,IAAI,CAACE,WAAL,EAAX;EACA,IAAIC,KAAK,GAAGH,IAAI,CAACI,cAAL,CAAoB,SAApB,EAA+B;IAAED,KAAK,EAAE;EAAT,CAA/B,CAAZ;EACA,IAAIE,GAAG,GAAGL,IAAI,CAACnB,OAAL,EAAV;EACA,OAAUoB,IAAV,SAAkBE,KAAlB,SAA2BE,GAA3B;AACD"},"metadata":{},"sourceType":"module"}