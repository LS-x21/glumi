{"ast":null,"code":"import { authen, database, updateDataFire } from \"../Firebase\";\nimport { getDatabase, ref, onValue, onChildAdded } from \"firebase/database\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { reloadData } from \"./DeepHomePage\";\nvar userID = 0;\nvar dataBreathRef = ref(database, 'users/' + userID + '/data/Breathanalyzer/');\nexport { dataBreathRef };\n\nfunction wrapListenerAce() {\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Breathanalyzer/\");\n}\n\nonAuthStateChanged(authen, function (user) {\n  if (user != null) {\n    userID = user.uid;\n  }\n\n  console.log(userID);\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/\");\n  wrapListenerAce();\n});\n\nfunction wrapListenerGlu() {\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Glucometer/\");\n  onChildAdded(dataBreathRef, function (data) {\n    console.log(\"Child added\");\n    var temp = data.key + \":00.000Z\";\n    GulData.push({\n      date: temp,\n      value: data.val()\n    });\n    console.log(\"break\");\n  });\n}\n\nfunction wrapListenerFood() {\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Food/\");\n  onChildAdded(dataBreathRef, function (data) {\n    console.log(\"Child added\");\n    var temp = data.key + \":00.000Z\";\n    FoodData.push({\n      date: temp,\n      value: data.val()\n    });\n    console.log(\"break\");\n  });\n}\n\nexport function clearData() {\n  while (AceData.length > 0) {\n    AceData.pop();\n  }\n\n  while (GulData.length > 0) {\n    GulData.pop();\n  }\n\n  while (FoodData.length > 0) {\n    FoodData.pop();\n  }\n}\nexport var AceData = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}];\nexport var AceData1 = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) / 100 + .5\n}];\nexport var GulData = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) + 25\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) + 25\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) + 25\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) + 25\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) + 25\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) + 25\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100) + 25\n}];\nexport var FoodData = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 30)\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 30)\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 30)\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 30)\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 30)\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 30)\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 30)\n}];\nexport var BloodData = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  systolic: 122,\n  diastolic: 84\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  systolic: Math.floor(Math.random() * 80) + 60,\n  diastolic: Math.floor(Math.random() * 30) + 60\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  systolic: Math.floor(Math.random() * 80) + 60,\n  diastolic: Math.floor(Math.random() * 30) + 60\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  systolic: Math.floor(Math.random() * 80) + 60,\n  diastolic: Math.floor(Math.random() * 30) + 60\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  systolic: Math.floor(Math.random() * 80) + 60,\n  diastolic: Math.floor(Math.random() * 30) + 60\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  systolic: Math.floor(Math.random() * 80) + 60,\n  diastolic: Math.floor(Math.random() * 30) + 60\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  systolic: Math.floor(Math.random() * 80) + 60,\n  diastolic: Math.floor(Math.random() * 30) + 60\n}];","map":{"version":3,"names":["authen","database","updateDataFire","getDatabase","ref","onValue","onChildAdded","onAuthStateChanged","reloadData","userID","dataBreathRef","wrapListenerAce","user","uid","console","log","wrapListenerGlu","data","temp","key","GulData","push","date","value","val","wrapListenerFood","FoodData","clearData","AceData","length","pop","Math","floor","random","AceData1","BloodData","systolic","diastolic"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/Data.js"],"sourcesContent":["import { authen, database, updateDataFire } from \"../Firebase\";\r\nimport { getDatabase, ref, onValue, onChildAdded } from \"firebase/database\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { reloadData } from \"./DeepHomePage\";\r\n\r\n// export const Data = [\r\n//   { date: '2022-02-01T05:00:00.000Z', value: 250 },\r\n//   { date: '2022-02-02T05:00:00.000Z', value: 300.35 },\r\n//   { date: '2022-02-03T05:00:00.000Z', value: 150.84 },\r\n//   { date: '2022-02-04T05:00:00.000Z', value: 500.92 },\r\n//   { date: '2022-02-05T05:00:00.000Z', value: 200.8 },\r\n//   { date: '2022-02-06T05:00:00.000Z', value: 150.47 },\r\n//   { date: '2022-02-07T05:00:00.000Z', value: 100.47 },\r\n// ]; 26th, 2\r\n\r\nlet userID = 0;\r\n\r\nlet dataBreathRef = ref(database, 'users/' + userID + '/data/Breathanalyzer/');\r\nexport { dataBreathRef };\r\n\r\nfunction wrapListenerAce() {\r\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Breathanalyzer/\");\r\n\r\n  // onChildAdded(dataBreathRef, (data) => {\r\n  //   console.log(\"Child added\");\r\n  //   let temp = data.key + \":00.000Z\";\r\n  //   AceData.push({ date: temp, value: data.val() });\r\n  //   console.log(\"break\");\r\n  // });\r\n}\r\n\r\nonAuthStateChanged(authen, (user) => {\r\n  if (user != null) {\r\n    userID = user.uid;\r\n  }\r\n  console.log(userID);\r\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/\");\r\n  wrapListenerAce();\r\n});\r\n\r\nfunction wrapListenerGlu() {\r\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Glucometer/\");\r\n  onChildAdded(dataBreathRef, (data) => {\r\n    console.log(\"Child added\");\r\n    let temp = data.key + \":00.000Z\";\r\n    GulData.push({ date: temp, value: data.val() });\r\n    console.log(\"break\");\r\n  });\r\n}\r\nfunction wrapListenerFood() {\r\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Food/\");\r\n  onChildAdded(dataBreathRef, (data) => {\r\n    console.log(\"Child added\");\r\n    let temp = data.key + \":00.000Z\";\r\n    FoodData.push({ date: temp, value: data.val() });\r\n    console.log(\"break\");\r\n  });\r\n}\r\n\r\nexport function clearData() {\r\n  while (AceData.length > 0) {\r\n    AceData.pop();\r\n  }\r\n\r\n  while (GulData.length > 0) {\r\n    GulData.pop();\r\n  }\r\n\r\n  while (FoodData.length > 0) {\r\n    FoodData.pop();\r\n  }\r\n}\r\n\r\nexport let AceData = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-02T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-03T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-04T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-05T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-06T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-07T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n];\r\n\r\nexport let AceData1 = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-02T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-03T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-04T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-05T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-06T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n  { date: \"2022-02-07T05:00:00.000Z\", value: Math.floor(Math.random() * 100) / 100 + .5 },\r\n];\r\n\r\nexport let GulData = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", value: Math.floor(Math.random() * 100) + 25 },\r\n  { date: \"2022-02-02T05:00:00.000Z\", value: Math.floor(Math.random() * 100) + 25 },\r\n  { date: \"2022-02-03T05:00:00.000Z\", value: Math.floor(Math.random() * 100) + 25 },\r\n  { date: \"2022-02-04T05:00:00.000Z\", value: Math.floor(Math.random() * 100) + 25 },\r\n  { date: \"2022-02-05T05:00:00.000Z\", value: Math.floor(Math.random() * 100) + 25 },\r\n  { date: \"2022-02-06T05:00:00.000Z\", value: Math.floor(Math.random() * 100) + 25 },\r\n  { date: \"2022-02-07T05:00:00.000Z\", value: Math.floor(Math.random() * 100) + 25 },\r\n];\r\n\r\nexport let FoodData = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", value: Math.floor(Math.random() * 30) },\r\n  { date: \"2022-02-02T05:00:00.000Z\", value: Math.floor(Math.random() * 30) },\r\n  { date: \"2022-02-03T05:00:00.000Z\", value: Math.floor(Math.random() * 30) },\r\n  { date: \"2022-02-04T05:00:00.000Z\", value: Math.floor(Math.random() * 30) },\r\n  { date: \"2022-02-05T05:00:00.000Z\", value: Math.floor(Math.random() * 30) },\r\n  { date: \"2022-02-06T05:00:00.000Z\", value: Math.floor(Math.random() * 30) },\r\n  { date: \"2022-02-07T05:00:00.000Z\", value: Math.floor(Math.random() * 30) },\r\n];\r\n\r\nexport let BloodData = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", systolic: 122, diastolic: 84 },\r\n  { date: \"2022-02-02T05:00:00.000Z\", systolic: Math.floor(Math.random() * 80) + 60, diastolic: Math.floor(Math.random() * 30) + 60 },\r\n  { date: \"2022-02-03T05:00:00.000Z\", systolic: Math.floor(Math.random() * 80) + 60, diastolic: Math.floor(Math.random() * 30) + 60 },\r\n  { date: \"2022-02-04T05:00:00.000Z\", systolic: Math.floor(Math.random() * 80) + 60, diastolic: Math.floor(Math.random() * 30) + 60 },\r\n  { date: \"2022-02-05T05:00:00.000Z\", systolic: Math.floor(Math.random() * 80) + 60, diastolic: Math.floor(Math.random() * 30) + 60 },\r\n  { date: \"2022-02-06T05:00:00.000Z\", systolic: Math.floor(Math.random() * 80) + 60, diastolic: Math.floor(Math.random() * 30) + 60 },\r\n  { date: \"2022-02-07T05:00:00.000Z\", systolic: Math.floor(Math.random() * 80) + 60, diastolic: Math.floor(Math.random() * 30) + 60 },\r\n];"],"mappings":"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"},"metadata":{},"sourceType":"module"}