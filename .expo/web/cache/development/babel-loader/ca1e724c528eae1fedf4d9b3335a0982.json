{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createAccount } from \"./../style/style.js\";\nimport { auth } from \"../Firebase.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      first = _useState2[0],\n      setFirst = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      last = _useState4[0],\n      setLast = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var handler = function handler() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (credential) {\n      var user = credential.user();\n      console.log(user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(View, {\n    style: createAccount.container,\n    children: [_jsx(Text, {\n      style: createAccount.heading,\n      children: \"Welcome!\"\n    }), _jsx(Text, {\n      style: createAccount.title,\n      children: \"Name\"\n    }), _jsxs(View, {\n      style: createAccount.name,\n      children: [_jsx(TextInput, {\n        style: createAccount.inputName,\n        placeholder: \"first\",\n        placeholderTextColor: \"rgba(0,0,0,.3)\",\n        value: first,\n        onChangeText: function onChangeText(text) {\n          return setFirst(text);\n        }\n      }), _jsx(TextInput, {\n        style: [createAccount.inputName, createAccount.last],\n        placeholder: \"last\",\n        placeholderTextColor: \"rgba(0,0,0,.3)\",\n        value: last,\n        onChangeText: function onChangeText(text) {\n          return setLast(text);\n        }\n      })]\n    }), _jsx(Text, {\n      style: createAccount.title,\n      children: \"Account\"\n    }), _jsx(TextInput, {\n      style: createAccount.input,\n      placeholder: \"email\",\n      placeholderTextColor: \"rgba(0,0,0,.3)\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      secureTextEntry: true,\n      style: createAccount.input,\n      placeholder: \"password\",\n      placeholderTextColor: \"rgba(0,0,0,.3)\",\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(View, {\n      style: createAccount.submit,\n      children: _jsx(Text, {\n        onPress: handler,\n        style: createAccount.submitText,\n        children: \"create\"\n      })\n    }), _jsx(View, {\n      style: createAccount.login,\n      children: _jsxs(Text, {\n        style: createAccount.loginText,\n        numberOfLines: 1,\n        children: [\"have an account? \", _jsx(Text, {\n          onPress: function onPress() {\n            return Alert.alert('login');\n          },\n          style: createAccount.loginButton,\n          children: \"login\"\n        })]\n      })\n    })]\n  });\n});","map":{"version":3,"names":["React","useState","createAccount","auth","first","setFirst","last","setLast","email","setEmail","password","setPassword","handler","createUserWithEmailAndPassword","then","credential","user","console","log","catch","error","alert","message","container","heading","title","name","inputName","text","input","submit","submitText","login","loginText","Alert","loginButton"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/CreateAccount.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Alert, Text } from 'react-native';\r\nimport { createAccount } from './../style/style.js';\r\nimport { auth } from '../Firebase.js'\r\n\r\nexport default () => {\r\n    const [first, setFirst] = useState('');\r\n    const [last, setLast] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handler = () => {\r\n        auth.createUserWithEmailAndPassword(email, password).then(credential => {\r\n            const user = credential.user();\r\n            console.log(user.email);\r\n        }).catch(error => alert(error.message));\r\n    }\r\n    return (\r\n        <View style={createAccount.container}>\r\n            <Text style={createAccount.heading}>Welcome!</Text>\r\n            <Text style={createAccount.title}>Name</Text>\r\n            <View style={createAccount.name}>\r\n                <TextInput\r\n                    style={createAccount.inputName}\r\n                    placeholder=\"first\"\r\n                    placeholderTextColor={\"rgba(0,0,0,.3)\"}\r\n                    value={first}\r\n                    onChangeText={text => setFirst(text)}\r\n                ></TextInput>\r\n                <TextInput\r\n                    style={[createAccount.inputName, createAccount.last]}\r\n                    placeholder=\"last\"\r\n                    placeholderTextColor={\"rgba(0,0,0,.3)\"}\r\n                    value={last}\r\n                    onChangeText={text => setLast(text)}\r\n                ></TextInput>\r\n            </View>\r\n            <Text style={createAccount.title}>Account</Text>\r\n            <TextInput\r\n                style={createAccount.input}\r\n                placeholder=\"email\"\r\n                placeholderTextColor={\"rgba(0,0,0,.3)\"}\r\n                value={email}\r\n                onChangeText={text => setEmail(text)}\r\n            ></TextInput>\r\n            <TextInput\r\n                secureTextEntry={true}\r\n                style={createAccount.input}\r\n                placeholder=\"password\"\r\n                placeholderTextColor={\"rgba(0,0,0,.3)\"}\r\n                value={password}\r\n                onChangeText={text => setPassword(text)}\r\n            ></TextInput>\r\n            <View style={createAccount.submit}>\r\n                <Text onPress={handler} style={createAccount.submitText}>\r\n                    create\r\n                </Text>\r\n            </View>\r\n            <View style={createAccount.login}>\r\n                <Text style={createAccount.loginText} numberOfLines={1}>\r\n                    have an account? <Text onPress={() => Alert.alert('login')} style={createAccount.loginButton} >login</Text>\r\n                </Text>\r\n            </View>\r\n        </View>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}