{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { general, bloodSugarGraph } from \"./../style/style\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function BloodSugarGraph() {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var opacity = 0.9;\n  var vw = Dimensions.get(\"window\").width;\n  var data = {\n    labels: [\"sun\", \"mon\", \"tue\"],\n    datasets: [{\n      data: [Math.random() * 100, Math.random() * 100, Math.random() * 100]\n    }],\n    legend: [\"Rainy Days\"]\n  };\n  var chartConfig = {\n    backgroundColor: \"rgba(255, 255, 255, \" + opacity + \"})\",\n    backgroundGradientFrom: \"rgba(255, 255, 255, \" + opacity + \")\",\n    backgroundGradientTo: \"rgba(255, 255, 255, \" + opacity + \")\",\n    decimalPlaces: 2,\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : .9;\n      return \"rgba(0, 0, 0, \" + opacity + \")\";\n    },\n    labelColor: function labelColor() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : .9;\n      return \"rgba(0, 0, 0, \" + opacity + \")\";\n    },\n    style: {\n      borderRadius: 12\n    }\n  };\n  return _jsx(LineChart, {\n    style: {\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: vw * .01,\n        height: vw * .01\n      },\n      shadowOpacity: .5,\n      shadowRadius: vw * .1,\n      marginVertical: 8,\n      borderRadius: 10,\n      width: vw * .8\n    },\n    data: data,\n    width: vw * .8,\n    height: vw * .8,\n    yAxisInterval: 1,\n    chartConfig: chartConfig\n  });\n}","map":{"version":3,"names":["general","bloodSugarGraph","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","BloodSugarGraph","sugarData","yHideRatio","defaultMax","opacity","vw","Dimensions","get","width","data","labels","datasets","Math","random","legend","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","labelColor","style","borderRadius","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","marginVertical"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions } from 'react-native';\r\nimport { general, bloodSugarGraph } from './../style/style';\r\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\r\n\r\nexport default function BloodSugarGraph() {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n  let opacity = 0.9;\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  const data = {\r\n    labels: [\"sun\", \"mon\", \"tue\"],\r\n    datasets: [\r\n      {\r\n        data: [\r\n          Math.random() * 100,\r\n          Math.random() * 100,\r\n          Math.random() * 100\r\n        ]\r\n      }\r\n    ],\r\n    legend: [\"Rainy Days\"],\r\n  };\r\n\r\n  const chartConfig = {\r\n    backgroundColor: `rgba(255, 255, 255, ${opacity}})`,\r\n    backgroundGradientFrom: `rgba(255, 255, 255, ${opacity})`,\r\n    backgroundGradientTo: `rgba(255, 255, 255, ${opacity})`,\r\n    decimalPlaces: 2, // optional, defaults to 2dp\r\n    color: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n    labelColor: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n    style: {\r\n      borderRadius: 12,\r\n    },\r\n  }\r\n\r\n  return (\r\n    <LineChart\r\n      style={\r\n        {\r\n          shadowColor: \"#000\",\r\n          shadowOffset: { width: vw * .01, height: vw * .01 },\r\n          shadowOpacity: .5,\r\n          shadowRadius: vw * .1,\r\n          marginVertical: 8,\r\n          borderRadius: 10,\r\n          width: vw * .8,\r\n        }\r\n      }\r\n      data={data}\r\n      width={vw * .8} // from react-native\r\n      height={vw * .8}\r\n      yAxisInterval={1} // optional, defaults to 1\r\n      chartConfig={chartConfig}\r\n    />\r\n  );\r\n}"],"mappings":";AACA,SAASA,OAAT,EAAkBC,eAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,aAAxC,EAAuDC,iBAAvD,EAA0EC,eAA1E,QAAiG,wBAAjG;;AAEA,eAAe,SAASC,eAAT,GAA2B;EACxC,IAAMC,SAAS,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CAAlB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,OAAO,GAAG,GAAd;EACA,IAAMC,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAApC;EAEA,IAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CADG;IAEXC,QAAQ,EAAE,CACR;MACEF,IAAI,EAAE,CACJG,IAAI,CAACC,MAAL,KAAgB,GADZ,EAEJD,IAAI,CAACC,MAAL,KAAgB,GAFZ,EAGJD,IAAI,CAACC,MAAL,KAAgB,GAHZ;IADR,CADQ,CAFC;IAWXC,MAAM,EAAE,CAAC,YAAD;EAXG,CAAb;EAcA,IAAMC,WAAW,GAAG;IAClBC,eAAe,2BAAyBZ,OAAzB,OADG;IAElBa,sBAAsB,2BAAyBb,OAAzB,MAFJ;IAGlBc,oBAAoB,2BAAyBd,OAAzB,MAHF;IAIlBe,aAAa,EAAE,CAJG;IAKlBC,KAAK,EAAE;MAAA,IAAChB,OAAD,uEAAW,EAAX;MAAA,0BAAmCA,OAAnC;IAAA,CALW;IAMlBiB,UAAU,EAAE;MAAA,IAACjB,OAAD,uEAAW,EAAX;MAAA,0BAAmCA,OAAnC;IAAA,CANM;IAOlBkB,KAAK,EAAE;MACLC,YAAY,EAAE;IADT;EAPW,CAApB;EAYA,OACE,KAAC,SAAD;IACE,KAAK,EACH;MACEC,WAAW,EAAE,MADf;MAEEC,YAAY,EAAE;QAAEjB,KAAK,EAAEH,EAAE,GAAG,GAAd;QAAmBqB,MAAM,EAAErB,EAAE,GAAG;MAAhC,CAFhB;MAGEsB,aAAa,EAAE,EAHjB;MAIEC,YAAY,EAAEvB,EAAE,GAAG,EAJrB;MAKEwB,cAAc,EAAE,CALlB;MAMEN,YAAY,EAAE,EANhB;MAOEf,KAAK,EAAEH,EAAE,GAAG;IAPd,CAFJ;IAYE,IAAI,EAAEI,IAZR;IAaE,KAAK,EAAEJ,EAAE,GAAG,EAbd;IAcE,MAAM,EAAEA,EAAE,GAAG,EAdf;IAeE,aAAa,EAAE,CAfjB;IAgBE,WAAW,EAAEU;EAhBf,EADF;AAoBD"},"metadata":{},"sourceType":"module"}