{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { bloodSugarGraph } from \"../style/style\";\nimport Svg, { Path } from 'react-native-svg';\nimport * as d3 from 'd3';\nimport { Data } from \"./Data.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (function () {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var opacity = 1;\n  var vw = Dimensions.get(\"window\").width;\n  var width = vw * .8;\n  var height = width;\n  console.log(\"hi\");\n  var min = Math.min(Data[0]);\n  var max = Math.min(Data[1]);\n  var xAxis = d3.scaleTime().domain(d3.extent(Data.map(function (i) {\n    return i[1];\n  }))).range([0, width]);\n  var yAxis = d3.scaleLinear().domain(d3.extent(Data.map(function (i) {\n    return i[1];\n  }))).range([height, 0]);\n  var line = d3.line().x(function (i) {\n    return xAxis(i[0]);\n  }).y(function (i) {\n    return yAxis(i[1]);\n  });\n  var graph = line(Data);\n  console.log(graph);\n  return _jsx(Svg, {\n    width: width,\n    height: height,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    children: _jsx(Path, {\n      fill: \"none\",\n      stroke: \"red\",\n      strokeWidth: 5,\n      d: graph\n    })\n  });\n});","map":{"version":3,"names":["bloodSugarGraph","Svg","Path","d3","Data","sugarData","yHideRatio","defaultMax","opacity","vw","Dimensions","get","width","height","console","log","min","Math","max","xAxis","scaleTime","domain","extent","map","i","range","yAxis","scaleLinear","line","x","y","graph"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions, Text } from 'react-native';\r\nimport { bloodSugarGraph } from '../style/style';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport * as d3 from 'd3';\r\nimport { Data } from './Data.js';\r\n// import { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\r\n\r\n\r\nexport default () => {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n  let opacity = 1;\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  // let Data = [\r\n  //   [5, 10],\r\n  //   [10, 13],\r\n  //   [15, 12],\r\n  //   [20, 11],\r\n  //   [25, 13],\r\n  //   [30, 13],\r\n  //   [35, 41],\r\n  //   [40, 31],\r\n  //   [45, 11],\r\n  //   [50, 2],\r\n  // ];\r\n\r\n  const width = vw * .8;\r\n  const height = width;\r\n  console.log(\"hi\");\r\n\r\n  // const makeGraph = d => {\r\n  const min = Math.min(Data[0]);\r\n  const max = Math.min(Data[1]);\r\n\r\n  // const xValue = i => Array.from(Data.keys());\r\n  // console.log(xValue);\r\n  const xAxis = d3.scaleTime()\r\n    // .domain(d3.extent(Data.map((i) => i[0])))\r\n\r\n    .domain(d3.extent(Data.map((i) => i[1])))\r\n    .range([0, width]);\r\n\r\n  const yAxis = d3.scaleLinear()\r\n    .domain(d3.extent(Data.map((i) => i[1])))\r\n    .range([height, 0]);\r\n  // const xAxis = d3.scaleTime()\r\n  //   .domain([new Date(2000, 2, 1), new Date(2000, 2, 15)])\r\n  //   .range([0, width]);\r\n\r\n\r\n\r\n  const line = d3.line()\r\n    .x(i => xAxis(i[0]))\r\n    .y(i => yAxis(i[1]))\r\n  let graph = line(Data);\r\n\r\n  console.log(graph);\r\n\r\n  return (\r\n    <Svg\r\n      width={width}\r\n      height={height}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <Path\r\n        fill=\"none\"\r\n        stroke=\"red\"\r\n        strokeWidth={5}\r\n        d={graph}\r\n      />\r\n    </Svg>\r\n  );\r\n  // const svg = select('svg');\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const width = 500;\r\n  //   const height = 500;\r\n  // })\r\n\r\n  // csv(rawData).then(d => {\r\n  //   d.forEach(i => {\r\n  //     i.value = +i.value;\r\n  //   });\r\n  //   graph(d);\r\n  // });\r\n\r\n  // const graph = d => {\r\n  //   const margin = { top: 10, left: 50, right: 50, bottom: 50 }\r\n  //   const min = d3.min(d, i => d.value);\r\n  //   const max = d3.max(d, i => d.value);\r\n\r\n\r\n  //   const svg = d3\r\n  //     .select('View')\r\n  //     .append(\"Svg\")\r\n  //     .attr('width', width)\r\n  //     .attr('height', height)\r\n  // }\r\n  // const xScale = scaleLinear()\r\n  //   .domain([0, max(d, i => i.value)])\r\n  //   .range(0, width);\r\n  // const yScale = scaleBand()\r\n  //   .domain(d, i => d.date)\r\n  //   .range([0, height]);\r\n\r\n  // const points = () => {\r\n  // let a = [];\r\n  // d.forEach(j => {\r\n  //   a.push([xAxis(new d(j.date)), yAxis(y.value)])\r\n  // });\r\n  // console.log(xAxis(Array.from(Data.keys())))\r\n  // let a = [];\r\n  // for (let i = 0; i < d.size; i++) {\r\n  //   let value = Data.get(key);\r\n  // console.log(value);\r\n  // a[i[0]] = xAxis(Array.from(Data.keys()))[i];\r\n  // }\r\n  // console.log(a);\r\n  // d.forEach(j => {\r\n  // console.log(Array.from(d.keys())[0])\r\n\r\n  // });\r\n  // console.log(new Date(key));\r\n  // return a;\r\n  // }\r\n\r\n\r\n\r\n  // const line = line()\r\n  //   .x(i => xAxis(new d(i.date)))\r\n  //   .y(i => yAxis(y.value));\r\n\r\n  // const renderData = data => {\r\n  //   const xScale = scaleLinear().domain([0, max(data, i => i.value)]).range(0, width); //the 10 is padding\r\n  //   const yScale = scaleBand().domain(data, i => data.date).range([0, height]); //the 35 is padding\r\n\r\n  //   svg.selectAll('rect').data(data).enter()\r\n  //     .append('rect')\r\n  //     .attr('y', i => Scale(i.date))\r\n  //     .attr('width', i => xScale(i.value))\r\n  //     .attr('height', yScale.bandwidth())\r\n  // }\r\n\r\n  // const data = {\r\n  //   labels: [\"sun\", \"mon\", \"tue\"],\r\n  //   datasets: [\r\n  //     {\r\n  //       data: [\r\n  //         Math.random() * 100,\r\n  //         Math.random() * 100,\r\n  //         Math.random() * 100\r\n  //       ]\r\n  //     }\r\n  //   ],\r\n  // };\r\n\r\n  // const chartConfig = {\r\n  //   backgroundColor: `rgba(255, 255, 255, ${opacity}})`,\r\n  //   backgroundGradientFrom: `rgba(255, 255, 255, ${opacity})`,\r\n  //   backgroundGradientTo: `rgba(255, 255, 255, ${opacity})`,\r\n  //   decimalPlaces: 2,\r\n  //   color: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n  //   labelColor: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n  //   style: {\r\n  //     borderRadius: 12,\r\n  //   },\r\n\r\n  // }\r\n\r\n  // return (\r\n  //   <LineChart\r\n  //     style={\r\n  //       {\r\n  //         shadowColor: \"#000\",\r\n  //         shadowOffset: { width: vw * .01, height: vw * .01 },\r\n  //         shadowOpacity: .5,\r\n  //         shadowRadius: vw * .1,\r\n  //         marginVertical: 8,\r\n  //         borderRadius: 10,\r\n  //         width: vw * .8,\r\n  //       }\r\n  //     }\r\n  //     withOuterLines\r\n  //     data={data}\r\n  //     width={vw * .8} // from react-native\r\n  //     height={vw * .8}\r\n  //     yAxisInterval={1} // optional, defaults to 1\r\n  //     chartConfig={chartConfig}\r\n  //     yLabelsOffset={vw * .05}\r\n  //     xLabelsOffset={vw * .02}\r\n  //   />\r\n  // );\r\n}"],"mappings":";;AACA,SAASA,eAAT;AACA,OAAOC,GAAP,IAAcC,IAAd,QAA0B,kBAA1B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,IAAT;;AAIA,gBAAe,YAAM;EACnB,IAAMC,SAAS,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CAAlB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,OAAO,GAAG,CAAd;EACA,IAAMC,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAApC;EAeA,IAAMA,KAAK,GAAGH,EAAE,GAAG,EAAnB;EACA,IAAMI,MAAM,GAAGD,KAAf;EACAE,OAAO,CAACC,GAAR,CAAY,IAAZ;EAGA,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASZ,IAAI,CAAC,CAAD,CAAb,CAAZ;EACA,IAAMc,GAAG,GAAGD,IAAI,CAACD,GAAL,CAASZ,IAAI,CAAC,CAAD,CAAb,CAAZ;EAIA,IAAMe,KAAK,GAAGhB,EAAE,CAACiB,SAAH,GAGXC,MAHW,CAGJlB,EAAE,CAACmB,MAAH,CAAUlB,IAAI,CAACmB,GAAL,CAAS,UAACC,CAAD;IAAA,OAAOA,CAAC,CAAC,CAAD,CAAR;EAAA,CAAT,CAAV,CAHI,EAIXC,KAJW,CAIL,CAAC,CAAD,EAAIb,KAAJ,CAJK,CAAd;EAMA,IAAMc,KAAK,GAAGvB,EAAE,CAACwB,WAAH,GACXN,MADW,CACJlB,EAAE,CAACmB,MAAH,CAAUlB,IAAI,CAACmB,GAAL,CAAS,UAACC,CAAD;IAAA,OAAOA,CAAC,CAAC,CAAD,CAAR;EAAA,CAAT,CAAV,CADI,EAEXC,KAFW,CAEL,CAACZ,MAAD,EAAS,CAAT,CAFK,CAAd;EASA,IAAMe,IAAI,GAAGzB,EAAE,CAACyB,IAAH,GACVC,CADU,CACR,UAAAL,CAAC;IAAA,OAAIL,KAAK,CAACK,CAAC,CAAC,CAAD,CAAF,CAAT;EAAA,CADO,EAEVM,CAFU,CAER,UAAAN,CAAC;IAAA,OAAIE,KAAK,CAACF,CAAC,CAAC,CAAD,CAAF,CAAT;EAAA,CAFO,CAAb;EAGA,IAAIO,KAAK,GAAGH,IAAI,CAACxB,IAAD,CAAhB;EAEAU,OAAO,CAACC,GAAR,CAAYgB,KAAZ;EAEA,OACE,KAAC,GAAD;IACE,KAAK,EAAEnB,KADT;IAEE,MAAM,EAAEC,MAFV;IAGE,KAAK,EAAC,4BAHR;IAAA,UAKE,KAAC,IAAD;MACE,IAAI,EAAC,MADP;MAEE,MAAM,EAAC,KAFT;MAGE,WAAW,EAAE,CAHf;MAIE,CAAC,EAAEkB;IAJL;EALF,EADF;AAuID,CA3LD"},"metadata":{},"sourceType":"module"}