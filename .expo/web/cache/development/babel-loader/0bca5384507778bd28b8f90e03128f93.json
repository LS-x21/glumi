{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { bloodSugarGraph } from \"../style/style\";\nimport Svg, { Path } from 'react-native-svg';\nimport { parseISO } from 'date-fns';\nimport * as d3 from 'd3';\nimport { Data } from \"./Data.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var vw = Dimensions.get(\"window\").width;\n  var a = [2, 3, 4];\n  a.map();\n\n  var parsedData = function parsedData(i) {\n    return i * i;\n  };\n\n  console.log(parsedData(a));\n  console.log(\"length \" + Data.length);\n\n  for (var i = 0; i < Data.length; i++) {\n    console.log(Data[i][0]);\n    Data[i][0] = parseISO(Data[i][0]);\n    console.log(\"parsed: \" + Data[i][0].toString());\n  }\n\n  var x = parseISO(Data[0][0].toString());\n  console.log(\"x\" + x);\n  var width = vw * .65;\n  var height = width;\n  var margin = {\n    top: vw * .1,\n    bottom: vw * .1,\n    left: vw * .06,\n    right: vw * .1\n  };\n  var xAxis = d3.scaleLinear().domain([new Date(Data[0][0]), new Date(Data[Data.length - 1][0])]).range([margin.left, width - margin.right]);\n  var yAxis = d3.scaleLinear().domain(d3.extent(Data.map(function (i) {\n    return i[1];\n  }))).range([height - margin.bottom, margin.top]);\n  var line = d3.line().x(function (i) {\n    return xAxis(i[0]);\n  }).y(function (i) {\n    return yAxis(i[1]);\n  });\n  var graph = line(Data);\n  var html = [];\n  yAxis.ticks().reverse().forEach(function (i) {\n    html.push(_jsx(Text, {\n      style: bloodSugarGraph.yLabel,\n      children: i\n    }, i));\n  });\n  console.log(\"\\n\");\n  return _jsxs(View, {\n    style: bloodSugarGraph.container,\n    children: [_jsxs(View, {\n      style: bloodSugarGraph.content,\n      children: [_jsx(View, {\n        style: bloodSugarGraph.unitContainer,\n        children: _jsx(Text, {\n          style: [bloodSugarGraph.unit, {\n            transform: [{\n              rotate: '270deg'\n            }]\n          }],\n          children: \"ppm\"\n        })\n      }), _jsx(View, {\n        style: bloodSugarGraph.labelContainer,\n        children: html\n      }), _jsx(Svg, {\n        width: width,\n        height: height,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: _jsx(Path, {\n          fill: \"none\",\n          stroke: \"#ff9933\",\n          strokeWidth: vw * .015,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          d: graph\n        })\n      })]\n    }), _jsx(View, {\n      style: bloodSugarGraph.xLabelContainer,\n      children: _jsx(Text, {\n        style: bloodSugarGraph.xLabel,\n        children: \"Acetone Levels\"\n      })\n    })]\n  });\n});","map":{"version":3,"names":["bloodSugarGraph","Svg","Path","parseISO","d3","Data","sugarData","yHideRatio","defaultMax","vw","Dimensions","get","width","a","map","parsedData","i","console","log","length","toString","x","height","margin","top","bottom","left","right","xAxis","scaleLinear","domain","Date","range","yAxis","extent","line","y","graph","html","ticks","reverse","forEach","push","yLabel","container","content","unitContainer","unit","transform","rotate","labelContainer","xLabelContainer","xLabel"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions, View, Text } from 'react-native';\r\nimport { bloodSugarGraph } from '../style/style';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport { parseISO } from 'date-fns'\r\nimport * as d3 from 'd3';\r\nimport { Data } from './Data.js';\r\n\r\nexport default () => {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  let a = [\r\n    2,\r\n    3,\r\n    4,\r\n  ];\r\n\r\n\r\n  a.map()\r\n  const parsedData = ((i) => {\r\n    return i * i;\r\n  });\r\n\r\n  console.log(parsedData(a));\r\n\r\n\r\n  console.log(\"length \" + Data.length);\r\n  for (let i = 0; i < Data.length; i++) {\r\n    console.log(Data[i][0]);\r\n    Data[i][0] = parseISO(Data[i][0]);\r\n    console.log(\"parsed: \" + (Data[i][0]).toString());\r\n  }\r\n\r\n  let x = parseISO((Data[0][0]).toString());\r\n  console.log(\"x\" + x);\r\n\r\n  const width = vw * .65;\r\n  const height = width;\r\n  const margin = {\r\n    top: vw * .1,\r\n    bottom: vw * .1,\r\n    left: vw * .06,\r\n    right: vw * .1,\r\n  }\r\n\r\n  const xAxis = d3.scaleLinear()\r\n    .domain([new Date(Data[0][0]), new Date(Data[Data.length - 1][0])])\r\n    .range([margin.left, width - margin.right]);\r\n\r\n  const yAxis = d3.scaleLinear()\r\n    .domain(d3.extent(Data.map((i) => i[1])))\r\n    .range([height - margin.bottom, margin.top]);\r\n\r\n  const line = d3.line()\r\n    .x(i => xAxis(i[0]))\r\n    .y(i => yAxis(i[1]))\r\n  let graph = line(Data);\r\n  let html = [];\r\n\r\n  yAxis.ticks().reverse().forEach((i) => {\r\n    html.push(<Text key={i} style={bloodSugarGraph.yLabel}>{i}</Text>)\r\n  });\r\n\r\n  console.log(\"\\n\");\r\n\r\n  return (\r\n    <View style={bloodSugarGraph.container}>\r\n      <View style={bloodSugarGraph.content}>\r\n        <View style={bloodSugarGraph.unitContainer}>\r\n          <Text style={[bloodSugarGraph.unit,\r\n          {\r\n            transform: [{ rotate: '270deg' }]\r\n          }]}>\r\n            ppm</Text>\r\n        </View>\r\n        <View style={bloodSugarGraph.labelContainer}>\r\n          {html}\r\n        </View>\r\n        <Svg\r\n          width={width}\r\n          height={height}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <Path\r\n            fill=\"none\"\r\n            // stroke=\"#ff7e40\"\r\n            stroke=\"#ff9933\"\r\n            // stroke=\"#66cc99\"\r\n            strokeWidth={vw * .015}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d={graph}\r\n          />\r\n        </Svg>\r\n      </View>\r\n      <View style={bloodSugarGraph.xLabelContainer}>\r\n        <Text style={bloodSugarGraph.xLabel}>Acetone Levels</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}