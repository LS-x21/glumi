{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport BloodSugarGraph from \"./BloodSugarGraph.js\";\nimport BloodSugarAnalysis from \"./BloodSugarAnalysis.js\";\nimport ExtendedBloodPressureGraph from \"./ExtendedBloodPressureGraph.js\";\nimport { home } from \"./../style/style.js\";\nimport LogEvent from \"./LogEvent.js\";\nimport { AceData, BloodData } from \"./Data.js\";\nimport { authen, database } from \"../Firebase.js\";\nimport TreeSVG from \"../assets/TreeSVG.js\";\nimport DarkTreeSVG from \"../assets/DarkTreeSVG.js\";\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { onChildAdded, ref } from 'firebase/database';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar dark = true;\nexport default (function (props) {\n  var vw = Dimensions.get(\"window\").width;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sliderElementActive = _useState2[0],\n      setSliderElementActive = _useState2[1];\n\n  var sliderElements = [_jsx(BloodSugarAnalysis, {}), _jsx(ExtendedBloodPressureGraph, {\n    width: vw * .8,\n    data: {\n      systolic: 120,\n      diastolic: 80\n    }\n  })];\n\n  var scrolled = function scrolled(nativeEvent) {\n    if (nativeEvent) {\n      var slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\n\n      if (slide != sliderElementActive) {\n        setSliderElementActive(slide);\n      }\n    }\n  };\n\n  var convertedAceData = [];\n  var conversion = 107;\n  AceData.forEach(function (i) {\n    convertedAceData.push({\n      date: i.date,\n      value: i.value * conversion\n    });\n  });\n  var BloodPressureData = BloodData90;\n\n  var _useState3 = useState(_jsx(BloodSugarGraph, {\n    width: vw * .65,\n    data: convertedAceData,\n    title: \"Gulcose Levels (breathanalyzer)\",\n    unit: \"mg/dL\"\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      aceGraph = _useState4[0],\n      setAceGraph = _useState4[1];\n\n  useFocusEffect(React.useCallback(function () {\n    var unsubscribe = function unsubscribe() {\n      setAceGraph(_jsx(BloodSugarGraph, {\n        width: vw * .65,\n        data: convertedAceData,\n        title: \"Gulcose Levels (breathanalyzer)\",\n        unit: \"mg/dL\"\n      }));\n    };\n\n    return function () {\n      return unsubscribe();\n    };\n  }));\n  onAuthStateChanged(authen, function (user) {\n    var unsub = function unsub() {\n      setAceGraph(_jsx(BloodSugarGraph, {\n        width: vw * .65,\n        data: convertedAceData,\n        title: \"Gulcose Levels (breathanalyzer)\",\n        unit: \"mg/dL\"\n      }));\n    };\n\n    return function () {\n      return unsub();\n    };\n  });\n\n  var background = function background() {\n    if (dark) {\n      return _jsx(DarkTreeSVG, {});\n    } else {\n      return _jsx(TreeSVG, {});\n    }\n  };\n\n  return _jsxs(View, {\n    style: home.container,\n    children: [_jsx(View, {\n      style: home.backgroundContainer,\n      children: background()\n    }), _jsxs(SafeAreaView, {\n      style: home.wrapper,\n      children: [_jsx(Text, {\n        style: home.title,\n        children: Greeting()\n      }), _jsx(Text, {\n        style: home.subtitle,\n        children: getDate()\n      }), _jsxs(View, {\n        style: home.content,\n        children: [_jsxs(View, {\n          style: home.summary,\n          children: [_jsx(Text, {\n            style: home.heading,\n            children: \"Summary\"\n          }), _jsx(View, {\n            style: home.graphContainer,\n            children: aceGraph\n          })]\n        }), _jsxs(View, {\n          style: home.slider,\n          children: [_jsx(Text, {\n            style: [home.heading, home.sliderHeading],\n            children: \"Discover More!\"\n          }), _jsx(ScrollView, {\n            onScroll: function onScroll(_ref) {\n              var nativeEvent = _ref.nativeEvent;\n              return scrolled(nativeEvent);\n            },\n            horizontal: true,\n            showsHorizontalScrollIndicator: false,\n            pagingEnabled: true,\n            scrollEventThrottle: 200,\n            style: home.sliderContainer,\n            children: sliderElements.map(function (i, index) {\n              return _jsx(View, {\n                style: home.sliderElement,\n                children: _jsx(View, {\n                  style: home.sliderContent,\n                  children: i\n                })\n              }, index);\n            })\n          }), _jsx(View, {\n            style: home.dotContainer,\n            children: sliderElements.map(function (i, index) {\n              return _jsx(View, {\n                style: sliderElementActive == index ? home.dotActive : home.dot\n              }, \"dot\" + index);\n            })\n          })]\n        })]\n      }), _jsx(View, {\n        style: home.spacer\n      })]\n    })]\n  });\n});\n\nfunction Greeting() {\n  var greeting = \"Good Morning\";\n  var time = new Date();\n\n  if (time.getHours() > 18) {\n    greeting = \"Good Evening\";\n  } else if (time.getHours() > 12) {\n    greeting = \"Good Afternoon\";\n  }\n\n  return greeting;\n}\n\nfunction getDate() {\n  var date = new Date();\n  var year = date.getFullYear();\n  var month = date.toLocaleString('default', {\n    month: 'long'\n  });\n  var day = date.getDate();\n  return year + \" \" + month + \" \" + day;\n}","map":{"version":3,"names":["React","useEffect","useRef","useState","BloodSugarGraph","BloodSugarAnalysis","ExtendedBloodPressureGraph","home","LogEvent","AceData","BloodData","authen","database","TreeSVG","DarkTreeSVG","onAuthStateChanged","onChildAdded","ref","useFocusEffect","dark","props","vw","Dimensions","get","width","sliderElementActive","setSliderElementActive","sliderElements","systolic","diastolic","scrolled","nativeEvent","slide","Math","ceil","contentOffset","x","layoutMeasurement","convertedAceData","conversion","forEach","i","push","date","value","BloodPressureData","BloodData90","aceGraph","setAceGraph","useCallback","unsubscribe","user","unsub","background","container","backgroundContainer","wrapper","title","Greeting","subtitle","getDate","content","summary","heading","graphContainer","slider","sliderHeading","sliderContainer","map","index","sliderElement","sliderContent","dotContainer","dotActive","dot","spacer","greeting","time","Date","getHours","year","getFullYear","month","toLocaleString","day"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/DeepHomePage.js"],"sourcesContent":["import {\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  Animated,\r\n  ScrollView,\r\n  Dimensions\r\n} from 'react-native';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport BloodSugarGraph from './BloodSugarGraph.js';\r\nimport BloodSugarAnalysis from './BloodSugarAnalysis.js';\r\nimport ExtendedBloodPressureGraph from './ExtendedBloodPressureGraph.js';\r\nimport { home } from './../style/style.js';\r\n\r\nimport LogEvent from './LogEvent.js';\r\n\r\nimport { AceData, BloodData } from './Data.js';\r\n\r\nimport { authen, database } from '../Firebase.js';\r\n\r\nimport TreeSVG from '../assets/TreeSVG.js';\r\nimport DarkTreeSVG from '../assets/DarkTreeSVG.js';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { onChildAdded, ref } from 'firebase/database';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nconst dark = true; //!edit this\r\n\r\nexport default (props) => {\r\n\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  const [sliderElementActive, setSliderElementActive] = useState(0);\r\n\r\n  const sliderElements = [\r\n    <BloodSugarAnalysis />,\r\n    <ExtendedBloodPressureGraph width={vw * .8} data={{ systolic: 120, diastolic: 80 }} />,\r\n  ]\r\n\r\n  const scrolled = (nativeEvent) => {\r\n    if (nativeEvent) {\r\n      const slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\r\n      if (slide != sliderElementActive) {\r\n        setSliderElementActive(slide)\r\n      }\r\n    }\r\n  }\r\n\r\n  const convertedAceData = [];\r\n  let conversion = 107;\r\n  AceData.forEach((i) => {\r\n    convertedAceData.push({ date: i.date, value: i.value * conversion })\r\n  });\r\n\r\n  const BloodPressureData = BloodData90\r\n\r\n  const [aceGraph, setAceGraph] = useState(<BloodSugarGraph width={vw * .65} data={convertedAceData} title={\"Gulcose Levels (breathanalyzer)\"} unit=\"mg/dL\" />);\r\n\r\n  useFocusEffect(\r\n    React.useCallback(() => {\r\n      const unsubscribe = () => { setAceGraph(<BloodSugarGraph width={vw * .65} data={convertedAceData} title={\"Gulcose Levels (breathanalyzer)\"} unit=\"mg/dL\" />); }\r\n      return () => unsubscribe();\r\n    },\r\n    ))\r\n\r\n  onAuthStateChanged(authen, (user) => {\r\n    const unsub = () => { setAceGraph(<BloodSugarGraph width={vw * .65} data={convertedAceData} title={\"Gulcose Levels (breathanalyzer)\"} unit=\"mg/dL\" />) };\r\n    return () => unsub();\r\n  });\r\n\r\n  const background = () => {\r\n    if (dark) {\r\n      return (<DarkTreeSVG />);\r\n    } else {\r\n      return (<TreeSVG />);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={home.container}>\r\n      <View style={home.backgroundContainer}>\r\n        {background()}\r\n      </View>\r\n      <SafeAreaView style={home.wrapper}>\r\n        <Text style={home.title}>\r\n          {Greeting()}\r\n        </Text>\r\n        <Text style={home.subtitle}>\r\n          {getDate()}\r\n        </Text>\r\n        <View style={home.content}>\r\n          <View style={home.summary}>\r\n            <Text style={home.heading}>Summary</Text>\r\n            <View style={home.graphContainer}>\r\n              {aceGraph}\r\n            </View>\r\n          </View>\r\n          <View style={home.slider}>\r\n            <Text style={[home.heading, home.sliderHeading]}>Discover More!</Text>\r\n            <ScrollView\r\n              onScroll={({ nativeEvent }) => scrolled(nativeEvent)}\r\n              horizontal\r\n              showsHorizontalScrollIndicator={false}\r\n              pagingEnabled\r\n              scrollEventThrottle={200}\r\n              style={home.sliderContainer}\r\n            >\r\n              {\r\n                sliderElements.map((i, index) =>\r\n                  <View style={home.sliderElement} key={index}>\r\n                    <View style={home.sliderContent}>\r\n                      {i}\r\n                    </View>\r\n                  </View>\r\n                )\r\n              }\r\n            </ScrollView>\r\n            <View style={home.dotContainer}>\r\n              {\r\n                sliderElements.map((i, index) =>\r\n                  <View\r\n                    key={\"dot\" + index}\r\n                    style={sliderElementActive == index ? home.dotActive : home.dot}\r\n                  />\r\n                )\r\n              }\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={home.spacer} />\r\n      </SafeAreaView>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction Greeting() {\r\n  let greeting = \"Good Morning\";\r\n  let time = new Date();\r\n  if (time.getHours() > 18) {\r\n    greeting = \"Good Evening\";\r\n  } else if (time.getHours() > 12) {\r\n    greeting = \"Good Afternoon\";\r\n  }\r\n  return greeting;\r\n}\r\n\r\nfunction getDate() {\r\n  let date = new Date();\r\n  let year = date.getFullYear();\r\n  let month = date.toLocaleString('default', { month: 'long' });\r\n  let day = date.getDate();\r\n  return `${year} ${month} ${day}`;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}