{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { bloodSugarGraph } from \"../style/style\";\nimport Svg, { Path } from 'react-native-svg';\nimport { parseISO } from 'date-fns';\nimport * as d3 from 'd3';\nimport { Data } from \"./Data.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var vw = Dimensions.get(\"window\").width;\n\n  var makeLine = function makeLine(d) {\n    for (var i = 0; i < d.length; i++) {\n      d[i][0] = parseISO(Data[i][0]);\n    }\n\n    var width = vw * .65;\n    var height = width;\n    var margin = {\n      top: vw * .1,\n      bottom: vw * .1,\n      left: vw * .06,\n      right: vw * .1\n    };\n  };\n\n  return _jsxs(View, {\n    style: bloodSugarGraph.container,\n    children: [_jsxs(View, {\n      style: bloodSugarGraph.content,\n      children: [_jsx(View, {\n        style: bloodSugarGraph.unitContainer,\n        children: _jsx(Text, {\n          style: [bloodSugarGraph.unit, {\n            transform: [{\n              rotate: '270deg'\n            }]\n          }],\n          children: \"ppm\"\n        })\n      }), _jsx(View, {\n        style: bloodSugarGraph.labelContainer,\n        children: html\n      }), _jsx(Svg, {\n        width: width,\n        height: height,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: _jsx(Path, {\n          fill: \"none\",\n          stroke: \"#ff9933\",\n          strokeWidth: vw * .015,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          d: graph\n        })\n      })]\n    }), _jsx(View, {\n      style: bloodSugarGraph.xLabelContainer,\n      children: _jsx(Text, {\n        style: bloodSugarGraph.xLabel,\n        children: \"Acetone Levels\"\n      })\n    })]\n  });\n});","map":{"version":3,"names":["bloodSugarGraph","Svg","Path","parseISO","d3","Data","sugarData","yHideRatio","defaultMax","vw","Dimensions","get","width","makeLine","d","i","length","height","margin","top","bottom","left","right","container","content","unitContainer","unit","transform","rotate","labelContainer","html","graph","xLabelContainer","xLabel"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions, View, Text } from 'react-native';\r\nimport { bloodSugarGraph } from '../style/style';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport { parseISO } from 'date-fns'\r\nimport * as d3 from 'd3';\r\nimport { Data } from './Data.js';\r\n\r\nexport default () => {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n\r\n\r\n  const makeLine = (d) => {\r\n\r\n    for (let i = 0; i < d.length; i++) {\r\n      d[i][0] = parseISO(Data[i][0]);\r\n    }\r\n    const width = vw * .65;\r\n  const height = width;\r\n  const margin = {\r\n    top: vw * .1,\r\n    bottom: vw * .1,\r\n    left: vw * .06,\r\n    right: vw * .1,\r\n  }\r\n\r\n  }\r\n\r\n  return (\r\n    <View style={bloodSugarGraph.container}>\r\n      <View style={bloodSugarGraph.content}>\r\n        <View style={bloodSugarGraph.unitContainer}>\r\n          <Text style={[bloodSugarGraph.unit,\r\n          {\r\n            transform: [{ rotate: '270deg' }]\r\n          }]}>\r\n            ppm</Text>\r\n        </View>\r\n        <View style={bloodSugarGraph.labelContainer}>\r\n          {html}\r\n        </View>\r\n        <Svg\r\n          width={width}\r\n          height={height}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <Path\r\n            fill=\"none\"\r\n            // stroke=\"#ff7e40\"\r\n            stroke=\"#ff9933\"\r\n            // stroke=\"#66cc99\"\r\n            strokeWidth={vw * .015}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d={graph}\r\n          />\r\n        </Svg>\r\n      </View>\r\n      <View style={bloodSugarGraph.xLabelContainer}>\r\n        <Text style={bloodSugarGraph.xLabel}>Acetone Levels</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n}"],"mappings":";;;AACA,SAASA,eAAT;AACA,OAAOC,GAAP,IAAcC,IAAd,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,IAAT;;;AAEA,gBAAe,YAAM;EACnB,IAAMC,SAAS,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CAAlB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,UAAU,GAAG,GAAjB;EAEA,IAAMC,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAApC;;EAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAO;IAEtB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;MACjCD,CAAC,CAACC,CAAD,CAAD,CAAK,CAAL,IAAUZ,QAAQ,CAACE,IAAI,CAACU,CAAD,CAAJ,CAAQ,CAAR,CAAD,CAAlB;IACD;;IACD,IAAMH,KAAK,GAAGH,EAAE,GAAG,GAAnB;IACF,IAAMQ,MAAM,GAAGL,KAAf;IACA,IAAMM,MAAM,GAAG;MACbC,GAAG,EAAEV,EAAE,GAAG,EADG;MAEbW,MAAM,EAAEX,EAAE,GAAG,EAFA;MAGbY,IAAI,EAAEZ,EAAE,GAAG,GAHE;MAIba,KAAK,EAAEb,EAAE,GAAG;IAJC,CAAf;EAOC,CAdD;;EAgBA,OACE,MAAC,IAAD;IAAM,KAAK,EAAET,eAAe,CAACuB,SAA7B;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAEvB,eAAe,CAACwB,OAA7B;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAExB,eAAe,CAACyB,aAA7B;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAE,CAACzB,eAAe,CAAC0B,IAAjB,EACb;YACEC,SAAS,EAAE,CAAC;cAAEC,MAAM,EAAE;YAAV,CAAD;UADb,CADa,CAAb;UAAA;QAAA;MADF,EADF,EAQE,KAAC,IAAD;QAAM,KAAK,EAAE5B,eAAe,CAAC6B,cAA7B;QAAA,UACGC;MADH,EARF,EAWE,KAAC,GAAD;QACE,KAAK,EAAElB,KADT;QAEE,MAAM,EAAEK,MAFV;QAGE,KAAK,EAAC,4BAHR;QAAA,UAKE,KAAC,IAAD;UACE,IAAI,EAAC,MADP;UAGE,MAAM,EAAC,SAHT;UAKE,WAAW,EAAER,EAAE,GAAG,IALpB;UAME,aAAa,EAAC,OANhB;UAOE,cAAc,EAAC,OAPjB;UAQE,CAAC,EAAEsB;QARL;MALF,EAXF;IAAA,EADF,EA6BE,KAAC,IAAD;MAAM,KAAK,EAAE/B,eAAe,CAACgC,eAA7B;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEhC,eAAe,CAACiC,MAA7B;QAAA;MAAA;IADF,EA7BF;EAAA,EADF;AAoCD,CA7DD"},"metadata":{},"sourceType":"module"}