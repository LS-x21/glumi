{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Fragment } from \"react-native-web/dist/index\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { logEvent } from \"../style/style.js\";\nimport AddSVG from \"../assets/AddSVG.js\";\nimport EditSVG from \"../assets/EditSVG.js\";\nimport { AceData, GulData, FoodData } from \"./Data.js\";\nimport InputData from \"./InputData.js\";\nimport SelectList from 'react-native-dropdown-select-list';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var vw = Dimensions.get(\"window\").width;\n\n  var formatData = function formatData(d) {\n    var formatedData = [];\n    var sortData = d.sort(function (x, y) {\n      return Number(new Date(x.date)) - Number(new Date(y.date));\n    });\n    var a = [];\n    var temp = sortData[0];\n\n    for (var i = 0; i < sortData.length; i++) {\n      var iDate = new Date(sortData[i].date);\n      var tempDate = new Date(temp.date);\n\n      if (iDate.getFullYear() == tempDate.getFullYear() && iDate.getMonth() == tempDate.getMonth() && iDate.getDate() == tempDate.getDate()) {\n        a.push(sortData[i]);\n      } else {\n        formatedData.push(a);\n        temp = sortData[i];\n        a = [sortData[i]];\n      }\n    }\n\n    formatedData.push(a);\n    return formatedData;\n  };\n\n  var padDate = function padDate(d) {\n    if (d < 10) {\n      return \"0\" + d;\n    } else {\n      return d;\n    }\n  };\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sliderElementActive = _useState2[0],\n      setSliderElementActive = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ref = _useState4[0],\n      setref = _useState4[1];\n\n  onchange = function onchange(nativeEvent) {\n    if (nativeEvent) {\n      var slide = Math.ceil(nativeEvent.contentOffset.x / vw);\n\n      if (slide != sliderElementActive) {\n        setSliderElementActive(slide);\n      }\n    }\n  };\n\n  var stringifyDate = function stringifyDate(i) {\n    return i.toLocaleString(\"en-US\", {\n      month: \"short\"\n    }) + \" \" + i.getDate();\n  };\n\n  var dataSet = function dataSet(d, index, title) {\n    var key = title + index;\n    var date = new Date(d[0].date);\n    return _jsx(View, {\n      children: _jsx(ScrollView, {\n        style: logEvent.data,\n        vertical: true,\n        showsHorizontalScrollIndicator: false,\n        scrollEventThrottle: 200,\n        decelerationRate: \"fast\",\n        pagingEnabled: true,\n        children: _jsxs(View, {\n          style: logEvent.dataContainer,\n          children: [_jsxs(View, {\n            style: [logEvent.dataElement, logEvent.leader],\n            children: [_jsx(Text, {\n              style: logEvent.leaderText,\n              children: \"time\"\n            }), _jsx(Text, {\n              style: logEvent.leaderText,\n              children: \"data\"\n            }), _jsx(Text, {\n              style: logEvent.leaderText,\n              children: \"edit\"\n            })]\n          }), d.map(function (i, index) {\n            return _jsxs(View, {\n              style: [logEvent.dataElement, logEvent.first],\n              children: [_jsx(Text, {\n                style: logEvent.dataText,\n                children: padDate(new Date(i.date).getHours()) + \":\" + padDate(new Date(i.date).getMinutes())\n              }), _jsx(Text, {\n                style: logEvent.dataText,\n                children: i.value\n              }), _jsx(View, {\n                style: logEvent.iconContainer,\n                children: _jsx(EditSVG, {})\n              })]\n            }, \"d\" + index);\n          }), _jsx(View, {\n            style: logEvent.add,\n            children: _jsx(AddSVG, {\n              style: logEvent.icon\n            })\n          }), _jsx(View, {\n            style: logEvent.filler\n          })]\n        })\n      })\n    }, key);\n  };\n\n  return _jsxs(View, {\n    style: logEvent.container,\n    children: [_jsx(View, {\n      style: logEvent.backgroundElement1\n    }), _jsx(View, {\n      style: logEvent.backgroundElement2\n    }), _jsx(View, {\n      style: logEvent.header,\n      children: _jsx(Text, {\n        style: logEvent.title,\n        children: \"Your Current Data\"\n      })\n    }), _jsxs(ScrollView, {\n      style: logEvent.content,\n      children: [_jsx(InputData, {\n        data: AceData,\n        title: \"Breathanalyzer \"\n      }), _jsx(InputData, {\n        data: GulData,\n        title: \"Glucometer \"\n      }), _jsx(InputData, {\n        data: FoodData,\n        title: \"Sugar Intaked \"\n      })]\n    })]\n  });\n});","map":{"version":3,"names":["React","useState","Fragment","logEvent","AddSVG","EditSVG","AceData","GulData","FoodData","InputData","SelectList","vw","Dimensions","get","width","formatData","d","formatedData","sortData","sort","x","y","Number","Date","date","a","temp","i","length","iDate","tempDate","getFullYear","getMonth","getDate","push","padDate","sliderElementActive","setSliderElementActive","ref","setref","onchange","nativeEvent","slide","Math","ceil","contentOffset","stringifyDate","toLocaleString","month","dataSet","index","title","key","data","dataContainer","dataElement","leader","leaderText","map","first","dataText","getHours","getMinutes","value","iconContainer","add","icon","filler","container","backgroundElement1","backgroundElement2","header","content"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/LogEvent.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Text, View, ScrollView, Fragment, Dimensions } from 'react-native';\r\nimport { logEvent } from '../style/style.js';\r\nimport AddSVG from '../assets/AddSVG.js';\r\nimport EditSVG from '../assets/EditSVG.js';\r\nimport { AceData, GulData, FoodData } from './Data.js';\r\nimport InputData from './InputData.js';\r\nimport SelectList from 'react-native-dropdown-select-list'\r\n\r\n\r\nexport default () => {\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  const formatData = (d) => {\r\n    let formatedData = [];\r\n    const sortData = d.sort(\r\n      (x, y) => Number(new Date(x.date)) - Number(new Date(y.date)),\r\n    );\r\n    let a = [];\r\n    let temp = sortData[0];\r\n    for (let i = 0; i < sortData.length; i++) {\r\n      let iDate = new Date(sortData[i].date);\r\n      let tempDate = new Date(temp.date);\r\n      if (\r\n        iDate.getFullYear() == tempDate.getFullYear()\r\n        && iDate.getMonth() == tempDate.getMonth()\r\n        && iDate.getDate() == tempDate.getDate()\r\n      ) {\r\n        a.push(sortData[i]);\r\n      } else {\r\n        formatedData.push(a);\r\n        temp = sortData[i];\r\n        a = [sortData[i]];\r\n      }\r\n    }\r\n    formatedData.push(a);\r\n    return formatedData\r\n  }\r\n\r\n  const padDate = (d) => {\r\n    if (d < 10) {\r\n      return \"0\" + d;\r\n    } else {\r\n      return d;\r\n    }\r\n  }\r\n\r\n  const [sliderElementActive, setSliderElementActive] = useState(0);\r\n  const [ref, setref] = useState(null);\r\n\r\n  onchange = (nativeEvent) => {\r\n    if (nativeEvent) {\r\n      const slide = Math.ceil(nativeEvent.contentOffset.x / vw);\r\n      if (slide != sliderElementActive) {\r\n        setSliderElementActive(slide)\r\n      }\r\n    }\r\n  }\r\n\r\n  const stringifyDate = (i) => {\r\n    return (i.toLocaleString(\"en-US\", { month: \"short\" }) + \" \" + i.getDate());\r\n  }\r\n\r\n  const dataSet = (d, index, title) => {\r\n    let key = title + index;\r\n    let date = new Date(d[0].date);\r\n    return (\r\n      <View key={key}>\r\n        <ScrollView\r\n          style={logEvent.data}\r\n          vertical={true}\r\n          showsHorizontalScrollIndicator={false}\r\n          scrollEventThrottle={200}\r\n          decelerationRate=\"fast\"\r\n          pagingEnabled\r\n        >\r\n          <View style={logEvent.dataContainer}>\r\n            <View style={[logEvent.dataElement, logEvent.leader]}>\r\n              <Text style={logEvent.leaderText}>time</Text>\r\n              <Text style={logEvent.leaderText}>data</Text>\r\n              <Text style={logEvent.leaderText}>edit</Text>\r\n            </View>\r\n            {\r\n              d.map((i, index) =>\r\n                <View style={\r\n                  [logEvent.dataElement, logEvent.first]}\r\n                  key={\"d\" + index}\r\n                >\r\n                  <Text style={logEvent.dataText}>\r\n                    {padDate(new Date(i.date).getHours()) + \":\" + padDate(new Date(i.date).getMinutes())}\r\n                  </Text>\r\n                  <Text style={logEvent.dataText}>{i.value}</Text>\r\n                  <View style={logEvent.iconContainer}>\r\n                    <EditSVG />\r\n                  </View>\r\n                </View>\r\n              )\r\n            }\r\n            <View style={logEvent.add}>\r\n              <AddSVG style={logEvent.icon} />\r\n            </View>\r\n            <View style={logEvent.filler} />\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={logEvent.container}>\r\n      <View style={logEvent.backgroundElement1} />\r\n      <View style={logEvent.backgroundElement2} />\r\n      <View style={logEvent.header}>\r\n        <Text style={logEvent.title}>Your Current Data</Text>\r\n      </View>\r\n      <ScrollView style={logEvent.content}>\r\n        <InputData data={AceData} title=\"Breathanalyzer \" />\r\n        <InputData data={GulData} title=\"Glucometer \" />\r\n        <InputData data={FoodData} title=\"Sugar Intaked \" />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}