{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as d3 from 'd3';\nimport { bloodSugarGraph } from \"../style/style\";\nimport rawData from \"./data.csv\";\nimport { Svg } from 'react-native-svg';\nimport { svg, csv } from 'd3';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (function () {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var opacity = 1;\n  var vw = Dimensions.get(\"window\").width;\n  csv(rawData).then(function (d) {\n    d.forEach(function (i) {\n      i.value = +i.value;\n    });\n    graph(d);\n  });\n\n  var graph = function graph(d) {\n    var margin = {\n      top: 10,\n      left: 50,\n      right: 50,\n      bottom: 50\n    };\n    var min = d3.min(d, function (i) {\n      return d.value;\n    });\n    var max = d3.max(d, function (i) {\n      return d.value;\n    });\n    var svg = d3.select('View').append(\"Svg\").attr('width', width).attr('height', height);\n  };\n\n  var xScale = scaleLinear().domain([0, max(d, function (i) {\n    return i.value;\n  })]).range(0, width);\n  var yScale = scaleBand().domain(d, function (i) {\n    return d.date;\n  }).range([0, height]);\n  svg.append('g').attr;\n  return _jsx(Text, {\n    children: _jsx(\"rawData\", {})\n  });\n});","map":{"version":3,"names":["d3","bloodSugarGraph","rawData","Svg","svg","csv","sugarData","yHideRatio","defaultMax","opacity","vw","Dimensions","get","width","then","d","forEach","i","value","graph","margin","top","left","right","bottom","min","max","select","append","attr","height","xScale","scaleLinear","domain","range","yScale","scaleBand","date"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions, Text } from 'react-native';\r\nimport * as d3 from 'd3';\r\nimport { bloodSugarGraph } from '../style/style';\r\nimport rawData from './data.csv';\r\nimport { Svg } from 'react-native-svg';\r\nimport { svg, csv } from 'd3';\r\n// import { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\r\n\r\n\r\nexport default () => {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n  let opacity = 1;\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  // const svg = select('svg');\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const width = 500;\r\n  //   const height = 500;\r\n  // })\r\n\r\n  csv(rawData).then(d => {\r\n    d.forEach(i => {\r\n      i.value = +i.value;\r\n    });\r\n    graph(d);\r\n  });\r\n\r\n  const graph = d => {\r\n    const margin = { top: 10, left: 50, right: 50, bottom: 50 }\r\n    const min = d3.min(d, i => d.value);\r\n    const max = d3.max(d, i => d.value);\r\n\r\n\r\n    const svg = d3\r\n      .select('View')\r\n      .append(\"Svg\")\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n  }\r\n  const xScale = scaleLinear()\r\n    .domain([0, max(d, i => i.value)])\r\n    .range(0, width);\r\n  const yScale = scaleBand()\r\n    .domain(d, i => d.date)\r\n    .range([0, height]);\r\n\r\n  svg\r\n    .append('g')\r\n    .attr\r\n\r\n  return (\r\n    <Text><rawData /></Text>\r\n  );\r\n\r\n  // const renderData = data => {\r\n  //   const xScale = scaleLinear().domain([0, max(data, i => i.value)]).range(0, width); //the 10 is padding\r\n  //   const yScale = scaleBand().domain(data, i => data.date).range([0, height]); //the 35 is padding\r\n\r\n  //   svg.selectAll('rect').data(data).enter()\r\n  //     .append('rect')\r\n  //     .attr('y', i => Scale(i.date))\r\n  //     .attr('width', i => xScale(i.value))\r\n  //     .attr('height', yScale.bandwidth())\r\n  // }\r\n\r\n  // const data = {\r\n  //   labels: [\"sun\", \"mon\", \"tue\"],\r\n  //   datasets: [\r\n  //     {\r\n  //       data: [\r\n  //         Math.random() * 100,\r\n  //         Math.random() * 100,\r\n  //         Math.random() * 100\r\n  //       ]\r\n  //     }\r\n  //   ],\r\n  // };\r\n\r\n  // const chartConfig = {\r\n  //   backgroundColor: `rgba(255, 255, 255, ${opacity}})`,\r\n  //   backgroundGradientFrom: `rgba(255, 255, 255, ${opacity})`,\r\n  //   backgroundGradientTo: `rgba(255, 255, 255, ${opacity})`,\r\n  //   decimalPlaces: 2,\r\n  //   color: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n  //   labelColor: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n  //   style: {\r\n  //     borderRadius: 12,\r\n  //   },\r\n\r\n  // }\r\n\r\n  // return (\r\n  //   <LineChart\r\n  //     style={\r\n  //       {\r\n  //         shadowColor: \"#000\",\r\n  //         shadowOffset: { width: vw * .01, height: vw * .01 },\r\n  //         shadowOpacity: .5,\r\n  //         shadowRadius: vw * .1,\r\n  //         marginVertical: 8,\r\n  //         borderRadius: 10,\r\n  //         width: vw * .8,\r\n  //       }\r\n  //     }\r\n  //     withOuterLines\r\n  //     data={data}\r\n  //     width={vw * .8} // from react-native\r\n  //     height={vw * .8}\r\n  //     yAxisInterval={1} // optional, defaults to 1\r\n  //     chartConfig={chartConfig}\r\n  //     yLabelsOffset={vw * .05}\r\n  //     xLabelsOffset={vw * .02}\r\n  //   />\r\n  // );\r\n}"],"mappings":";;AACA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,SAASC,eAAT;AACA,OAAOC,OAAP;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,IAAzB;;AAIA,gBAAe,YAAM;EACnB,IAAMC,SAAS,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CAAlB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,OAAO,GAAG,CAAd;EACA,IAAMC,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAApC;EAUAR,GAAG,CAACH,OAAD,CAAH,CAAaY,IAAb,CAAkB,UAAAC,CAAC,EAAI;IACrBA,CAAC,CAACC,OAAF,CAAU,UAAAC,CAAC,EAAI;MACbA,CAAC,CAACC,KAAF,GAAU,CAACD,CAAC,CAACC,KAAb;IACD,CAFD;IAGAC,KAAK,CAACJ,CAAD,CAAL;EACD,CALD;;EAOA,IAAMI,KAAK,GAAG,SAARA,KAAQ,CAAAJ,CAAC,EAAI;IACjB,IAAMK,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAP;MAAWC,IAAI,EAAE,EAAjB;MAAqBC,KAAK,EAAE,EAA5B;MAAgCC,MAAM,EAAE;IAAxC,CAAf;IACA,IAAMC,GAAG,GAAGzB,EAAE,CAACyB,GAAH,CAAOV,CAAP,EAAU,UAAAE,CAAC;MAAA,OAAIF,CAAC,CAACG,KAAN;IAAA,CAAX,CAAZ;IACA,IAAMQ,GAAG,GAAG1B,EAAE,CAAC0B,GAAH,CAAOX,CAAP,EAAU,UAAAE,CAAC;MAAA,OAAIF,CAAC,CAACG,KAAN;IAAA,CAAX,CAAZ;IAGA,IAAMd,GAAG,GAAGJ,EAAE,CACX2B,MADS,CACF,MADE,EAETC,MAFS,CAEF,KAFE,EAGTC,IAHS,CAGJ,OAHI,EAGKhB,KAHL,EAITgB,IAJS,CAIJ,QAJI,EAIMC,MAJN,CAAZ;EAKD,CAXD;;EAYA,IAAMC,MAAM,GAAGC,WAAW,GACvBC,MADY,CACL,CAAC,CAAD,EAAIP,GAAG,CAACX,CAAD,EAAI,UAAAE,CAAC;IAAA,OAAIA,CAAC,CAACC,KAAN;EAAA,CAAL,CAAP,CADK,EAEZgB,KAFY,CAEN,CAFM,EAEHrB,KAFG,CAAf;EAGA,IAAMsB,MAAM,GAAGC,SAAS,GACrBH,MADY,CACLlB,CADK,EACF,UAAAE,CAAC;IAAA,OAAIF,CAAC,CAACsB,IAAN;EAAA,CADC,EAEZH,KAFY,CAEN,CAAC,CAAD,EAAIJ,MAAJ,CAFM,CAAf;EAIA1B,GAAG,CACAwB,MADH,CACU,GADV,EAEGC,IAFH;EAIA,OACE,KAAC,IAAD;IAAA,UAAM;EAAN,EADF;AAgED,CA7GD"},"metadata":{},"sourceType":"module"}