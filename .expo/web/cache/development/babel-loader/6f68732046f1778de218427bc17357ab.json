{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { scaleLinear, select, csv } from 'd3';\nimport { bloodSugarGraph } from \"../style/style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function BloodSugarGraph() {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var opacity = 1;\n  var vw = Dimensions.get(\"window\").width;\n  var width = 400;\n  var height = width;\n  var data = new Map([]);\n\n  var makeGraph = function makeGraph() {\n    var min = Math.min.apply(Math, _toConsumableArray(data.values()));\n    var max = Math.max.apply(Math, _toConsumableArray(data.values()));\n    var yAxis = scaleLinear().domain([0, max]).range([height, 35]);\n    var xAxis = scaleTime().domain([new Date(2022, 1, 1), new Date(2022, 1, 15)]).range(10, width - 10);\n  };\n\n  return _jsx(Text, {\n    children: \"hello world\"\n  });\n}","map":{"version":3,"names":["scaleLinear","select","csv","bloodSugarGraph","BloodSugarGraph","sugarData","yHideRatio","defaultMax","opacity","vw","Dimensions","get","width","height","data","Map","makeGraph","min","Math","values","max","yAxis","domain","range","xAxis","scaleTime","Date"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions, Text } from 'react-native';\r\nimport { scaleLinear, select, csv } from 'd3';\r\nimport { bloodSugarGraph } from '../style/style';\r\n// import { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\r\n\r\n\r\nexport default function BloodSugarGraph() {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n  let opacity = 1;\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  const width = 400;\r\n  const height = width;\r\n\r\n  const data = new Map([\r\n\r\n  ]);\r\n\r\n  const makeGraph = () => {\r\n\r\n\r\n    const min = Math.min(...data.values());\r\n    const max = Math.max(...data.values());\r\n    const yAxis = scaleLinear().domain([0, max]).range([height, 35]); //the 35 is padding\r\n    const xAxis = scaleTime().domain([\r\n      new Date(2022, 1, 1),\r\n      new Date(2022, 1, 15)\r\n    ]).range(10, width - 10); //the 10 is padding\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <Text>hello world</Text>\r\n  );\r\n\r\n\r\n\r\n  // const data = {\r\n  //   labels: [\"sun\", \"mon\", \"tue\"],\r\n  //   datasets: [\r\n  //     {\r\n  //       data: [\r\n  //         Math.random() * 100,\r\n  //         Math.random() * 100,\r\n  //         Math.random() * 100\r\n  //       ]\r\n  //     }\r\n  //   ],\r\n  // };\r\n\r\n  // const chartConfig = {\r\n  //   backgroundColor: `rgba(255, 255, 255, ${opacity}})`,\r\n  //   backgroundGradientFrom: `rgba(255, 255, 255, ${opacity})`,\r\n  //   backgroundGradientTo: `rgba(255, 255, 255, ${opacity})`,\r\n  //   decimalPlaces: 2,\r\n  //   color: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n  //   labelColor: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n  //   style: {\r\n  //     borderRadius: 12,\r\n  //   },\r\n\r\n  // }\r\n\r\n  // return (\r\n  //   <LineChart\r\n  //     style={\r\n  //       {\r\n  //         shadowColor: \"#000\",\r\n  //         shadowOffset: { width: vw * .01, height: vw * .01 },\r\n  //         shadowOpacity: .5,\r\n  //         shadowRadius: vw * .1,\r\n  //         marginVertical: 8,\r\n  //         borderRadius: 10,\r\n  //         width: vw * .8,\r\n  //       }\r\n  //     }\r\n  //     withOuterLines\r\n  //     data={data}\r\n  //     width={vw * .8} // from react-native\r\n  //     height={vw * .8}\r\n  //     yAxisInterval={1} // optional, defaults to 1\r\n  //     chartConfig={chartConfig}\r\n  //     yLabelsOffset={vw * .05}\r\n  //     xLabelsOffset={vw * .02}\r\n  //   />\r\n  // );\r\n}"],"mappings":";;;AACA,SAASA,WAAT,EAAsBC,MAAtB,EAA8BC,GAA9B,QAAyC,IAAzC;AACA,SAASC,eAAT;;AAIA,eAAe,SAASC,eAAT,GAA2B;EACxC,IAAMC,SAAS,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CAAlB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,OAAO,GAAG,CAAd;EACA,IAAMC,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAApC;EAEA,IAAMA,KAAK,GAAG,GAAd;EACA,IAAMC,MAAM,GAAGD,KAAf;EAEA,IAAME,IAAI,GAAG,IAAIC,GAAJ,CAAQ,EAAR,CAAb;;EAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;IAGtB,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,OAAAC,IAAI,qBAAQJ,IAAI,CAACK,MAAL,EAAR,EAAhB;IACA,IAAMC,GAAG,GAAGF,IAAI,CAACE,GAAL,OAAAF,IAAI,qBAAQJ,IAAI,CAACK,MAAL,EAAR,EAAhB;IACA,IAAME,KAAK,GAAGrB,WAAW,GAAGsB,MAAd,CAAqB,CAAC,CAAD,EAAIF,GAAJ,CAArB,EAA+BG,KAA/B,CAAqC,CAACV,MAAD,EAAS,EAAT,CAArC,CAAd;IACA,IAAMW,KAAK,GAAGC,SAAS,GAAGH,MAAZ,CAAmB,CAC/B,IAAII,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,CAD+B,EAE/B,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CAF+B,CAAnB,EAGXH,KAHW,CAGL,EAHK,EAGDX,KAAK,GAAG,EAHP,CAAd;EAMD,CAZD;;EAcA,OACE,KAAC,IAAD;IAAA;EAAA,EADF;AAuDD"},"metadata":{},"sourceType":"module"}