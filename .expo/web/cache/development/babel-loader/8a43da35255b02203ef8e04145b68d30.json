{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { setting } from \"../style/style.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return _jsxs(View, {\n    style: setting.container,\n    children: [_jsx(View, {\n      style: setting.header,\n      children: _jsx(Text, {\n        style: setting.title,\n        children: \"Settings\"\n      })\n    }), _jsxs(View, {\n      style: setting.content,\n      children: [_jsx(Text, {\n        style: setting.subtitle,\n        children: \"Account\"\n      }), _jsxs(View, {\n        style: setting.section,\n        children: [_jsxs(View, {\n          style: setting.selection,\n          children: [_jsx(Text, {\n            style: setting.selectiontext,\n            children: \"profile\"\n          }), \" \"]\n        }), _jsx(View, {\n          style: setting.selection,\n          children: _jsx(Text, {\n            style: setting.selectiontext,\n            children: \"password\"\n          })\n        }), _jsx(View, {\n          style: setting.selection,\n          children: _jsx(Text, {\n            style: setting.selectiontext,\n            children: \"email\"\n          })\n        }), _jsx(View, {\n          style: setting.selection,\n          children: _jsx(Text, {\n            style: setting.selectiontext,\n            children: \"notifications\"\n          })\n        })]\n      }), _jsx(Text, {\n        style: setting.subtitle,\n        children: \"Aesthetics\"\n      })]\n    })]\n  });\n});","map":{"version":3,"names":["React","useState","setting","isEnabled","setIsEnabled","toggleSwitch","previousState","container","header","title","content","subtitle","section","selection","selectiontext"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/Settings.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, Switch } from 'react-native';\r\nimport { setting } from '../style/style.js';\r\n\r\nexport default () => {\r\n  const [isEnabled, setIsEnabled] = useState(false);\r\n  const toggleSwitch = () => setIsEnabled(previousState => !previousState);\r\n  return (\r\n    <View style={setting.container}>\r\n      <View style={setting.header}>\r\n        <Text style={setting.title}>Settings</Text>\r\n      </View>\r\n      <View style={setting.content}>\r\n        <Text style={setting.subtitle}>Account</Text>\r\n        <View style={setting.section}>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectiontext}>profile</Text> {/* delete this if it is not used, this is for entering age weight etc */}\r\n          </View>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectiontext}>password</Text>\r\n          </View>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectiontext}>email</Text>\r\n          </View>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectiontext}>notifications</Text>\r\n          </View>\r\n        </View>\r\n        <Text style={setting.subtitle}>Aesthetics</Text>\r\n        {/* <View style={setting.section}>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectiontext}>light mode</Text>\r\n            <Switch\r\n              trackColor={{ false: \"#eee\", true: \"#38b346\" }}\r\n              thumbColor={isEnabled ? \"#ff9933\" : \"#f4f3f4\"}\r\n              ios_backgroundColor=\"#3e3e3e\"\r\n              onValueChange={toggleSwitch}\r\n              value={isEnabled}\r\n            />\r\n          </View>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectiontext}>animations</Text>\r\n          </View>\r\n        </View> */}\r\n      </View>\r\n    </View>\r\n  );\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,OAAT;;;AAEA,gBAAe,YAAM;EACnB,gBAAkCD,QAAQ,CAAC,KAAD,CAA1C;EAAA;EAAA,IAAOE,SAAP;EAAA,IAAkBC,YAAlB;;EACA,IAAMC,YAAY,GAAG,SAAfA,YAAe;IAAA,OAAMD,YAAY,CAAC,UAAAE,aAAa;MAAA,OAAI,CAACA,aAAL;IAAA,CAAd,CAAlB;EAAA,CAArB;;EACA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEJ,OAAO,CAACK,SAArB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEL,OAAO,CAACM,MAArB;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEN,OAAO,CAACO,KAArB;QAAA;MAAA;IADF,EADF,EAIE,MAAC,IAAD;MAAM,KAAK,EAAEP,OAAO,CAACQ,OAArB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAER,OAAO,CAACS,QAArB;QAAA;MAAA,EADF,EAEE,MAAC,IAAD;QAAM,KAAK,EAAET,OAAO,CAACU,OAArB;QAAA,WACE,MAAC,IAAD;UAAM,KAAK,EAAEV,OAAO,CAACW,SAArB;UAAA,WACE,KAAC,IAAD;YAAM,KAAK,EAAEX,OAAO,CAACY,aAArB;YAAA;UAAA,EADF;QAAA,EADF,EAIE,KAAC,IAAD;UAAM,KAAK,EAAEZ,OAAO,CAACW,SAArB;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAEX,OAAO,CAACY,aAArB;YAAA;UAAA;QADF,EAJF,EAOE,KAAC,IAAD;UAAM,KAAK,EAAEZ,OAAO,CAACW,SAArB;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAEX,OAAO,CAACY,aAArB;YAAA;UAAA;QADF,EAPF,EAUE,KAAC,IAAD;UAAM,KAAK,EAAEZ,OAAO,CAACW,SAArB;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAEX,OAAO,CAACY,aAArB;YAAA;UAAA;QADF,EAVF;MAAA,EAFF,EAgBE,KAAC,IAAD;QAAM,KAAK,EAAEZ,OAAO,CAACS,QAArB;QAAA;MAAA,EAhBF;IAAA,EAJF;EAAA,EADF;AAwCD,CA3CD"},"metadata":{},"sourceType":"module"}