{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { general, bloodSugarGraph } from \"./../style/style\";\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function BloodSugarGraph() {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var opacity = 0.5;\n  var bkColor = \"#fff\";\n  return _jsx(View, {\n    children: _jsx(LineChart, {\n      style: bloodSugarGraph,\n      data: {\n        labels: [\"sun\", \"mon\", \"tue\"],\n        datasets: [{\n          data: [Math.random() * 100, Math.random() * 100, Math.random() * 100]\n        }]\n      },\n      width: Dimensions.get(\"window\").width * .75,\n      height: Dimensions.get(\"window\").width * .5,\n      yAxisInterval: 1,\n      chartConfig: {\n        backgroundColor: \"rgba(255, 255, 255, 0)\",\n        backgroundGradientFrom: \"rgba(255, 255, 255, 0)\",\n        backgroundGradientTo: \"rgba(255, 255, 255, 0)\",\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : .9;\n          return \"rgba(0, 0, 0, \" + opacity + \")\";\n        },\n        labelColor: function labelColor() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : .9;\n          return \"rgba(0, 0, 0, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 10\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: \"#fff\"\n        }\n      }\n    })\n  });\n}","map":{"version":3,"names":["general","bloodSugarGraph","LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","StackedBarChart","BloodSugarGraph","sugarData","yHideRatio","defaultMax","opacity","bkColor","labels","datasets","data","Math","random","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions } from 'react-native';\r\nimport { general, bloodSugarGraph } from './../style/style';\r\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph, StackedBarChart } from \"react-native-chart-kit\";\r\n\r\nexport default function BloodSugarGraph() {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n  let opacity = 0.5;\r\n  let bkColor = \"#fff\"\r\n  return (\r\n    <View>\r\n      <LineChart \r\n      style={bloodSugarGraph}\r\n        data={{\r\n          labels: [\"sun\", \"mon\", \"tue\"],\r\n          datasets: [\r\n            {\r\n              data: [\r\n                Math.random() * 100,\r\n                Math.random() * 100,\r\n                Math.random() * 100\r\n              ]\r\n            }\r\n          ]\r\n        }}\r\n        width={Dimensions.get(\"window\").width * .75} // from react-native\r\n        height={Dimensions.get(\"window\").width * .5}\r\n        // yAxisLabel=\"$\"\r\n        // yAxisSuffix=\"k\"\r\n        yAxisInterval={1} // optional, defaults to 1\r\n        chartConfig={{\r\n          backgroundColor: `rgba(255, 255, 255, 0)`,\r\n          backgroundGradientFrom: `rgba(255, 255, 255, 0)`,\r\n          backgroundGradientTo: `rgba(255, 255, 255, 0)`,\r\n          decimalPlaces: 2, // optional, defaults to 2dp\r\n          color: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n          labelColor: (opacity = .9) => `rgba(0, 0, 0, ${opacity})`,\r\n          style: {\r\n            borderRadius: 10,\r\n          },\r\n          propsForDots: {\r\n            r: \"6\",\r\n            strokeWidth: \"2\",\r\n            stroke: \"#fff\"\r\n          }\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}"],"mappings":";AACA,SAASA,OAAT,EAAkBC,eAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,aAAxC,EAAuDC,iBAAvD,EAA0EC,eAA1E,QAAiG,wBAAjG;;AAEA,eAAe,SAASC,eAAT,GAA2B;EACxC,IAAMC,SAAS,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CAAlB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,UAAU,GAAG,GAAjB;EACA,IAAIC,OAAO,GAAG,GAAd;EACA,IAAIC,OAAO,GAAG,MAAd;EACA,OACE,KAAC,IAAD;IAAA,UACE,KAAC,SAAD;MACA,KAAK,EAAEZ,eADP;MAEE,IAAI,EAAE;QACJa,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CADJ;QAEJC,QAAQ,EAAE,CACR;UACEC,IAAI,EAAE,CACJC,IAAI,CAACC,MAAL,KAAgB,GADZ,EAEJD,IAAI,CAACC,MAAL,KAAgB,GAFZ,EAGJD,IAAI,CAACC,MAAL,KAAgB,GAHZ;QADR,CADQ;MAFN,CAFR;MAcE,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,GAd1C;MAeE,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,EAf3C;MAkBE,aAAa,EAAE,CAlBjB;MAmBE,WAAW,EAAE;QACXC,eAAe,0BADJ;QAEXC,sBAAsB,0BAFX;QAGXC,oBAAoB,0BAHT;QAIXC,aAAa,EAAE,CAJJ;QAKXC,KAAK,EAAE;UAAA,IAACd,OAAD,uEAAW,EAAX;UAAA,0BAAmCA,OAAnC;QAAA,CALI;QAMXe,UAAU,EAAE;UAAA,IAACf,OAAD,uEAAW,EAAX;UAAA,0BAAmCA,OAAnC;QAAA,CAND;QAOXgB,KAAK,EAAE;UACLC,YAAY,EAAE;QADT,CAPI;QAUXC,YAAY,EAAE;UACZC,CAAC,EAAE,GADS;UAEZC,WAAW,EAAE,GAFD;UAGZC,MAAM,EAAE;QAHI;MAVH;IAnBf;EADF,EADF;AAwCD"},"metadata":{},"sourceType":"module"}