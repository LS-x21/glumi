{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { setting } from \"../style/style.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isNofEnabled = _useState2[0],\n      setIsNofEnabled = _useState2[1];\n\n  var toggleNofSwitch = function toggleNofSwitch() {\n    setIsNofEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAnimationsEnabled = _useState4[0],\n      setIsAnimationsEnabled = _useState4[1];\n\n  var toggleAnimationsSwitch = function toggleAnimationsSwitch() {\n    setIsAnimationsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDarkEnabled = _useState6[0],\n      setIsDarkEnabled = _useState6[1];\n\n  var toggleDarkSwitch = function toggleDarkSwitch() {\n    setIsDarkEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  return _jsxs(View, {\n    style: setting.container,\n    children: [_jsx(View, {\n      style: setting.header,\n      children: _jsx(Text, {\n        style: setting.title,\n        children: \"Settings\"\n      })\n    }), _jsxs(View, {\n      style: setting.content,\n      children: [_jsx(Text, {\n        style: setting.subtitle,\n        children: \"Account\"\n      }), _jsxs(View, {\n        style: setting.section,\n        children: [_jsx(View, {\n          style: setting.selection,\n          children: _jsx(Text, {\n            style: setting.selectionText,\n            children: \"profile\"\n          })\n        }), _jsx(View, {\n          style: setting.selection,\n          children: _jsx(Text, {\n            style: setting.selectionText,\n            children: \"password\"\n          })\n        }), _jsx(View, {\n          style: setting.selection,\n          children: _jsx(Text, {\n            style: setting.selectionText,\n            children: \"email\"\n          })\n        }), _jsxs(View, {\n          style: setting.selection,\n          children: [_jsx(Text, {\n            style: setting.selectionText,\n            children: \"notifications\"\n          }), _jsx(Switch, {\n            style: [setting.switchNotifications, setting.switch],\n            trackColor: {\n              false: \"#ddd\",\n              true: \"#38b346\"\n            },\n            thumbColor: isNofEnabled ? \"#ddd\" : \"#38b346\",\n            activeThumbColor: \"#ddd\",\n            onValueChange: toggleNofSwitch,\n            value: isNofEnabled\n          })]\n        })]\n      }), _jsx(Text, {\n        style: setting.subtitle,\n        children: \"Aesthetics\"\n      }), _jsxs(View, {\n        style: setting.section,\n        children: [_jsxs(View, {\n          style: setting.selection,\n          children: [_jsx(Text, {\n            style: setting.selectionText,\n            children: \"light mode\"\n          }), _jsx(Switch, {\n            style: [setting.switchTheme, setting.switch],\n            trackColor: {\n              false: \"#333\",\n              true: \"#333\"\n            },\n            thumbColor: isDarkEnabled ? \"#333\" : \"#333\",\n            activeThumbColor: \"#ddd\",\n            onValueChange: toggleDarkSwitch,\n            value: isDarkEnabled\n          })]\n        }), _jsxs(View, {\n          style: setting.selection,\n          children: [_jsx(Text, {\n            style: setting.selectionText,\n            children: \"animations\"\n          }), _jsx(Switch, {\n            style: [setting.switchAnimations, setting.switch],\n            trackColor: {\n              false: \"#ddd\",\n              true: \"#38b346\"\n            },\n            thumbColor: isAnimationsEnabled ? \"#ddd\" : \"#38b346\",\n            activeThumbColor: \"#ddd\",\n            onValueChange: toggleAnimationsSwitch,\n            value: isAnimationsEnabled\n          })]\n        })]\n      })]\n    })]\n  });\n});","map":{"version":3,"names":["React","useState","setting","isNofEnabled","setIsNofEnabled","toggleNofSwitch","previousState","isAnimationsEnabled","setIsAnimationsEnabled","toggleAnimationsSwitch","isDarkEnabled","setIsDarkEnabled","toggleDarkSwitch","container","header","title","content","subtitle","section","selection","selectionText","switchNotifications","switch","false","true","switchTheme","switchAnimations"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/Settings.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, Switch } from 'react-native';\r\nimport { setting } from '../style/style.js';\r\n\r\nexport default () => {\r\n  const [isNofEnabled, setIsNofEnabled] = useState(false);\r\n  const toggleNofSwitch = () => {\r\n    setIsNofEnabled(previousState => !previousState)\r\n  };\r\n  const [isAnimationsEnabled, setIsAnimationsEnabled] = useState(false);\r\n  const toggleAnimationsSwitch = () => {\r\n    setIsAnimationsEnabled(previousState => !previousState)\r\n  };\r\n  const [isDarkEnabled, setIsDarkEnabled] = useState(false);\r\n  const toggleDarkSwitch = () => {\r\n    setIsDarkEnabled(previousState => !previousState)\r\n  };\r\n  return (\r\n    <View style={setting.container}>\r\n      <View style={setting.header}>\r\n        <Text style={setting.title}>Settings</Text>\r\n      </View>\r\n      <View style={setting.content}>\r\n        <Text style={setting.subtitle}>Account</Text>\r\n        <View style={setting.section}>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectionText}>profile</Text>\r\n          </View>\r\n          {/* delete this if it is not used, this is for entering age weight etc */}\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectionText}>password</Text>\r\n          </View>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectionText}>email</Text>\r\n          </View>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectionText}>notifications</Text>\r\n            <Switch style={[setting.switchNotifications, setting.switch]}\r\n              trackColor={{ false: \"#ddd\", true: \"#38b346\" }}\r\n              thumbColor={isNofEnabled ? \"#ddd\" : \"#38b346\"}\r\n              activeThumbColor={\"#ddd\"}\r\n              onValueChange={toggleNofSwitch}\r\n              value={isNofEnabled}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Text style={setting.subtitle}>Aesthetics</Text>\r\n        <View style={setting.section}>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectionText}>light mode</Text>\r\n            <Switch style={[setting.switchTheme, setting.switch]}\r\n              trackColor={{ false: \"#333\", true: \"#333\" }}\r\n              thumbColor={isDarkEnabled ? \"#333\" : \"#333\"}\r\n              activeThumbColor={\"#ddd\"}\r\n              onValueChange={toggleDarkSwitch}\r\n              value={isDarkEnabled}\r\n            />\r\n          </View>\r\n          <View style={setting.selection}>\r\n            <Text style={setting.selectionText}>animations</Text>\r\n            <Switch style={[setting.switchAnimations, setting.switch]}\r\n              trackColor={{ false: \"#ddd\", true: \"#38b346\" }}\r\n              thumbColor={isAnimationsEnabled ? \"#ddd\" : \"#38b346\"}\r\n              activeThumbColor={\"#ddd\"}\r\n              onValueChange={toggleAnimationsSwitch}\r\n              value={isAnimationsEnabled}\r\n            />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}