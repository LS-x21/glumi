{"ast":null,"code":"import { maxIndex, style } from 'd3';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ArrowSVG from \"../assets/ArrowSVG.js\";\nimport * as d3 from 'd3';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function (props) {\n  var vw = Dimensions.get(\"window\").width;\n  var systolicScale = d3.scaleLinear().domain([90, 140]).range([0, vw * .4]).clamp(true);\n  var diastolicScale = d3.scaleLinear().domain([60, 90]).range([0, vw * .4]).clamp(true);\n  var offsetSystolic = systolicScale(props.data.systolic);\n  var offsetDiastolic = diastolicScale(props.data.diastolic);\n  var min = Math.min(offsetSystolic, offsetDiastolic);\n  var max = Math.max(offsetSystolic, offsetDiastolic);\n  var offset = max;\n  console.log(max);\n  console.log(min);\n\n  if (min < vw * .4 / 2) {\n    offset = max;\n  }\n\n  console.log(vw * .4);\n  var style = StyleSheet.create({\n    heading: {\n      fontSize: vw * .04,\n      color: \"#000\",\n      fontFamily: \"BalooTamma2-SemiBold\"\n    },\n    subtitle: {\n      color: \"#000\",\n      fontFamily: \"BalooTamma2-Medium\",\n      fontSize: vw * .035\n    },\n    text: {\n      color: \"#000\",\n      fontFamily: \"Comfortaa-Regular\",\n      fontSize: vw * .03\n    },\n    scaleContainer: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    scaleSpacer: {\n      width: vw * .05\n    },\n    arrowContainer: {\n      flexDirection: \"row\",\n      position: \"absolute\",\n      top: offset\n    },\n    scale: {\n      width: vw * .04,\n      height: vw * .4,\n      borderRadius: vw * .04\n    }\n  });\n  return _jsx(View, {\n    style: style.container,\n    children: _jsxs(View, {\n      style: style.headingContainer,\n      children: [_jsx(Text, {\n        style: style.heading,\n        children: \"Jan 1\"\n      }), _jsx(View, {\n        style: style.headingData,\n        children: _jsx(Text, {\n          style: style.subtitle,\n          children: \"Blood Pressure: \"\n        })\n      }), _jsxs(View, {\n        style: style.scaleContainer,\n        children: [_jsx(LinearGradient, {\n          style: style.scale,\n          colors: ['#E24D50', '#38B346', \"#3399FF\"],\n          start: {\n            x: 0,\n            y: 0\n          },\n          end: {\n            x: 1,\n            y: 1\n          },\n          locations: [0, 0.5, 1]\n        }), _jsxs(View, {\n          style: style.arrowContainer,\n          children: [_jsx(View, {\n            style: style.scaleSpacer\n          }), _jsx(ArrowSVG, {\n            style: {\n              transform: [{\n                rotate: '90deg'\n              }]\n            },\n            width: vw * .04\n          }), _jsxs(Text, {\n            style: style.text,\n            children: [\" \", props.data.systolic + \"/\" + props.data.diastolic, '\\n', \"mmHg\"]\n          })]\n        })]\n      })]\n    })\n  });\n});","map":{"version":3,"names":["maxIndex","style","LinearGradient","ArrowSVG","d3","props","vw","Dimensions","get","width","systolicScale","scaleLinear","domain","range","clamp","diastolicScale","offsetSystolic","data","systolic","offsetDiastolic","diastolic","min","Math","max","offset","console","log","StyleSheet","create","heading","fontSize","color","fontFamily","subtitle","text","scaleContainer","flex","justifyContent","scaleSpacer","arrowContainer","flexDirection","position","top","scale","height","borderRadius","container","headingContainer","headingData","x","y","transform","rotate"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodPressureGraph.js"],"sourcesContent":["import { maxIndex, style } from 'd3';\r\nimport { Text, View, StyleSheet, Dimensions } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport ArrowSVG from '../assets/ArrowSVG.js';\r\nimport * as d3 from 'd3';\r\n\r\nexport default (props) => {\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  const systolicScale = d3.scaleLinear()\r\n    .domain([90, 140])\r\n    .range([0, vw * .4])\r\n    .clamp(true)\r\n\r\n  const diastolicScale = d3.scaleLinear()\r\n    .domain([60, 90])\r\n    .range([0, vw * .4])\r\n    .clamp(true)\r\n\r\n  const offsetSystolic = systolicScale(props.data.systolic);\r\n  const offsetDiastolic = diastolicScale(props.data.diastolic);\r\n\r\n  const min = Math.min(offsetSystolic, offsetDiastolic);\r\n  const max = Math.max(offsetSystolic, offsetDiastolic);\r\n  let offset = max;\r\n\r\n\r\n  console.log(max);\r\n  console.log(min);\r\n  if (min < ((vw * .4) / 2)) {\r\n    offset = max;\r\n  }\r\n  console.log(vw * .4)\r\n\r\n  const style = StyleSheet.create({\r\n    heading: {\r\n      fontSize: vw * .04,\r\n      color: \"#000\",\r\n      fontFamily: \"BalooTamma2-SemiBold\"\r\n    },\r\n\r\n    subtitle: {\r\n      color: \"#000\",\r\n      fontFamily: \"BalooTamma2-Medium\",\r\n      fontSize: vw * .035,\r\n    },\r\n\r\n    text: {\r\n      color: \"#000\",\r\n      fontFamily: \"Comfortaa-Regular\",\r\n      fontSize: vw * .03,\r\n    },\r\n\r\n    scaleContainer: {\r\n      flex: 1,\r\n      justifyContent: \"center\"\r\n    },\r\n\r\n    scaleSpacer: {\r\n      width: vw * .05,\r\n    },\r\n\r\n    arrowContainer: {\r\n      flexDirection: \"row\",\r\n      position: \"absolute\",\r\n      top: offset,\r\n    },\r\n\r\n    scale: {\r\n      width: vw * .04,\r\n      height: vw * .4,\r\n      borderRadius: vw * .04,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <View style={style.container}>\r\n      <View style={style.headingContainer}>\r\n        <Text style={style.heading}>Jan 1</Text>\r\n        <View style={style.headingData}>\r\n          <Text style={style.subtitle}>Blood Pressure: </Text>\r\n        </View>\r\n        <View style={style.scaleContainer}>\r\n          <LinearGradient\r\n            style={style.scale}\r\n            colors={['#E24D50', '#38B346', \"#3399FF\"]}\r\n            start={{ x: 0, y: 0 }}\r\n            end={{ x: 1, y: 1 }}\r\n            locations={[0, 0.5, 1]}\r\n          />\r\n          <View style={style.arrowContainer}>\r\n            <View style={style.scaleSpacer} />\r\n            <ArrowSVG\r\n              style={{\r\n                transform: [{ rotate: '90deg' }]\r\n              }}\r\n              width={vw * .04} />\r\n            <Text style={style.text}> {props.data.systolic + \"/\" + props.data.diastolic}{'\\n'}mmHg</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,IAAhC;;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,QAAP;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,gBAAe,UAACC,KAAD,EAAW;EACxB,IAAMC,EAAE,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAApC;EAEA,IAAMC,aAAa,GAAGN,EAAE,CAACO,WAAH,GACnBC,MADmB,CACZ,CAAC,EAAD,EAAK,GAAL,CADY,EAEnBC,KAFmB,CAEb,CAAC,CAAD,EAAIP,EAAE,GAAG,EAAT,CAFa,EAGnBQ,KAHmB,CAGb,IAHa,CAAtB;EAKA,IAAMC,cAAc,GAAGX,EAAE,CAACO,WAAH,GACpBC,MADoB,CACb,CAAC,EAAD,EAAK,EAAL,CADa,EAEpBC,KAFoB,CAEd,CAAC,CAAD,EAAIP,EAAE,GAAG,EAAT,CAFc,EAGpBQ,KAHoB,CAGd,IAHc,CAAvB;EAKA,IAAME,cAAc,GAAGN,aAAa,CAACL,KAAK,CAACY,IAAN,CAAWC,QAAZ,CAApC;EACA,IAAMC,eAAe,GAAGJ,cAAc,CAACV,KAAK,CAACY,IAAN,CAAWG,SAAZ,CAAtC;EAEA,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASL,cAAT,EAAyBG,eAAzB,CAAZ;EACA,IAAMI,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASP,cAAT,EAAyBG,eAAzB,CAAZ;EACA,IAAIK,MAAM,GAAGD,GAAb;EAGAE,OAAO,CAACC,GAAR,CAAYH,GAAZ;EACAE,OAAO,CAACC,GAAR,CAAYL,GAAZ;;EACA,IAAIA,GAAG,GAAKf,EAAE,GAAG,EAAN,GAAY,CAAvB,EAA2B;IACzBkB,MAAM,GAAGD,GAAT;EACD;;EACDE,OAAO,CAACC,GAAR,CAAYpB,EAAE,GAAG,EAAjB;EAEA,IAAML,KAAK,GAAG0B,UAAU,CAACC,MAAX,CAAkB;IAC9BC,OAAO,EAAE;MACPC,QAAQ,EAAExB,EAAE,GAAG,GADR;MAEPyB,KAAK,EAAE,MAFA;MAGPC,UAAU,EAAE;IAHL,CADqB;IAO9BC,QAAQ,EAAE;MACRF,KAAK,EAAE,MADC;MAERC,UAAU,EAAE,oBAFJ;MAGRF,QAAQ,EAAExB,EAAE,GAAG;IAHP,CAPoB;IAa9B4B,IAAI,EAAE;MACJH,KAAK,EAAE,MADH;MAEJC,UAAU,EAAE,mBAFR;MAGJF,QAAQ,EAAExB,EAAE,GAAG;IAHX,CAbwB;IAmB9B6B,cAAc,EAAE;MACdC,IAAI,EAAE,CADQ;MAEdC,cAAc,EAAE;IAFF,CAnBc;IAwB9BC,WAAW,EAAE;MACX7B,KAAK,EAAEH,EAAE,GAAG;IADD,CAxBiB;IA4B9BiC,cAAc,EAAE;MACdC,aAAa,EAAE,KADD;MAEdC,QAAQ,EAAE,UAFI;MAGdC,GAAG,EAAElB;IAHS,CA5Bc;IAkC9BmB,KAAK,EAAE;MACLlC,KAAK,EAAEH,EAAE,GAAG,GADP;MAELsC,MAAM,EAAEtC,EAAE,GAAG,EAFR;MAGLuC,YAAY,EAAEvC,EAAE,GAAG;IAHd;EAlCuB,CAAlB,CAAd;EAyCA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEL,KAAK,CAAC6C,SAAnB;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAE7C,KAAK,CAAC8C,gBAAnB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAE9C,KAAK,CAAC4B,OAAnB;QAAA;MAAA,EADF,EAEE,KAAC,IAAD;QAAM,KAAK,EAAE5B,KAAK,CAAC+C,WAAnB;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAE/C,KAAK,CAACgC,QAAnB;UAAA;QAAA;MADF,EAFF,EAKE,MAAC,IAAD;QAAM,KAAK,EAAEhC,KAAK,CAACkC,cAAnB;QAAA,WACE,KAAC,cAAD;UACE,KAAK,EAAElC,KAAK,CAAC0C,KADf;UAEE,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAFV;UAGE,KAAK,EAAE;YAAEM,CAAC,EAAE,CAAL;YAAQC,CAAC,EAAE;UAAX,CAHT;UAIE,GAAG,EAAE;YAAED,CAAC,EAAE,CAAL;YAAQC,CAAC,EAAE;UAAX,CAJP;UAKE,SAAS,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT;QALb,EADF,EAQE,MAAC,IAAD;UAAM,KAAK,EAAEjD,KAAK,CAACsC,cAAnB;UAAA,WACE,KAAC,IAAD;YAAM,KAAK,EAAEtC,KAAK,CAACqC;UAAnB,EADF,EAEE,KAAC,QAAD;YACE,KAAK,EAAE;cACLa,SAAS,EAAE,CAAC;gBAAEC,MAAM,EAAE;cAAV,CAAD;YADN,CADT;YAIE,KAAK,EAAE9C,EAAE,GAAG;UAJd,EAFF,EAOE,MAAC,IAAD;YAAM,KAAK,EAAEL,KAAK,CAACiC,IAAnB;YAAA,gBAA2B7B,KAAK,CAACY,IAAN,CAAWC,QAAX,GAAsB,GAAtB,GAA4Bb,KAAK,CAACY,IAAN,CAAWG,SAAlE,EAA6E,IAA7E;UAAA,EAPF;QAAA,EARF;MAAA,EALF;IAAA;EADF,EADF;AA4BD,CAjGD"},"metadata":{},"sourceType":"module"}