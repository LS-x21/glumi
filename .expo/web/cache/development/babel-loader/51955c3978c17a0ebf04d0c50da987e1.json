{"ast":null,"code":"import { authen, database, updateDataFire } from \"../Firebase\";\nimport { getDatabase, ref, onValue, onChildAdded } from \"firebase/database\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nvar userID = 0;\nvar dataBreathRef = ref(database, 'users/' + userID + '/data/Breathanalyzer/');\n\nfunction wrapListener() {\n  onChildAdded(dataBreathRef, function (data) {\n    +console.log(\"Child added\");\n    AceData.push({\n      date: data.key,\n      value: data.val()\n    });\n    console.log(AceData);\n    console.log(\"break\");\n  });\n}\n\nonAuthStateChanged(authen, function (user) {\n  if (user != null) {\n    userID = user.uid;\n  }\n\n  console.log(userID);\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Breathanalyzer/\");\n  wrapListener();\n});\nexport var AceData = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100)\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100)\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100)\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100)\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100)\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100)\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 100)\n}];\nexport var GulData = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 25) + 70\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 25) + 70\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 25) + 70\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 25) + 70\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 25) + 70\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 25) + 70\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 25) + 70\n}];\nexport var FoodData = [{\n  date: \"2022-02-01T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-02T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-03T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-04T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-05T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-06T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}, {\n  date: \"2022-02-07T05:00:00.000Z\",\n  value: Math.floor(Math.random() * 1000)\n}];","map":{"version":3,"names":["authen","database","updateDataFire","getDatabase","ref","onValue","onChildAdded","onAuthStateChanged","userID","dataBreathRef","wrapListener","data","console","log","AceData","push","date","key","value","val","user","uid","Math","floor","random","GulData","FoodData"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/Data.js"],"sourcesContent":["import { authen, database, updateDataFire } from \"../Firebase\";\r\nimport { getDatabase, ref, onValue, onChildAdded } from \"firebase/database\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\n\r\n// export const Data = [\r\n//   { date: '2022-02-01T05:00:00.000Z', value: 250 },\r\n//   { date: '2022-02-02T05:00:00.000Z', value: 300.35 },\r\n//   { date: '2022-02-03T05:00:00.000Z', value: 150.84 },\r\n//   { date: '2022-02-04T05:00:00.000Z', value: 500.92 },\r\n//   { date: '2022-02-05T05:00:00.000Z', value: 200.8 },\r\n//   { date: '2022-02-06T05:00:00.000Z', value: 150.47 },\r\n//   { date: '2022-02-07T05:00:00.000Z', value: 100.47 },\r\n// ]; 26th, 2\r\n\r\nlet userID = 0;\r\n\r\nlet dataBreathRef = ref(database, 'users/' + userID + '/data/Breathanalyzer/');\r\nfunction wrapListener(){\r\n\r\n  onChildAdded(dataBreathRef, (data) => {+\r\n    console.log(\"Child added\");\r\n    AceData.push({date: data.key, value: data.val()});\r\n    console.log(AceData);\r\n    console.log(\"break\");\r\n  });\r\n}\r\n\r\nonAuthStateChanged(authen, (user) => {\r\n  if(user != null) {\r\n    userID = user.uid;\r\n  }\r\n  console.log(userID);\r\n  dataBreathRef = ref(database, \"/users/\" + userID + \"/data/Breathanalyzer/\");\r\n  wrapListener();\r\n});\r\n\r\n\r\nexport const AceData = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", value: Math.floor(Math.random() * 100) },\r\n  { date: \"2022-02-02T05:00:00.000Z\", value: Math.floor(Math.random() * 100) },\r\n  { date: \"2022-02-03T05:00:00.000Z\", value: Math.floor(Math.random() * 100) },\r\n  { date: \"2022-02-04T05:00:00.000Z\", value: Math.floor(Math.random() * 100) },\r\n  { date: \"2022-02-05T05:00:00.000Z\", value: Math.floor(Math.random() * 100) },\r\n  { date: \"2022-02-06T05:00:00.000Z\", value: Math.floor(Math.random() * 100) },\r\n  { date: \"2022-02-07T05:00:00.000Z\", value: Math.floor(Math.random() * 100) },\r\n];\r\n\r\nexport const GulData = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", value: Math.floor(Math.random() * 25) + 70 },\r\n  { date: \"2022-02-02T05:00:00.000Z\", value: Math.floor(Math.random() * 25) + 70 },\r\n  { date: \"2022-02-03T05:00:00.000Z\", value: Math.floor(Math.random() * 25) + 70 },\r\n  { date: \"2022-02-04T05:00:00.000Z\", value: Math.floor(Math.random() * 25) + 70 },\r\n  { date: \"2022-02-05T05:00:00.000Z\", value: Math.floor(Math.random() * 25) + 70 },\r\n  { date: \"2022-02-06T05:00:00.000Z\", value: Math.floor(Math.random() * 25) + 70 },\r\n  { date: \"2022-02-07T05:00:00.000Z\", value: Math.floor(Math.random() * 25) + 70 },\r\n];\r\n\r\nexport const FoodData = [\r\n  { date: \"2022-02-01T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-02T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-03T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-04T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-05T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-06T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n  { date: \"2022-02-07T05:00:00.000Z\", value: Math.floor(Math.random() * 1000) },\r\n];\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}