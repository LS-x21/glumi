{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { bloodSugarGraph } from \"../style/style\";\nimport Svg, { Path } from 'react-native-svg';\nimport { parseISO } from 'date-fns';\nimport * as d3 from 'd3';\nimport { Data } from \"./Data.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var sugarData = [95, 99, 112];\n  var yHideRatio = 0.8;\n  var defaultMax = 250;\n  var vw = Dimensions.get(\"window\").width;\n\n  var makeLine = function makeLine(d) {\n    for (var i = 0; i < d.length; i++) {\n      d[i][0] = parseISO(Data[i][0]);\n    }\n\n    var width = vw * .65;\n    var height = width;\n    var margin = {\n      top: vw * .1,\n      bottom: vw * .1,\n      left: vw * .06,\n      right: vw * .1\n    };\n    var xAxis = d3.scaleLinear().domain([new Date(d[0][0]), new Date(d[d.length - 1][0])]).range([margin.left, width - margin.right]);\n    var yAxis = d3.scaleLinear().domain(d3.extent(d.map(function (i) {\n      return i[1];\n    }))).range([height - margin.bottom, margin.top]);\n    var line = d3.line().x(function (i) {\n      return xAxis(i[0]);\n    }).y(function (i) {\n      return yAxis(i[1]);\n    });\n    var graph = line(Data);\n    var html = [];\n    yAxis.ticks().reverse().forEach(function (i) {\n      html.push(_jsx(Text, {\n        style: bloodSugarGraph.yLabel,\n        children: i\n      }, i));\n    });\n    return;\n  };\n\n  return _jsxs(View, {\n    style: bloodSugarGraph.container,\n    children: [_jsxs(View, {\n      style: bloodSugarGraph.content,\n      children: [_jsx(View, {\n        style: bloodSugarGraph.unitContainer,\n        children: _jsx(Text, {\n          style: [bloodSugarGraph.unit, {\n            transform: [{\n              rotate: '270deg'\n            }]\n          }],\n          children: \"ppm\"\n        })\n      }), _jsx(View, {\n        style: bloodSugarGraph.labelContainer,\n        children: html\n      }), _jsx(Svg, {\n        width: width,\n        height: height,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: _jsx(Path, {\n          fill: \"none\",\n          stroke: \"#ff9933\",\n          strokeWidth: vw * .015,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          d: graph\n        })\n      })]\n    }), _jsx(View, {\n      style: bloodSugarGraph.xLabelContainer,\n      children: _jsx(Text, {\n        style: bloodSugarGraph.xLabel,\n        children: \"Acetone Levels\"\n      })\n    })]\n  });\n});","map":{"version":3,"names":["bloodSugarGraph","Svg","Path","parseISO","d3","Data","sugarData","yHideRatio","defaultMax","vw","Dimensions","get","width","makeLine","d","i","length","height","margin","top","bottom","left","right","xAxis","scaleLinear","domain","Date","range","yAxis","extent","map","line","x","y","graph","html","ticks","reverse","forEach","push","yLabel","container","content","unitContainer","unit","transform","rotate","labelContainer","xLabelContainer","xLabel"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/BloodSugarGraph.js"],"sourcesContent":["import { Dimensions, View, Text } from 'react-native';\r\nimport { bloodSugarGraph } from '../style/style';\r\nimport Svg, { Path } from 'react-native-svg';\r\nimport { parseISO } from 'date-fns'\r\nimport * as d3 from 'd3';\r\nimport { Data } from './Data.js';\r\n\r\nexport default () => {\r\n  const sugarData = [95, 99, 112];\r\n  let yHideRatio = 0.8;\r\n  let defaultMax = 250;\r\n\r\n  const vw = Dimensions.get(\"window\").width;\r\n\r\n  const makeLine = (d) => {\r\n    for (let i = 0; i < d.length; i++) {\r\n      d[i][0] = parseISO(Data[i][0]);\r\n    }\r\n    const width = vw * .65;\r\n    const height = width;\r\n    const margin = {\r\n      top: vw * .1,\r\n      bottom: vw * .1,\r\n      left: vw * .06,\r\n      right: vw * .1,\r\n    }\r\n    const xAxis = d3.scaleLinear()\r\n      .domain([new Date(d[0][0]), new Date(d[d.length - 1][0])])\r\n      .range([margin.left, width - margin.right]);\r\n\r\n    const yAxis = d3.scaleLinear()\r\n      .domain(d3.extent(d.map((i) => i[1])))\r\n      .range([height - margin.bottom, margin.top]);\r\n\r\n    const line = d3.line()\r\n      .x(i => xAxis(i[0]))\r\n      .y(i => yAxis(i[1]))\r\n    let graph = line(Data);\r\n    let html = [];\r\n\r\n    yAxis.ticks().reverse().forEach((i) => {\r\n      html.push(<Text key={i} style={bloodSugarGraph.yLabel}>{i}</Text>)\r\n    });\r\n\r\n    return\r\n  }\r\n\r\n  return (\r\n    <View style={bloodSugarGraph.container}>\r\n      <View style={bloodSugarGraph.content}>\r\n        <View style={bloodSugarGraph.unitContainer}>\r\n          <Text style={[bloodSugarGraph.unit,\r\n          {\r\n            transform: [{ rotate: '270deg' }]\r\n          }]}>\r\n            ppm</Text>\r\n        </View>\r\n        <View style={bloodSugarGraph.labelContainer}>\r\n          {html}\r\n        </View>\r\n        <Svg\r\n          width={width}\r\n          height={height}\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <Path\r\n            fill=\"none\"\r\n            // stroke=\"#ff7e40\"\r\n            stroke=\"#ff9933\"\r\n            // stroke=\"#66cc99\"\r\n            strokeWidth={vw * .015}\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d={graph}\r\n          />\r\n        </Svg>\r\n      </View>\r\n      <View style={bloodSugarGraph.xLabelContainer}>\r\n        <Text style={bloodSugarGraph.xLabel}>Acetone Levels</Text>\r\n      </View>\r\n    </View>\r\n\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}