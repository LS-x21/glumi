{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { logEvent } from \"../style/style.js\";\nimport AddSVG from \"../assets/AddSVG.js\";\nimport EditSVG from \"../assets/EditSVG.js\";\nimport { Data, Data2, Data3, Data4 } from \"./Data.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  console.log(new Date(Data[6].date).toLocaleString('en-US', {\n    month: \"short\"\n  }) + \" \" + new Date(Data[6].date).getDay());\n  console.log(Data);\n\n  var formatData = function formatData(d) {\n    var formatedData = [];\n    var sortData = d.sort(function (x, y) {\n      return Number(new Date(x.date)) - Number(new Date(y.date));\n    });\n    console.log(sortData.length);\n    var a = [];\n    var temp = sortData[0];\n\n    for (var i = 0; i < sortData.length; i++) {\n      var iDate = new Date(sortData[i].date);\n      var tempDate = new Date(temp.date);\n\n      if (iDate.getFullYear() == tempDate.getFullYear() && iDate.getMonth() == tempDate.getMonth() && iDate.getDate() == tempDate.getDate()) {\n        a.push(sortData[i]);\n      } else {\n        formatedData.push(a);\n        temp = sortData[i];\n        a = [sortData[i]];\n      }\n    }\n\n    formatedData.push(a);\n    return formatedData;\n  };\n\n  var padDate = function padDate(d) {\n    if (d < 10) {\n      return \"0\" + d;\n    } else {\n      return d;\n    }\n  };\n\n  var dataSet = function dataSet(d, index, title) {\n    var key = title + index;\n    console.log(key);\n    var date = new Date(d[0].date);\n    return _jsx(ScrollView, {\n      style: logEvent.data,\n      vertical: true,\n      showsHorizontalScrollIndicator: false,\n      scrollEventThrottle: 200,\n      decelerationRate: \"fast\",\n      pagingEnabled: true\n    }, key);\n  };\n\n  return _jsxs(View, {\n    style: logEvent.container,\n    children: [_jsx(View, {\n      style: logEvent.backgroundElement1\n    }), _jsx(View, {\n      style: logEvent.backgroundElement2\n    }), _jsx(View, {\n      style: logEvent.header,\n      children: _jsx(Text, {\n        style: logEvent.title,\n        children: \"Your Current Data\"\n      })\n    }), _jsxs(ScrollView, {\n      style: logEvent.content,\n      children: [_jsx(View, {\n        style: logEvent.heading,\n        children: _jsx(Text, {\n          style: logEvent.headingText,\n          children: \"Breathanalyzer Data\"\n        })\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        scrollEventThrottle: 200,\n        decelerationRate: \"fast\",\n        pagingEnabled: true,\n        children: formatData(Data).map(function (i, index) {\n          return dataSet(i, index, \"acetone\");\n        })\n      }), _jsx(View, {\n        style: logEvent.heading,\n        children: _jsx(Text, {\n          style: logEvent.headingText,\n          children: \"Glucometer Data\"\n        })\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        scrollEventThrottle: 200,\n        decelerationRate: \"fast\",\n        pagingEnabled: true,\n        children: formatData(Data2).map(function (i, index) {\n          return dataSet(i, index, \"gluco\");\n        })\n      }), _jsx(View, {\n        style: logEvent.heading,\n        children: _jsx(Text, {\n          style: logEvent.headingText,\n          children: \"Sugar Intaked\"\n        })\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        scrollEventThrottle: 200,\n        decelerationRate: \"fast\",\n        pagingEnabled: true,\n        children: formatData(Data3).map(function (i, index) {\n          return dataSet(i, index, \"sugar\");\n        })\n      }), _jsx(View, {\n        style: logEvent.spacer\n      })]\n    })]\n  });\n});","map":{"version":3,"names":["logEvent","AddSVG","EditSVG","Data","Data2","Data3","Data4","console","log","Date","date","toLocaleString","month","getDay","formatData","d","formatedData","sortData","sort","x","y","Number","length","a","temp","i","iDate","tempDate","getFullYear","getMonth","getDate","push","padDate","dataSet","index","title","key","data","container","backgroundElement1","backgroundElement2","header","content","heading","headingText","map","spacer"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/LogEvent.js"],"sourcesContent":["import { Text, View, ScrollView, Dimensions, Image, SafeAreaView } from 'react-native';\r\nimport { logEvent } from '../style/style.js';\r\nimport AddSVG from '../assets/AddSVG.js';\r\nimport EditSVG from '../assets/EditSVG.js';\r\nimport { Data, Data2, Data3, Data4 } from './Data.js';\r\n\r\nexport default () => {\r\n  console.log(new Date(Data[6].date).toLocaleString('en-US', { month: \"short\" }) + \" \" + new Date(Data[6].date).getDay());\r\n\r\n  console.log(Data);\r\n  const formatData = (d) => {\r\n    let formatedData = [];\r\n    const sortData = d.sort(\r\n      (x, y) => Number(new Date(x.date)) - Number(new Date(y.date)),\r\n    );\r\n    console.log(sortData.length);\r\n    let a = [];\r\n    let temp = sortData[0];\r\n    for (let i = 0; i < sortData.length; i++) {\r\n      let iDate = new Date(sortData[i].date);\r\n      let tempDate = new Date(temp.date);\r\n      if (\r\n        iDate.getFullYear() == tempDate.getFullYear()\r\n        && iDate.getMonth() == tempDate.getMonth()\r\n        && iDate.getDate() == tempDate.getDate()\r\n      ) {\r\n        a.push(sortData[i]);\r\n      } else {\r\n        formatedData.push(a);\r\n        temp = sortData[i];\r\n        a = [sortData[i]];\r\n      }\r\n    }\r\n    formatedData.push(a);\r\n    return formatedData\r\n  }\r\n\r\n  const padDate = (d) => {\r\n    if (d < 10) {\r\n      return \"0\" + d;\r\n    } else {\r\n      return d;\r\n    }\r\n  }\r\n  // let x = new Date(i.date).toLocaleString('en-US', { month: \"short\" }) + \" \" + new Date(i.date).getDate()\r\n\r\n  const dataSet = (d, index, title) => {\r\n    let key = title + index;\r\n    console.log(key);\r\n    let date = new Date(d[0].date);\r\n    return (\r\n\r\n      <ScrollView\r\n        key={key}\r\n        style={logEvent.data}\r\n        vertical={true}\r\n        showsHorizontalScrollIndicator={false}\r\n        scrollEventThrottle={200}\r\n        decelerationRate=\"fast\"\r\n        pagingEnabled\r\n      >\r\n        {/* <View style={[logEvent.dataElement, logEvent.leader]}>\r\n            <Text style={logEvent.leaderText}>time</Text>\r\n            <Text style={logEvent.leaderText}>data</Text>\r\n            <Text style={logEvent.leaderText}>edit</Text>\r\n          </View> */}\r\n        {/* {\r\n            d.map((i, index) =>\r\n              <View style={\r\n                [logEvent.dataElement, logEvent.first]}\r\n                key={\"d\" + index}\r\n              >\r\n                <Text style={logEvent.dataText}>\r\n                  {padDate(new Date(i.date).getHours()) + \":\" + padDate(new Date(i.date).getMinutes())}\r\n                </Text>\r\n                <Text style={logEvent.dataText}>{i.value}</Text>\r\n                <View style={logEvent.iconContainer}>\r\n                  <EditSVG />\r\n                </View>\r\n              </View>\r\n            )\r\n          } */}\r\n        {/* <View style={logEvent.add}>\r\n            <AddSVG style={logEvent.icon} />\r\n          </View>\r\n          <View style={logEvent.filler} /> */}\r\n      </ScrollView>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={logEvent.container}>\r\n      <View style={logEvent.backgroundElement1} />\r\n      <View style={logEvent.backgroundElement2} />\r\n      <View style={logEvent.header}>\r\n        <Text style={logEvent.title}>Your Current Data</Text>\r\n      </View>\r\n      <ScrollView style={logEvent.content}>\r\n        <View style={logEvent.heading}>\r\n          <Text style={logEvent.headingText}>Breathanalyzer Data</Text>\r\n        </View>\r\n        <ScrollView\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          scrollEventThrottle={200}\r\n          decelerationRate=\"fast\"\r\n          pagingEnabled\r\n        >\r\n          {\r\n            formatData(Data).map((i, index) =>\r\n              dataSet(i, index, \"acetone\")\r\n            )\r\n          }\r\n        </ScrollView>\r\n        <View style={logEvent.heading}>\r\n          <Text style={logEvent.headingText}>Glucometer Data</Text>\r\n        </View>\r\n        <ScrollView\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          scrollEventThrottle={200}\r\n          decelerationRate=\"fast\"\r\n          pagingEnabled\r\n        >\r\n          {\r\n            formatData(Data2).map((i, index) =>\r\n              dataSet(i, index, \"gluco\")\r\n            )\r\n          }\r\n        </ScrollView>\r\n        <View style={logEvent.heading}>\r\n          <Text style={logEvent.headingText}>Sugar Intaked</Text>\r\n        </View>\r\n        <ScrollView\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          scrollEventThrottle={200}\r\n          decelerationRate=\"fast\"\r\n          pagingEnabled\r\n        >\r\n          {\r\n            formatData(Data3).map((i, index) =>\r\n              dataSet(i, index, \"sugar\")\r\n            )\r\n          }\r\n        </ScrollView>\r\n        <View style={logEvent.spacer} />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}"],"mappings":";;;;;;AACA,SAASA,QAAT;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,KAA7B;;;AAEA,gBAAe,YAAM;EACnBC,OAAO,CAACC,GAAR,CAAY,IAAIC,IAAJ,CAASN,IAAI,CAAC,CAAD,CAAJ,CAAQO,IAAjB,EAAuBC,cAAvB,CAAsC,OAAtC,EAA+C;IAAEC,KAAK,EAAE;EAAT,CAA/C,IAAqE,GAArE,GAA2E,IAAIH,IAAJ,CAASN,IAAI,CAAC,CAAD,CAAJ,CAAQO,IAAjB,EAAuBG,MAAvB,EAAvF;EAEAN,OAAO,CAACC,GAAR,CAAYL,IAAZ;;EACA,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO;IACxB,IAAIC,YAAY,GAAG,EAAnB;IACA,IAAMC,QAAQ,GAAGF,CAAC,CAACG,IAAF,CACf,UAACC,CAAD,EAAIC,CAAJ;MAAA,OAAUC,MAAM,CAAC,IAAIZ,IAAJ,CAASU,CAAC,CAACT,IAAX,CAAD,CAAN,GAA2BW,MAAM,CAAC,IAAIZ,IAAJ,CAASW,CAAC,CAACV,IAAX,CAAD,CAA3C;IAAA,CADe,CAAjB;IAGAH,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACK,MAArB;IACA,IAAIC,CAAC,GAAG,EAAR;IACA,IAAIC,IAAI,GAAGP,QAAQ,CAAC,CAAD,CAAnB;;IACA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACK,MAA7B,EAAqCG,CAAC,EAAtC,EAA0C;MACxC,IAAIC,KAAK,GAAG,IAAIjB,IAAJ,CAASQ,QAAQ,CAACQ,CAAD,CAAR,CAAYf,IAArB,CAAZ;MACA,IAAIiB,QAAQ,GAAG,IAAIlB,IAAJ,CAASe,IAAI,CAACd,IAAd,CAAf;;MACA,IACEgB,KAAK,CAACE,WAAN,MAAuBD,QAAQ,CAACC,WAAT,EAAvB,IACGF,KAAK,CAACG,QAAN,MAAoBF,QAAQ,CAACE,QAAT,EADvB,IAEGH,KAAK,CAACI,OAAN,MAAmBH,QAAQ,CAACG,OAAT,EAHxB,EAIE;QACAP,CAAC,CAACQ,IAAF,CAAOd,QAAQ,CAACQ,CAAD,CAAf;MACD,CAND,MAMO;QACLT,YAAY,CAACe,IAAb,CAAkBR,CAAlB;QACAC,IAAI,GAAGP,QAAQ,CAACQ,CAAD,CAAf;QACAF,CAAC,GAAG,CAACN,QAAQ,CAACQ,CAAD,CAAT,CAAJ;MACD;IACF;;IACDT,YAAY,CAACe,IAAb,CAAkBR,CAAlB;IACA,OAAOP,YAAP;EACD,CAzBD;;EA2BA,IAAMgB,OAAO,GAAG,SAAVA,OAAU,CAACjB,CAAD,EAAO;IACrB,IAAIA,CAAC,GAAG,EAAR,EAAY;MACV,OAAO,MAAMA,CAAb;IACD,CAFD,MAEO;MACL,OAAOA,CAAP;IACD;EACF,CAND;;EASA,IAAMkB,OAAO,GAAG,SAAVA,OAAU,CAAClB,CAAD,EAAImB,KAAJ,EAAWC,KAAX,EAAqB;IACnC,IAAIC,GAAG,GAAGD,KAAK,GAAGD,KAAlB;IACA3B,OAAO,CAACC,GAAR,CAAY4B,GAAZ;IACA,IAAI1B,IAAI,GAAG,IAAID,IAAJ,CAASM,CAAC,CAAC,CAAD,CAAD,CAAKL,IAAd,CAAX;IACA,OAEE,KAAC,UAAD;MAEE,KAAK,EAAEV,QAAQ,CAACqC,IAFlB;MAGE,QAAQ,EAAE,IAHZ;MAIE,8BAA8B,EAAE,KAJlC;MAKE,mBAAmB,EAAE,GALvB;MAME,gBAAgB,EAAC,MANnB;MAOE,aAAa;IAPf,GACOD,GADP,CAFF;EAsCD,CA1CD;;EA4CA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEpC,QAAQ,CAACsC,SAAtB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEtC,QAAQ,CAACuC;IAAtB,EADF,EAEE,KAAC,IAAD;MAAM,KAAK,EAAEvC,QAAQ,CAACwC;IAAtB,EAFF,EAGE,KAAC,IAAD;MAAM,KAAK,EAAExC,QAAQ,CAACyC,MAAtB;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEzC,QAAQ,CAACmC,KAAtB;QAAA;MAAA;IADF,EAHF,EAME,MAAC,UAAD;MAAY,KAAK,EAAEnC,QAAQ,CAAC0C,OAA5B;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAE1C,QAAQ,CAAC2C,OAAtB;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAE3C,QAAQ,CAAC4C,WAAtB;UAAA;QAAA;MADF,EADF,EAIE,KAAC,UAAD;QACE,UAAU,MADZ;QAEE,8BAA8B,EAAE,KAFlC;QAGE,mBAAmB,EAAE,GAHvB;QAIE,gBAAgB,EAAC,MAJnB;QAKE,aAAa,MALf;QAAA,UAQI9B,UAAU,CAACX,IAAD,CAAV,CAAiB0C,GAAjB,CAAqB,UAACpB,CAAD,EAAIS,KAAJ;UAAA,OACnBD,OAAO,CAACR,CAAD,EAAIS,KAAJ,EAAW,SAAX,CADY;QAAA,CAArB;MARJ,EAJF,EAiBE,KAAC,IAAD;QAAM,KAAK,EAAElC,QAAQ,CAAC2C,OAAtB;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAE3C,QAAQ,CAAC4C,WAAtB;UAAA;QAAA;MADF,EAjBF,EAoBE,KAAC,UAAD;QACE,UAAU,MADZ;QAEE,8BAA8B,EAAE,KAFlC;QAGE,mBAAmB,EAAE,GAHvB;QAIE,gBAAgB,EAAC,MAJnB;QAKE,aAAa,MALf;QAAA,UAQI9B,UAAU,CAACV,KAAD,CAAV,CAAkByC,GAAlB,CAAsB,UAACpB,CAAD,EAAIS,KAAJ;UAAA,OACpBD,OAAO,CAACR,CAAD,EAAIS,KAAJ,EAAW,OAAX,CADa;QAAA,CAAtB;MARJ,EApBF,EAiCE,KAAC,IAAD;QAAM,KAAK,EAAElC,QAAQ,CAAC2C,OAAtB;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAE3C,QAAQ,CAAC4C,WAAtB;UAAA;QAAA;MADF,EAjCF,EAoCE,KAAC,UAAD;QACE,UAAU,MADZ;QAEE,8BAA8B,EAAE,KAFlC;QAGE,mBAAmB,EAAE,GAHvB;QAIE,gBAAgB,EAAC,MAJnB;QAKE,aAAa,MALf;QAAA,UAQI9B,UAAU,CAACT,KAAD,CAAV,CAAkBwC,GAAlB,CAAsB,UAACpB,CAAD,EAAIS,KAAJ;UAAA,OACpBD,OAAO,CAACR,CAAD,EAAIS,KAAJ,EAAW,OAAX,CADa;QAAA,CAAtB;MARJ,EApCF,EAiDE,KAAC,IAAD;QAAM,KAAK,EAAElC,QAAQ,CAAC8C;MAAtB,EAjDF;IAAA,EANF;EAAA,EADF;AA4DD,CAhJD"},"metadata":{},"sourceType":"module"}