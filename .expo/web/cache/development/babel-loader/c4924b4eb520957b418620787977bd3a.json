{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useEffect, useRef } from 'react';\nimport { home } from \"./../style/style.js\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport BloodSugarGraph from \"./BloodSugarGraph.js\";\nimport Sidebar from \"./Sidebar.js\";\nimport BloodSugarAnalysis from \"./BloodSugarAnalysis.js\";\nimport LogEvent from \"./LogEvent.js\";\nimport BloodPressureGraph from \"./BloodPressureGraph.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var shift = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    Animated.timing(shift, {\n      toValue: 100,\n      duration: 1000,\n      useNativeDriver: true\n    }).start();\n  }, []);\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: home.container,\n      children: [_jsx(View, {\n        style: home.background,\n        children: _jsx(Image, {\n          style: home.backgroundImage,\n          source: require(\"../assets/tree.svg\")\n        })\n      }), _jsx(Text, {\n        style: home.title,\n        children: Greeting()\n      }), _jsx(Animated.Text, {\n        style: [home.subtitle, {\n          color: shift.interpolate({\n            inputRange: [0, 100],\n            outputRange: ['#000', '#fff']\n          })\n        }],\n        children: getDate()\n      }), _jsx(Sidebar, {})]\n    })\n  });\n});\n\nfunction Greeting() {\n  var greeting = \"Good Morning\";\n  var time = new Date();\n\n  if (time.getHours() > 18) {\n    greeting = \"Good Evening\";\n  } else if (time.getHours() > 12) {\n    greeting = \"Good Afternoon\";\n  }\n\n  return greeting;\n}\n\nfunction getDate() {\n  var date = new Date();\n  var month = date.toLocaleString('default', {\n    month: 'long'\n  });\n  var day = date.getDate();\n  return month + \" \" + day;\n}","map":{"version":3,"names":["useEffect","useRef","home","LinearGradient","BloodSugarGraph","Sidebar","BloodSugarAnalysis","LogEvent","BloodPressureGraph","shift","Animated","Value","current","timing","toValue","duration","useNativeDriver","start","container","background","backgroundImage","require","title","Greeting","subtitle","color","interpolate","inputRange","outputRange","getDate","greeting","time","Date","getHours","date","month","toLocaleString","day"],"sources":["C:/Users/thund/OneDrive/Documents/HTML/breathanaylzer/components/HomePage.js"],"sourcesContent":["import { Text, View, SafeAreaView, Animated, Image } from 'react-native';\r\nimport { useEffect, useRef } from 'react';\r\nimport { home } from './../style/style.js';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport BloodSugarGraph from './BloodSugarGraph.js';\r\nimport Sidebar from './Sidebar.js';\r\nimport BloodSugarAnalysis from './BloodSugarAnalysis.js';\r\nimport LogEvent from './LogEvent.js';\r\nimport BloodPressureGraph from './BloodPressureGraph.js';\r\n\r\n\r\n\r\nexport default () => {\r\n\r\n  const shift = useRef(new Animated.Value(0)).current;\r\n  useEffect(() => {\r\n    Animated.timing(shift, {\r\n      toValue: 100,\r\n      duration: 1000,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <View style={home.container}>\r\n        <View style={home.background}>\r\n          <Image\r\n            style={home.backgroundImage}\r\n            source={require('../assets/tree.svg')}\r\n          />\r\n        </View>\r\n        <Text\r\n          style={home.title}\r\n        >\r\n          {Greeting()}\r\n        </Text>\r\n        {/* <Animated.Text\r\n          style={\r\n            [home.title, {\r\n              color: shift.interpolate({\r\n                inputRange: [0, 100],\r\n                outputRange: ['#000', '#fff'],\r\n              }),\r\n            }]}\r\n        >\r\n          {Greeting()}\r\n        </Animated.Text> */}\r\n        <Animated.Text\r\n          style={\r\n            [home.subtitle, {\r\n              color: shift.interpolate({\r\n                inputRange: [0, 100],\r\n                outputRange: ['#000', '#fff'],\r\n              }),\r\n            }]}\r\n        >\r\n          {getDate()}\r\n        </Animated.Text>\r\n        {/* <View style={home.mainInfograph}>\r\n          <View style={home.mainInfographContent}>\r\n            <BloodSugarGraph />\r\n          </View>\r\n        </View>\r\n        <View style={home.subContent}>\r\n          <View style={home.infographAnalysis}>\r\n            <BloodSugarAnalysis />\r\n          </View>\r\n          <View style={home.inputData}>\r\n            <LogEvent />\r\n          </View>\r\n        </View>\r\n        <View style={home.bloodPressure}>\r\n          <View style={home.bloodPressureContent}>\r\n            <BloodPressureGraph />\r\n          </View>\r\n        </View> */}\r\n        <Sidebar />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nfunction Greeting() {\r\n  let greeting = \"Good Morning\";\r\n  let time = new Date();\r\n  if (time.getHours() > 18) {\r\n    greeting = \"Good Evening\";\r\n  } else if (time.getHours() > 12) {\r\n    greeting = \"Good Afternoon\";\r\n  }\r\n  return greeting;\r\n}\r\n\r\nfunction getDate() {\r\n  let date = new Date();\r\n  let month = date.toLocaleString('default', { month: 'long' });\r\n  let day = date.getDate();\r\n  return `${month} ${day}`;\r\n}"],"mappings":";;;;;AACA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,IAAT;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,eAAP;AACA,OAAOC,OAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,QAAP;AACA,OAAOC,kBAAP;;;AAIA,gBAAe,YAAM;EAEnB,IAAMC,KAAK,GAAGR,MAAM,CAAC,IAAIS,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA5C;EACAZ,SAAS,CAAC,YAAM;IACdU,QAAQ,CAACG,MAAT,CAAgBJ,KAAhB,EAAuB;MACrBK,OAAO,EAAE,GADY;MAErBC,QAAQ,EAAE,IAFW;MAGrBC,eAAe,EAAE;IAHI,CAAvB,EAIGC,KAJH;EAKD,CANQ,EAMN,EANM,CAAT;EAQA,OACE,KAAC,YAAD;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEf,IAAI,CAACgB,SAAlB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAEhB,IAAI,CAACiB,UAAlB;QAAA,UACE,KAAC,KAAD;UACE,KAAK,EAAEjB,IAAI,CAACkB,eADd;UAEE,MAAM,EAAEC,OAAO;QAFjB;MADF,EADF,EAOE,KAAC,IAAD;QACE,KAAK,EAAEnB,IAAI,CAACoB,KADd;QAAA,UAGGC,QAAQ;MAHX,EAPF,EAuBE,KAAC,QAAD,CAAU,IAAV;QACE,KAAK,EACH,CAACrB,IAAI,CAACsB,QAAN,EAAgB;UACdC,KAAK,EAAEhB,KAAK,CAACiB,WAAN,CAAkB;YACvBC,UAAU,EAAE,CAAC,CAAD,EAAI,GAAJ,CADW;YAEvBC,WAAW,EAAE,CAAC,MAAD,EAAS,MAAT;UAFU,CAAlB;QADO,CAAhB,CAFJ;QAAA,UASGC,OAAO;MATV,EAvBF,EAoDE,KAAC,OAAD,KApDF;IAAA;EADF,EADF;AA0DD,CArED;;AAuEA,SAASN,QAAT,GAAoB;EAClB,IAAIO,QAAQ,GAAG,cAAf;EACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;EACA,IAAID,IAAI,CAACE,QAAL,KAAkB,EAAtB,EAA0B;IACxBH,QAAQ,GAAG,cAAX;EACD,CAFD,MAEO,IAAIC,IAAI,CAACE,QAAL,KAAkB,EAAtB,EAA0B;IAC/BH,QAAQ,GAAG,gBAAX;EACD;;EACD,OAAOA,QAAP;AACD;;AAED,SAASD,OAAT,GAAmB;EACjB,IAAIK,IAAI,GAAG,IAAIF,IAAJ,EAAX;EACA,IAAIG,KAAK,GAAGD,IAAI,CAACE,cAAL,CAAoB,SAApB,EAA+B;IAAED,KAAK,EAAE;EAAT,CAA/B,CAAZ;EACA,IAAIE,GAAG,GAAGH,IAAI,CAACL,OAAL,EAAV;EACA,OAAUM,KAAV,SAAmBE,GAAnB;AACD"},"metadata":{},"sourceType":"module"}